
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Usuario_Emprendimiento
 * 
 */
export type Usuario_Emprendimiento = $Result.DefaultSelection<Prisma.$Usuario_EmprendimientoPayload>
/**
 * Model Foto_Usuario
 * 
 */
export type Foto_Usuario = $Result.DefaultSelection<Prisma.$Foto_UsuarioPayload>
/**
 * Model Contactos
 * 
 */
export type Contactos = $Result.DefaultSelection<Prisma.$ContactosPayload>
/**
 * Model Emprendimiento
 * 
 */
export type Emprendimiento = $Result.DefaultSelection<Prisma.$EmprendimientoPayload>
/**
 * Model Emprendimiento_producto
 * 
 */
export type Emprendimiento_producto = $Result.DefaultSelection<Prisma.$Emprendimiento_productoPayload>
/**
 * Model Colores_marca
 * 
 */
export type Colores_marca = $Result.DefaultSelection<Prisma.$Colores_marcaPayload>
/**
 * Model Marketing_emprendimiento
 * 
 */
export type Marketing_emprendimiento = $Result.DefaultSelection<Prisma.$Marketing_emprendimientoPayload>
/**
 * Model Marketing
 * 
 */
export type Marketing = $Result.DefaultSelection<Prisma.$MarketingPayload>
/**
 * Model Publicaciones
 * 
 */
export type Publicaciones = $Result.DefaultSelection<Prisma.$PublicacionesPayload>
/**
 * Model Publicaciones_foto
 * 
 */
export type Publicaciones_foto = $Result.DefaultSelection<Prisma.$Publicaciones_fotoPayload>
/**
 * Model Productos
 * 
 */
export type Productos = $Result.DefaultSelection<Prisma.$ProductosPayload>
/**
 * Model Productos_foto
 * 
 */
export type Productos_foto = $Result.DefaultSelection<Prisma.$Productos_fotoPayload>
/**
 * Model Materiales_producto
 * 
 */
export type Materiales_producto = $Result.DefaultSelection<Prisma.$Materiales_productoPayload>
/**
 * Model Materiales
 * 
 */
export type Materiales = $Result.DefaultSelection<Prisma.$MaterialesPayload>
/**
 * Model Materiales_foto
 * 
 */
export type Materiales_foto = $Result.DefaultSelection<Prisma.$Materiales_fotoPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario_Emprendimiento`: Exposes CRUD operations for the **Usuario_Emprendimiento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuario_Emprendimientos
    * const usuario_Emprendimientos = await prisma.usuario_Emprendimiento.findMany()
    * ```
    */
  get usuario_Emprendimiento(): Prisma.Usuario_EmprendimientoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.foto_Usuario`: Exposes CRUD operations for the **Foto_Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Foto_Usuarios
    * const foto_Usuarios = await prisma.foto_Usuario.findMany()
    * ```
    */
  get foto_Usuario(): Prisma.Foto_UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.contactos`: Exposes CRUD operations for the **Contactos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contactos
    * const contactos = await prisma.contactos.findMany()
    * ```
    */
  get contactos(): Prisma.ContactosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.emprendimiento`: Exposes CRUD operations for the **Emprendimiento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Emprendimientos
    * const emprendimientos = await prisma.emprendimiento.findMany()
    * ```
    */
  get emprendimiento(): Prisma.EmprendimientoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.emprendimiento_producto`: Exposes CRUD operations for the **Emprendimiento_producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Emprendimiento_productos
    * const emprendimiento_productos = await prisma.emprendimiento_producto.findMany()
    * ```
    */
  get emprendimiento_producto(): Prisma.Emprendimiento_productoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.colores_marca`: Exposes CRUD operations for the **Colores_marca** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Colores_marcas
    * const colores_marcas = await prisma.colores_marca.findMany()
    * ```
    */
  get colores_marca(): Prisma.Colores_marcaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.marketing_emprendimiento`: Exposes CRUD operations for the **Marketing_emprendimiento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Marketing_emprendimientos
    * const marketing_emprendimientos = await prisma.marketing_emprendimiento.findMany()
    * ```
    */
  get marketing_emprendimiento(): Prisma.Marketing_emprendimientoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.marketing`: Exposes CRUD operations for the **Marketing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Marketings
    * const marketings = await prisma.marketing.findMany()
    * ```
    */
  get marketing(): Prisma.MarketingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.publicaciones`: Exposes CRUD operations for the **Publicaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Publicaciones
    * const publicaciones = await prisma.publicaciones.findMany()
    * ```
    */
  get publicaciones(): Prisma.PublicacionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.publicaciones_foto`: Exposes CRUD operations for the **Publicaciones_foto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Publicaciones_fotos
    * const publicaciones_fotos = await prisma.publicaciones_foto.findMany()
    * ```
    */
  get publicaciones_foto(): Prisma.Publicaciones_fotoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productos`: Exposes CRUD operations for the **Productos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.productos.findMany()
    * ```
    */
  get productos(): Prisma.ProductosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productos_foto`: Exposes CRUD operations for the **Productos_foto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos_fotos
    * const productos_fotos = await prisma.productos_foto.findMany()
    * ```
    */
  get productos_foto(): Prisma.Productos_fotoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.materiales_producto`: Exposes CRUD operations for the **Materiales_producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Materiales_productos
    * const materiales_productos = await prisma.materiales_producto.findMany()
    * ```
    */
  get materiales_producto(): Prisma.Materiales_productoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.materiales`: Exposes CRUD operations for the **Materiales** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Materiales
    * const materiales = await prisma.materiales.findMany()
    * ```
    */
  get materiales(): Prisma.MaterialesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.materiales_foto`: Exposes CRUD operations for the **Materiales_foto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Materiales_fotos
    * const materiales_fotos = await prisma.materiales_foto.findMany()
    * ```
    */
  get materiales_foto(): Prisma.Materiales_fotoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Usuario_Emprendimiento: 'Usuario_Emprendimiento',
    Foto_Usuario: 'Foto_Usuario',
    Contactos: 'Contactos',
    Emprendimiento: 'Emprendimiento',
    Emprendimiento_producto: 'Emprendimiento_producto',
    Colores_marca: 'Colores_marca',
    Marketing_emprendimiento: 'Marketing_emprendimiento',
    Marketing: 'Marketing',
    Publicaciones: 'Publicaciones',
    Publicaciones_foto: 'Publicaciones_foto',
    Productos: 'Productos',
    Productos_foto: 'Productos_foto',
    Materiales_producto: 'Materiales_producto',
    Materiales: 'Materiales',
    Materiales_foto: 'Materiales_foto'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "usuario_Emprendimiento" | "foto_Usuario" | "contactos" | "emprendimiento" | "emprendimiento_producto" | "colores_marca" | "marketing_emprendimiento" | "marketing" | "publicaciones" | "publicaciones_foto" | "productos" | "productos_foto" | "materiales_producto" | "materiales" | "materiales_foto"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Usuario_Emprendimiento: {
        payload: Prisma.$Usuario_EmprendimientoPayload<ExtArgs>
        fields: Prisma.Usuario_EmprendimientoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Usuario_EmprendimientoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Usuario_EmprendimientoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload>
          }
          findFirst: {
            args: Prisma.Usuario_EmprendimientoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Usuario_EmprendimientoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload>
          }
          findMany: {
            args: Prisma.Usuario_EmprendimientoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload>[]
          }
          create: {
            args: Prisma.Usuario_EmprendimientoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload>
          }
          createMany: {
            args: Prisma.Usuario_EmprendimientoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Usuario_EmprendimientoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload>[]
          }
          delete: {
            args: Prisma.Usuario_EmprendimientoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload>
          }
          update: {
            args: Prisma.Usuario_EmprendimientoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload>
          }
          deleteMany: {
            args: Prisma.Usuario_EmprendimientoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Usuario_EmprendimientoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Usuario_EmprendimientoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload>[]
          }
          upsert: {
            args: Prisma.Usuario_EmprendimientoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Usuario_EmprendimientoPayload>
          }
          aggregate: {
            args: Prisma.Usuario_EmprendimientoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario_Emprendimiento>
          }
          groupBy: {
            args: Prisma.Usuario_EmprendimientoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Usuario_EmprendimientoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Usuario_EmprendimientoCountArgs<ExtArgs>
            result: $Utils.Optional<Usuario_EmprendimientoCountAggregateOutputType> | number
          }
        }
      }
      Foto_Usuario: {
        payload: Prisma.$Foto_UsuarioPayload<ExtArgs>
        fields: Prisma.Foto_UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Foto_UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Foto_UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload>
          }
          findFirst: {
            args: Prisma.Foto_UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Foto_UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload>
          }
          findMany: {
            args: Prisma.Foto_UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload>[]
          }
          create: {
            args: Prisma.Foto_UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload>
          }
          createMany: {
            args: Prisma.Foto_UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Foto_UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload>[]
          }
          delete: {
            args: Prisma.Foto_UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload>
          }
          update: {
            args: Prisma.Foto_UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.Foto_UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Foto_UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Foto_UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.Foto_UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Foto_UsuarioPayload>
          }
          aggregate: {
            args: Prisma.Foto_UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFoto_Usuario>
          }
          groupBy: {
            args: Prisma.Foto_UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Foto_UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.Foto_UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<Foto_UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Contactos: {
        payload: Prisma.$ContactosPayload<ExtArgs>
        fields: Prisma.ContactosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContactosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContactosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload>
          }
          findFirst: {
            args: Prisma.ContactosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContactosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload>
          }
          findMany: {
            args: Prisma.ContactosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload>[]
          }
          create: {
            args: Prisma.ContactosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload>
          }
          createMany: {
            args: Prisma.ContactosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContactosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload>[]
          }
          delete: {
            args: Prisma.ContactosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload>
          }
          update: {
            args: Prisma.ContactosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload>
          }
          deleteMany: {
            args: Prisma.ContactosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContactosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ContactosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload>[]
          }
          upsert: {
            args: Prisma.ContactosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactosPayload>
          }
          aggregate: {
            args: Prisma.ContactosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContactos>
          }
          groupBy: {
            args: Prisma.ContactosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContactosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContactosCountArgs<ExtArgs>
            result: $Utils.Optional<ContactosCountAggregateOutputType> | number
          }
        }
      }
      Emprendimiento: {
        payload: Prisma.$EmprendimientoPayload<ExtArgs>
        fields: Prisma.EmprendimientoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmprendimientoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmprendimientoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload>
          }
          findFirst: {
            args: Prisma.EmprendimientoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmprendimientoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload>
          }
          findMany: {
            args: Prisma.EmprendimientoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload>[]
          }
          create: {
            args: Prisma.EmprendimientoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload>
          }
          createMany: {
            args: Prisma.EmprendimientoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EmprendimientoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload>[]
          }
          delete: {
            args: Prisma.EmprendimientoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload>
          }
          update: {
            args: Prisma.EmprendimientoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload>
          }
          deleteMany: {
            args: Prisma.EmprendimientoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmprendimientoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EmprendimientoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload>[]
          }
          upsert: {
            args: Prisma.EmprendimientoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmprendimientoPayload>
          }
          aggregate: {
            args: Prisma.EmprendimientoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmprendimiento>
          }
          groupBy: {
            args: Prisma.EmprendimientoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmprendimientoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmprendimientoCountArgs<ExtArgs>
            result: $Utils.Optional<EmprendimientoCountAggregateOutputType> | number
          }
        }
      }
      Emprendimiento_producto: {
        payload: Prisma.$Emprendimiento_productoPayload<ExtArgs>
        fields: Prisma.Emprendimiento_productoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Emprendimiento_productoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Emprendimiento_productoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload>
          }
          findFirst: {
            args: Prisma.Emprendimiento_productoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Emprendimiento_productoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload>
          }
          findMany: {
            args: Prisma.Emprendimiento_productoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload>[]
          }
          create: {
            args: Prisma.Emprendimiento_productoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload>
          }
          createMany: {
            args: Prisma.Emprendimiento_productoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Emprendimiento_productoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload>[]
          }
          delete: {
            args: Prisma.Emprendimiento_productoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload>
          }
          update: {
            args: Prisma.Emprendimiento_productoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload>
          }
          deleteMany: {
            args: Prisma.Emprendimiento_productoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Emprendimiento_productoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Emprendimiento_productoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload>[]
          }
          upsert: {
            args: Prisma.Emprendimiento_productoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Emprendimiento_productoPayload>
          }
          aggregate: {
            args: Prisma.Emprendimiento_productoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmprendimiento_producto>
          }
          groupBy: {
            args: Prisma.Emprendimiento_productoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Emprendimiento_productoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Emprendimiento_productoCountArgs<ExtArgs>
            result: $Utils.Optional<Emprendimiento_productoCountAggregateOutputType> | number
          }
        }
      }
      Colores_marca: {
        payload: Prisma.$Colores_marcaPayload<ExtArgs>
        fields: Prisma.Colores_marcaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Colores_marcaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Colores_marcaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload>
          }
          findFirst: {
            args: Prisma.Colores_marcaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Colores_marcaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload>
          }
          findMany: {
            args: Prisma.Colores_marcaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload>[]
          }
          create: {
            args: Prisma.Colores_marcaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload>
          }
          createMany: {
            args: Prisma.Colores_marcaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Colores_marcaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload>[]
          }
          delete: {
            args: Prisma.Colores_marcaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload>
          }
          update: {
            args: Prisma.Colores_marcaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload>
          }
          deleteMany: {
            args: Prisma.Colores_marcaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Colores_marcaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Colores_marcaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload>[]
          }
          upsert: {
            args: Prisma.Colores_marcaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Colores_marcaPayload>
          }
          aggregate: {
            args: Prisma.Colores_marcaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateColores_marca>
          }
          groupBy: {
            args: Prisma.Colores_marcaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Colores_marcaGroupByOutputType>[]
          }
          count: {
            args: Prisma.Colores_marcaCountArgs<ExtArgs>
            result: $Utils.Optional<Colores_marcaCountAggregateOutputType> | number
          }
        }
      }
      Marketing_emprendimiento: {
        payload: Prisma.$Marketing_emprendimientoPayload<ExtArgs>
        fields: Prisma.Marketing_emprendimientoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Marketing_emprendimientoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Marketing_emprendimientoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload>
          }
          findFirst: {
            args: Prisma.Marketing_emprendimientoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Marketing_emprendimientoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload>
          }
          findMany: {
            args: Prisma.Marketing_emprendimientoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload>[]
          }
          create: {
            args: Prisma.Marketing_emprendimientoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload>
          }
          createMany: {
            args: Prisma.Marketing_emprendimientoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Marketing_emprendimientoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload>[]
          }
          delete: {
            args: Prisma.Marketing_emprendimientoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload>
          }
          update: {
            args: Prisma.Marketing_emprendimientoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload>
          }
          deleteMany: {
            args: Prisma.Marketing_emprendimientoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Marketing_emprendimientoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Marketing_emprendimientoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload>[]
          }
          upsert: {
            args: Prisma.Marketing_emprendimientoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Marketing_emprendimientoPayload>
          }
          aggregate: {
            args: Prisma.Marketing_emprendimientoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMarketing_emprendimiento>
          }
          groupBy: {
            args: Prisma.Marketing_emprendimientoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Marketing_emprendimientoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Marketing_emprendimientoCountArgs<ExtArgs>
            result: $Utils.Optional<Marketing_emprendimientoCountAggregateOutputType> | number
          }
        }
      }
      Marketing: {
        payload: Prisma.$MarketingPayload<ExtArgs>
        fields: Prisma.MarketingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MarketingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MarketingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload>
          }
          findFirst: {
            args: Prisma.MarketingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MarketingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload>
          }
          findMany: {
            args: Prisma.MarketingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload>[]
          }
          create: {
            args: Prisma.MarketingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload>
          }
          createMany: {
            args: Prisma.MarketingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MarketingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload>[]
          }
          delete: {
            args: Prisma.MarketingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload>
          }
          update: {
            args: Prisma.MarketingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload>
          }
          deleteMany: {
            args: Prisma.MarketingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MarketingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MarketingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload>[]
          }
          upsert: {
            args: Prisma.MarketingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketingPayload>
          }
          aggregate: {
            args: Prisma.MarketingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMarketing>
          }
          groupBy: {
            args: Prisma.MarketingGroupByArgs<ExtArgs>
            result: $Utils.Optional<MarketingGroupByOutputType>[]
          }
          count: {
            args: Prisma.MarketingCountArgs<ExtArgs>
            result: $Utils.Optional<MarketingCountAggregateOutputType> | number
          }
        }
      }
      Publicaciones: {
        payload: Prisma.$PublicacionesPayload<ExtArgs>
        fields: Prisma.PublicacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PublicacionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PublicacionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          findFirst: {
            args: Prisma.PublicacionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PublicacionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          findMany: {
            args: Prisma.PublicacionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>[]
          }
          create: {
            args: Prisma.PublicacionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          createMany: {
            args: Prisma.PublicacionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PublicacionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>[]
          }
          delete: {
            args: Prisma.PublicacionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          update: {
            args: Prisma.PublicacionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          deleteMany: {
            args: Prisma.PublicacionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PublicacionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PublicacionesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>[]
          }
          upsert: {
            args: Prisma.PublicacionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          aggregate: {
            args: Prisma.PublicacionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePublicaciones>
          }
          groupBy: {
            args: Prisma.PublicacionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PublicacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.PublicacionesCountArgs<ExtArgs>
            result: $Utils.Optional<PublicacionesCountAggregateOutputType> | number
          }
        }
      }
      Publicaciones_foto: {
        payload: Prisma.$Publicaciones_fotoPayload<ExtArgs>
        fields: Prisma.Publicaciones_fotoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Publicaciones_fotoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Publicaciones_fotoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload>
          }
          findFirst: {
            args: Prisma.Publicaciones_fotoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Publicaciones_fotoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload>
          }
          findMany: {
            args: Prisma.Publicaciones_fotoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload>[]
          }
          create: {
            args: Prisma.Publicaciones_fotoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload>
          }
          createMany: {
            args: Prisma.Publicaciones_fotoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Publicaciones_fotoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload>[]
          }
          delete: {
            args: Prisma.Publicaciones_fotoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload>
          }
          update: {
            args: Prisma.Publicaciones_fotoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload>
          }
          deleteMany: {
            args: Prisma.Publicaciones_fotoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Publicaciones_fotoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Publicaciones_fotoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload>[]
          }
          upsert: {
            args: Prisma.Publicaciones_fotoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Publicaciones_fotoPayload>
          }
          aggregate: {
            args: Prisma.Publicaciones_fotoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePublicaciones_foto>
          }
          groupBy: {
            args: Prisma.Publicaciones_fotoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Publicaciones_fotoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Publicaciones_fotoCountArgs<ExtArgs>
            result: $Utils.Optional<Publicaciones_fotoCountAggregateOutputType> | number
          }
        }
      }
      Productos: {
        payload: Prisma.$ProductosPayload<ExtArgs>
        fields: Prisma.ProductosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          findFirst: {
            args: Prisma.ProductosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          findMany: {
            args: Prisma.ProductosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>[]
          }
          create: {
            args: Prisma.ProductosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          createMany: {
            args: Prisma.ProductosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>[]
          }
          delete: {
            args: Prisma.ProductosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          update: {
            args: Prisma.ProductosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          deleteMany: {
            args: Prisma.ProductosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>[]
          }
          upsert: {
            args: Prisma.ProductosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          aggregate: {
            args: Prisma.ProductosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductos>
          }
          groupBy: {
            args: Prisma.ProductosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductosCountArgs<ExtArgs>
            result: $Utils.Optional<ProductosCountAggregateOutputType> | number
          }
        }
      }
      Productos_foto: {
        payload: Prisma.$Productos_fotoPayload<ExtArgs>
        fields: Prisma.Productos_fotoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Productos_fotoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Productos_fotoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload>
          }
          findFirst: {
            args: Prisma.Productos_fotoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Productos_fotoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload>
          }
          findMany: {
            args: Prisma.Productos_fotoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload>[]
          }
          create: {
            args: Prisma.Productos_fotoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload>
          }
          createMany: {
            args: Prisma.Productos_fotoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Productos_fotoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload>[]
          }
          delete: {
            args: Prisma.Productos_fotoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload>
          }
          update: {
            args: Prisma.Productos_fotoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload>
          }
          deleteMany: {
            args: Prisma.Productos_fotoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Productos_fotoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Productos_fotoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload>[]
          }
          upsert: {
            args: Prisma.Productos_fotoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Productos_fotoPayload>
          }
          aggregate: {
            args: Prisma.Productos_fotoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductos_foto>
          }
          groupBy: {
            args: Prisma.Productos_fotoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Productos_fotoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Productos_fotoCountArgs<ExtArgs>
            result: $Utils.Optional<Productos_fotoCountAggregateOutputType> | number
          }
        }
      }
      Materiales_producto: {
        payload: Prisma.$Materiales_productoPayload<ExtArgs>
        fields: Prisma.Materiales_productoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Materiales_productoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Materiales_productoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload>
          }
          findFirst: {
            args: Prisma.Materiales_productoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Materiales_productoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload>
          }
          findMany: {
            args: Prisma.Materiales_productoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload>[]
          }
          create: {
            args: Prisma.Materiales_productoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload>
          }
          createMany: {
            args: Prisma.Materiales_productoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Materiales_productoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload>[]
          }
          delete: {
            args: Prisma.Materiales_productoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload>
          }
          update: {
            args: Prisma.Materiales_productoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload>
          }
          deleteMany: {
            args: Prisma.Materiales_productoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Materiales_productoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Materiales_productoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload>[]
          }
          upsert: {
            args: Prisma.Materiales_productoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_productoPayload>
          }
          aggregate: {
            args: Prisma.Materiales_productoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMateriales_producto>
          }
          groupBy: {
            args: Prisma.Materiales_productoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Materiales_productoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Materiales_productoCountArgs<ExtArgs>
            result: $Utils.Optional<Materiales_productoCountAggregateOutputType> | number
          }
        }
      }
      Materiales: {
        payload: Prisma.$MaterialesPayload<ExtArgs>
        fields: Prisma.MaterialesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaterialesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaterialesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload>
          }
          findFirst: {
            args: Prisma.MaterialesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaterialesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload>
          }
          findMany: {
            args: Prisma.MaterialesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload>[]
          }
          create: {
            args: Prisma.MaterialesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload>
          }
          createMany: {
            args: Prisma.MaterialesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MaterialesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload>[]
          }
          delete: {
            args: Prisma.MaterialesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload>
          }
          update: {
            args: Prisma.MaterialesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload>
          }
          deleteMany: {
            args: Prisma.MaterialesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaterialesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MaterialesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload>[]
          }
          upsert: {
            args: Prisma.MaterialesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialesPayload>
          }
          aggregate: {
            args: Prisma.MaterialesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMateriales>
          }
          groupBy: {
            args: Prisma.MaterialesGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaterialesGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaterialesCountArgs<ExtArgs>
            result: $Utils.Optional<MaterialesCountAggregateOutputType> | number
          }
        }
      }
      Materiales_foto: {
        payload: Prisma.$Materiales_fotoPayload<ExtArgs>
        fields: Prisma.Materiales_fotoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Materiales_fotoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Materiales_fotoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload>
          }
          findFirst: {
            args: Prisma.Materiales_fotoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Materiales_fotoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload>
          }
          findMany: {
            args: Prisma.Materiales_fotoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload>[]
          }
          create: {
            args: Prisma.Materiales_fotoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload>
          }
          createMany: {
            args: Prisma.Materiales_fotoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Materiales_fotoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload>[]
          }
          delete: {
            args: Prisma.Materiales_fotoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload>
          }
          update: {
            args: Prisma.Materiales_fotoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload>
          }
          deleteMany: {
            args: Prisma.Materiales_fotoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Materiales_fotoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Materiales_fotoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload>[]
          }
          upsert: {
            args: Prisma.Materiales_fotoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Materiales_fotoPayload>
          }
          aggregate: {
            args: Prisma.Materiales_fotoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMateriales_foto>
          }
          groupBy: {
            args: Prisma.Materiales_fotoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Materiales_fotoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Materiales_fotoCountArgs<ExtArgs>
            result: $Utils.Optional<Materiales_fotoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    usuario_Emprendimiento?: Usuario_EmprendimientoOmit
    foto_Usuario?: Foto_UsuarioOmit
    contactos?: ContactosOmit
    emprendimiento?: EmprendimientoOmit
    emprendimiento_producto?: Emprendimiento_productoOmit
    colores_marca?: Colores_marcaOmit
    marketing_emprendimiento?: Marketing_emprendimientoOmit
    marketing?: MarketingOmit
    publicaciones?: PublicacionesOmit
    publicaciones_foto?: Publicaciones_fotoOmit
    productos?: ProductosOmit
    productos_foto?: Productos_fotoOmit
    materiales_producto?: Materiales_productoOmit
    materiales?: MaterialesOmit
    materiales_foto?: Materiales_fotoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    usuario_emprendimiento: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_emprendimiento?: boolean | UsuarioCountOutputTypeCountUsuario_emprendimientoArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountUsuario_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Usuario_EmprendimientoWhereInput
  }


  /**
   * Count Type Foto_UsuarioCountOutputType
   */

  export type Foto_UsuarioCountOutputType = {
    usuarios: number
    foto_contacto: number
  }

  export type Foto_UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Foto_UsuarioCountOutputTypeCountUsuariosArgs
    foto_contacto?: boolean | Foto_UsuarioCountOutputTypeCountFoto_contactoArgs
  }

  // Custom InputTypes
  /**
   * Foto_UsuarioCountOutputType without action
   */
  export type Foto_UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_UsuarioCountOutputType
     */
    select?: Foto_UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Foto_UsuarioCountOutputType without action
   */
  export type Foto_UsuarioCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * Foto_UsuarioCountOutputType without action
   */
  export type Foto_UsuarioCountOutputTypeCountFoto_contactoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactosWhereInput
  }


  /**
   * Count Type ContactosCountOutputType
   */

  export type ContactosCountOutputType = {
    usuario: number
  }

  export type ContactosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | ContactosCountOutputTypeCountUsuarioArgs
  }

  // Custom InputTypes
  /**
   * ContactosCountOutputType without action
   */
  export type ContactosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContactosCountOutputType
     */
    select?: ContactosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ContactosCountOutputType without action
   */
  export type ContactosCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }


  /**
   * Count Type EmprendimientoCountOutputType
   */

  export type EmprendimientoCountOutputType = {
    usuario: number
    marketing_emprendimiento: number
    emprendimiento_producto: number
    usuario_emprendimiento: number
  }

  export type EmprendimientoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | EmprendimientoCountOutputTypeCountUsuarioArgs
    marketing_emprendimiento?: boolean | EmprendimientoCountOutputTypeCountMarketing_emprendimientoArgs
    emprendimiento_producto?: boolean | EmprendimientoCountOutputTypeCountEmprendimiento_productoArgs
    usuario_emprendimiento?: boolean | EmprendimientoCountOutputTypeCountUsuario_emprendimientoArgs
  }

  // Custom InputTypes
  /**
   * EmprendimientoCountOutputType without action
   */
  export type EmprendimientoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmprendimientoCountOutputType
     */
    select?: EmprendimientoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmprendimientoCountOutputType without action
   */
  export type EmprendimientoCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * EmprendimientoCountOutputType without action
   */
  export type EmprendimientoCountOutputTypeCountMarketing_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Marketing_emprendimientoWhereInput
  }

  /**
   * EmprendimientoCountOutputType without action
   */
  export type EmprendimientoCountOutputTypeCountEmprendimiento_productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Emprendimiento_productoWhereInput
  }

  /**
   * EmprendimientoCountOutputType without action
   */
  export type EmprendimientoCountOutputTypeCountUsuario_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Usuario_EmprendimientoWhereInput
  }


  /**
   * Count Type Colores_marcaCountOutputType
   */

  export type Colores_marcaCountOutputType = {
    usuario_emprendimiento: number
  }

  export type Colores_marcaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_emprendimiento?: boolean | Colores_marcaCountOutputTypeCountUsuario_emprendimientoArgs
  }

  // Custom InputTypes
  /**
   * Colores_marcaCountOutputType without action
   */
  export type Colores_marcaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marcaCountOutputType
     */
    select?: Colores_marcaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Colores_marcaCountOutputType without action
   */
  export type Colores_marcaCountOutputTypeCountUsuario_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Usuario_EmprendimientoWhereInput
  }


  /**
   * Count Type MarketingCountOutputType
   */

  export type MarketingCountOutputType = {
    marketing_emprendimiento: number
  }

  export type MarketingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    marketing_emprendimiento?: boolean | MarketingCountOutputTypeCountMarketing_emprendimientoArgs
  }

  // Custom InputTypes
  /**
   * MarketingCountOutputType without action
   */
  export type MarketingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketingCountOutputType
     */
    select?: MarketingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MarketingCountOutputType without action
   */
  export type MarketingCountOutputTypeCountMarketing_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Marketing_emprendimientoWhereInput
  }


  /**
   * Count Type PublicacionesCountOutputType
   */

  export type PublicacionesCountOutputType = {
    marketing: number
  }

  export type PublicacionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    marketing?: boolean | PublicacionesCountOutputTypeCountMarketingArgs
  }

  // Custom InputTypes
  /**
   * PublicacionesCountOutputType without action
   */
  export type PublicacionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesCountOutputType
     */
    select?: PublicacionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PublicacionesCountOutputType without action
   */
  export type PublicacionesCountOutputTypeCountMarketingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarketingWhereInput
  }


  /**
   * Count Type Publicaciones_fotoCountOutputType
   */

  export type Publicaciones_fotoCountOutputType = {
    publicaciones: number
  }

  export type Publicaciones_fotoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    publicaciones?: boolean | Publicaciones_fotoCountOutputTypeCountPublicacionesArgs
  }

  // Custom InputTypes
  /**
   * Publicaciones_fotoCountOutputType without action
   */
  export type Publicaciones_fotoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_fotoCountOutputType
     */
    select?: Publicaciones_fotoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Publicaciones_fotoCountOutputType without action
   */
  export type Publicaciones_fotoCountOutputTypeCountPublicacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionesWhereInput
  }


  /**
   * Count Type ProductosCountOutputType
   */

  export type ProductosCountOutputType = {
    emprendimiento: number
    materiales_producto: number
    emprendimiento_productos: number
  }

  export type ProductosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    emprendimiento?: boolean | ProductosCountOutputTypeCountEmprendimientoArgs
    materiales_producto?: boolean | ProductosCountOutputTypeCountMateriales_productoArgs
    emprendimiento_productos?: boolean | ProductosCountOutputTypeCountEmprendimiento_productosArgs
  }

  // Custom InputTypes
  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductosCountOutputType
     */
    select?: ProductosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountEmprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmprendimientoWhereInput
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountMateriales_productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Materiales_productoWhereInput
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountEmprendimiento_productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Emprendimiento_productoWhereInput
  }


  /**
   * Count Type Productos_fotoCountOutputType
   */

  export type Productos_fotoCountOutputType = {
    productos: number
    emprendimiento_productofoto: number
  }

  export type Productos_fotoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Productos_fotoCountOutputTypeCountProductosArgs
    emprendimiento_productofoto?: boolean | Productos_fotoCountOutputTypeCountEmprendimiento_productofotoArgs
  }

  // Custom InputTypes
  /**
   * Productos_fotoCountOutputType without action
   */
  export type Productos_fotoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_fotoCountOutputType
     */
    select?: Productos_fotoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Productos_fotoCountOutputType without action
   */
  export type Productos_fotoCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductosWhereInput
  }

  /**
   * Productos_fotoCountOutputType without action
   */
  export type Productos_fotoCountOutputTypeCountEmprendimiento_productofotoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmprendimientoWhereInput
  }


  /**
   * Count Type MaterialesCountOutputType
   */

  export type MaterialesCountOutputType = {
    materiales_producto: number
  }

  export type MaterialesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiales_producto?: boolean | MaterialesCountOutputTypeCountMateriales_productoArgs
  }

  // Custom InputTypes
  /**
   * MaterialesCountOutputType without action
   */
  export type MaterialesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialesCountOutputType
     */
    select?: MaterialesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MaterialesCountOutputType without action
   */
  export type MaterialesCountOutputTypeCountMateriales_productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Materiales_productoWhereInput
  }


  /**
   * Count Type Materiales_fotoCountOutputType
   */

  export type Materiales_fotoCountOutputType = {
    materiales: number
  }

  export type Materiales_fotoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiales?: boolean | Materiales_fotoCountOutputTypeCountMaterialesArgs
  }

  // Custom InputTypes
  /**
   * Materiales_fotoCountOutputType without action
   */
  export type Materiales_fotoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_fotoCountOutputType
     */
    select?: Materiales_fotoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Materiales_fotoCountOutputType without action
   */
  export type Materiales_fotoCountOutputTypeCountMaterialesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    foto_perfil: number | null
    contacto: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    foto_perfil: number | null
    contacto: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    email: string | null
    contra: string | null
    nombre: string | null
    foto_perfil: number | null
    typo_id: string | null
    contacto: number | null
  }

  export type UsuarioMaxAggregateOutputType = {
    email: string | null
    contra: string | null
    nombre: string | null
    foto_perfil: number | null
    typo_id: string | null
    contacto: number | null
  }

  export type UsuarioCountAggregateOutputType = {
    email: number
    contra: number
    nombre: number
    foto_perfil: number
    typo_id: number
    contacto: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    foto_perfil?: true
    contacto?: true
  }

  export type UsuarioSumAggregateInputType = {
    foto_perfil?: true
    contacto?: true
  }

  export type UsuarioMinAggregateInputType = {
    email?: true
    contra?: true
    nombre?: true
    foto_perfil?: true
    typo_id?: true
    contacto?: true
  }

  export type UsuarioMaxAggregateInputType = {
    email?: true
    contra?: true
    nombre?: true
    foto_perfil?: true
    typo_id?: true
    contacto?: true
  }

  export type UsuarioCountAggregateInputType = {
    email?: true
    contra?: true
    nombre?: true
    foto_perfil?: true
    typo_id?: true
    contacto?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    email: string
    contra: string
    nombre: string
    foto_perfil: number
    typo_id: string
    contacto: number
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    email?: boolean
    contra?: boolean
    nombre?: boolean
    foto_perfil?: boolean
    typo_id?: boolean
    contacto?: boolean
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
    typo_emprendimiento?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    Id_contactos?: boolean | ContactosDefaultArgs<ExtArgs>
    usuario_emprendimiento?: boolean | Usuario$usuario_emprendimientoArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    email?: boolean
    contra?: boolean
    nombre?: boolean
    foto_perfil?: boolean
    typo_id?: boolean
    contacto?: boolean
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
    typo_emprendimiento?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    Id_contactos?: boolean | ContactosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    email?: boolean
    contra?: boolean
    nombre?: boolean
    foto_perfil?: boolean
    typo_id?: boolean
    contacto?: boolean
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
    typo_emprendimiento?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    Id_contactos?: boolean | ContactosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    email?: boolean
    contra?: boolean
    nombre?: boolean
    foto_perfil?: boolean
    typo_id?: boolean
    contacto?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"email" | "contra" | "nombre" | "foto_perfil" | "typo_id" | "contacto", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
    typo_emprendimiento?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    Id_contactos?: boolean | ContactosDefaultArgs<ExtArgs>
    usuario_emprendimiento?: boolean | Usuario$usuario_emprendimientoArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
    typo_emprendimiento?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    Id_contactos?: boolean | ContactosDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
    typo_emprendimiento?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    Id_contactos?: boolean | ContactosDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      foto: Prisma.$Foto_UsuarioPayload<ExtArgs>
      typo_emprendimiento: Prisma.$EmprendimientoPayload<ExtArgs>
      Id_contactos: Prisma.$ContactosPayload<ExtArgs>
      usuario_emprendimiento: Prisma.$Usuario_EmprendimientoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      email: string
      contra: string
      nombre: string
      foto_perfil: number
      typo_id: string
      contacto: number
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `email`
     * const usuarioWithEmailOnly = await prisma.usuario.findMany({ select: { email: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `email`
     * const usuarioWithEmailOnly = await prisma.usuario.createManyAndReturn({
     *   select: { email: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `email`
     * const usuarioWithEmailOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { email: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    foto<T extends Foto_UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Foto_UsuarioDefaultArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    typo_emprendimiento<T extends EmprendimientoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmprendimientoDefaultArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Id_contactos<T extends ContactosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContactosDefaultArgs<ExtArgs>>): Prisma__ContactosClient<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario_emprendimiento<T extends Usuario$usuario_emprendimientoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$usuario_emprendimientoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly email: FieldRef<"Usuario", 'String'>
    readonly contra: FieldRef<"Usuario", 'String'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly foto_perfil: FieldRef<"Usuario", 'Int'>
    readonly typo_id: FieldRef<"Usuario", 'String'>
    readonly contacto: FieldRef<"Usuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.usuario_emprendimiento
   */
  export type Usuario$usuario_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    where?: Usuario_EmprendimientoWhereInput
    orderBy?: Usuario_EmprendimientoOrderByWithRelationInput | Usuario_EmprendimientoOrderByWithRelationInput[]
    cursor?: Usuario_EmprendimientoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Usuario_EmprendimientoScalarFieldEnum | Usuario_EmprendimientoScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Usuario_Emprendimiento
   */

  export type AggregateUsuario_Emprendimiento = {
    _count: Usuario_EmprendimientoCountAggregateOutputType | null
    _avg: Usuario_EmprendimientoAvgAggregateOutputType | null
    _sum: Usuario_EmprendimientoSumAggregateOutputType | null
    _min: Usuario_EmprendimientoMinAggregateOutputType | null
    _max: Usuario_EmprendimientoMaxAggregateOutputType | null
  }

  export type Usuario_EmprendimientoAvgAggregateOutputType = {
    Id_usu_emp: number | null
  }

  export type Usuario_EmprendimientoSumAggregateOutputType = {
    Id_usu_emp: number | null
  }

  export type Usuario_EmprendimientoMinAggregateOutputType = {
    Id_usu_emp: number | null
    nom_color: string | null
    email: string | null
    typo: string | null
  }

  export type Usuario_EmprendimientoMaxAggregateOutputType = {
    Id_usu_emp: number | null
    nom_color: string | null
    email: string | null
    typo: string | null
  }

  export type Usuario_EmprendimientoCountAggregateOutputType = {
    Id_usu_emp: number
    nom_color: number
    email: number
    typo: number
    _all: number
  }


  export type Usuario_EmprendimientoAvgAggregateInputType = {
    Id_usu_emp?: true
  }

  export type Usuario_EmprendimientoSumAggregateInputType = {
    Id_usu_emp?: true
  }

  export type Usuario_EmprendimientoMinAggregateInputType = {
    Id_usu_emp?: true
    nom_color?: true
    email?: true
    typo?: true
  }

  export type Usuario_EmprendimientoMaxAggregateInputType = {
    Id_usu_emp?: true
    nom_color?: true
    email?: true
    typo?: true
  }

  export type Usuario_EmprendimientoCountAggregateInputType = {
    Id_usu_emp?: true
    nom_color?: true
    email?: true
    typo?: true
    _all?: true
  }

  export type Usuario_EmprendimientoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario_Emprendimiento to aggregate.
     */
    where?: Usuario_EmprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuario_Emprendimientos to fetch.
     */
    orderBy?: Usuario_EmprendimientoOrderByWithRelationInput | Usuario_EmprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Usuario_EmprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuario_Emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuario_Emprendimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuario_Emprendimientos
    **/
    _count?: true | Usuario_EmprendimientoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Usuario_EmprendimientoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Usuario_EmprendimientoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Usuario_EmprendimientoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Usuario_EmprendimientoMaxAggregateInputType
  }

  export type GetUsuario_EmprendimientoAggregateType<T extends Usuario_EmprendimientoAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario_Emprendimiento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario_Emprendimiento[P]>
      : GetScalarType<T[P], AggregateUsuario_Emprendimiento[P]>
  }




  export type Usuario_EmprendimientoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Usuario_EmprendimientoWhereInput
    orderBy?: Usuario_EmprendimientoOrderByWithAggregationInput | Usuario_EmprendimientoOrderByWithAggregationInput[]
    by: Usuario_EmprendimientoScalarFieldEnum[] | Usuario_EmprendimientoScalarFieldEnum
    having?: Usuario_EmprendimientoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Usuario_EmprendimientoCountAggregateInputType | true
    _avg?: Usuario_EmprendimientoAvgAggregateInputType
    _sum?: Usuario_EmprendimientoSumAggregateInputType
    _min?: Usuario_EmprendimientoMinAggregateInputType
    _max?: Usuario_EmprendimientoMaxAggregateInputType
  }

  export type Usuario_EmprendimientoGroupByOutputType = {
    Id_usu_emp: number
    nom_color: string
    email: string
    typo: string
    _count: Usuario_EmprendimientoCountAggregateOutputType | null
    _avg: Usuario_EmprendimientoAvgAggregateOutputType | null
    _sum: Usuario_EmprendimientoSumAggregateOutputType | null
    _min: Usuario_EmprendimientoMinAggregateOutputType | null
    _max: Usuario_EmprendimientoMaxAggregateOutputType | null
  }

  type GetUsuario_EmprendimientoGroupByPayload<T extends Usuario_EmprendimientoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Usuario_EmprendimientoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Usuario_EmprendimientoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Usuario_EmprendimientoGroupByOutputType[P]>
            : GetScalarType<T[P], Usuario_EmprendimientoGroupByOutputType[P]>
        }
      >
    >


  export type Usuario_EmprendimientoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_usu_emp?: boolean
    nom_color?: boolean
    email?: boolean
    typo?: boolean
    rela_colo_usuemp?: boolean | Colores_marcaDefaultArgs<ExtArgs>
    rela_usu_usuemp?: boolean | UsuarioDefaultArgs<ExtArgs>
    rela_emp_usuemp?: boolean | EmprendimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario_Emprendimiento"]>

  export type Usuario_EmprendimientoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_usu_emp?: boolean
    nom_color?: boolean
    email?: boolean
    typo?: boolean
    rela_colo_usuemp?: boolean | Colores_marcaDefaultArgs<ExtArgs>
    rela_usu_usuemp?: boolean | UsuarioDefaultArgs<ExtArgs>
    rela_emp_usuemp?: boolean | EmprendimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario_Emprendimiento"]>

  export type Usuario_EmprendimientoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_usu_emp?: boolean
    nom_color?: boolean
    email?: boolean
    typo?: boolean
    rela_colo_usuemp?: boolean | Colores_marcaDefaultArgs<ExtArgs>
    rela_usu_usuemp?: boolean | UsuarioDefaultArgs<ExtArgs>
    rela_emp_usuemp?: boolean | EmprendimientoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario_Emprendimiento"]>

  export type Usuario_EmprendimientoSelectScalar = {
    Id_usu_emp?: boolean
    nom_color?: boolean
    email?: boolean
    typo?: boolean
  }

  export type Usuario_EmprendimientoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_usu_emp" | "nom_color" | "email" | "typo", ExtArgs["result"]["usuario_Emprendimiento"]>
  export type Usuario_EmprendimientoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_colo_usuemp?: boolean | Colores_marcaDefaultArgs<ExtArgs>
    rela_usu_usuemp?: boolean | UsuarioDefaultArgs<ExtArgs>
    rela_emp_usuemp?: boolean | EmprendimientoDefaultArgs<ExtArgs>
  }
  export type Usuario_EmprendimientoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_colo_usuemp?: boolean | Colores_marcaDefaultArgs<ExtArgs>
    rela_usu_usuemp?: boolean | UsuarioDefaultArgs<ExtArgs>
    rela_emp_usuemp?: boolean | EmprendimientoDefaultArgs<ExtArgs>
  }
  export type Usuario_EmprendimientoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_colo_usuemp?: boolean | Colores_marcaDefaultArgs<ExtArgs>
    rela_usu_usuemp?: boolean | UsuarioDefaultArgs<ExtArgs>
    rela_emp_usuemp?: boolean | EmprendimientoDefaultArgs<ExtArgs>
  }

  export type $Usuario_EmprendimientoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario_Emprendimiento"
    objects: {
      rela_colo_usuemp: Prisma.$Colores_marcaPayload<ExtArgs>
      rela_usu_usuemp: Prisma.$UsuarioPayload<ExtArgs>
      rela_emp_usuemp: Prisma.$EmprendimientoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_usu_emp: number
      nom_color: string
      email: string
      typo: string
    }, ExtArgs["result"]["usuario_Emprendimiento"]>
    composites: {}
  }

  type Usuario_EmprendimientoGetPayload<S extends boolean | null | undefined | Usuario_EmprendimientoDefaultArgs> = $Result.GetResult<Prisma.$Usuario_EmprendimientoPayload, S>

  type Usuario_EmprendimientoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Usuario_EmprendimientoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Usuario_EmprendimientoCountAggregateInputType | true
    }

  export interface Usuario_EmprendimientoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario_Emprendimiento'], meta: { name: 'Usuario_Emprendimiento' } }
    /**
     * Find zero or one Usuario_Emprendimiento that matches the filter.
     * @param {Usuario_EmprendimientoFindUniqueArgs} args - Arguments to find a Usuario_Emprendimiento
     * @example
     * // Get one Usuario_Emprendimiento
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Usuario_EmprendimientoFindUniqueArgs>(args: SelectSubset<T, Usuario_EmprendimientoFindUniqueArgs<ExtArgs>>): Prisma__Usuario_EmprendimientoClient<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario_Emprendimiento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Usuario_EmprendimientoFindUniqueOrThrowArgs} args - Arguments to find a Usuario_Emprendimiento
     * @example
     * // Get one Usuario_Emprendimiento
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Usuario_EmprendimientoFindUniqueOrThrowArgs>(args: SelectSubset<T, Usuario_EmprendimientoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Usuario_EmprendimientoClient<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario_Emprendimiento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Usuario_EmprendimientoFindFirstArgs} args - Arguments to find a Usuario_Emprendimiento
     * @example
     * // Get one Usuario_Emprendimiento
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Usuario_EmprendimientoFindFirstArgs>(args?: SelectSubset<T, Usuario_EmprendimientoFindFirstArgs<ExtArgs>>): Prisma__Usuario_EmprendimientoClient<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario_Emprendimiento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Usuario_EmprendimientoFindFirstOrThrowArgs} args - Arguments to find a Usuario_Emprendimiento
     * @example
     * // Get one Usuario_Emprendimiento
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Usuario_EmprendimientoFindFirstOrThrowArgs>(args?: SelectSubset<T, Usuario_EmprendimientoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Usuario_EmprendimientoClient<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuario_Emprendimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Usuario_EmprendimientoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuario_Emprendimientos
     * const usuario_Emprendimientos = await prisma.usuario_Emprendimiento.findMany()
     * 
     * // Get first 10 Usuario_Emprendimientos
     * const usuario_Emprendimientos = await prisma.usuario_Emprendimiento.findMany({ take: 10 })
     * 
     * // Only select the `Id_usu_emp`
     * const usuario_EmprendimientoWithId_usu_empOnly = await prisma.usuario_Emprendimiento.findMany({ select: { Id_usu_emp: true } })
     * 
     */
    findMany<T extends Usuario_EmprendimientoFindManyArgs>(args?: SelectSubset<T, Usuario_EmprendimientoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario_Emprendimiento.
     * @param {Usuario_EmprendimientoCreateArgs} args - Arguments to create a Usuario_Emprendimiento.
     * @example
     * // Create one Usuario_Emprendimiento
     * const Usuario_Emprendimiento = await prisma.usuario_Emprendimiento.create({
     *   data: {
     *     // ... data to create a Usuario_Emprendimiento
     *   }
     * })
     * 
     */
    create<T extends Usuario_EmprendimientoCreateArgs>(args: SelectSubset<T, Usuario_EmprendimientoCreateArgs<ExtArgs>>): Prisma__Usuario_EmprendimientoClient<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuario_Emprendimientos.
     * @param {Usuario_EmprendimientoCreateManyArgs} args - Arguments to create many Usuario_Emprendimientos.
     * @example
     * // Create many Usuario_Emprendimientos
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Usuario_EmprendimientoCreateManyArgs>(args?: SelectSubset<T, Usuario_EmprendimientoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuario_Emprendimientos and returns the data saved in the database.
     * @param {Usuario_EmprendimientoCreateManyAndReturnArgs} args - Arguments to create many Usuario_Emprendimientos.
     * @example
     * // Create many Usuario_Emprendimientos
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuario_Emprendimientos and only return the `Id_usu_emp`
     * const usuario_EmprendimientoWithId_usu_empOnly = await prisma.usuario_Emprendimiento.createManyAndReturn({
     *   select: { Id_usu_emp: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Usuario_EmprendimientoCreateManyAndReturnArgs>(args?: SelectSubset<T, Usuario_EmprendimientoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario_Emprendimiento.
     * @param {Usuario_EmprendimientoDeleteArgs} args - Arguments to delete one Usuario_Emprendimiento.
     * @example
     * // Delete one Usuario_Emprendimiento
     * const Usuario_Emprendimiento = await prisma.usuario_Emprendimiento.delete({
     *   where: {
     *     // ... filter to delete one Usuario_Emprendimiento
     *   }
     * })
     * 
     */
    delete<T extends Usuario_EmprendimientoDeleteArgs>(args: SelectSubset<T, Usuario_EmprendimientoDeleteArgs<ExtArgs>>): Prisma__Usuario_EmprendimientoClient<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario_Emprendimiento.
     * @param {Usuario_EmprendimientoUpdateArgs} args - Arguments to update one Usuario_Emprendimiento.
     * @example
     * // Update one Usuario_Emprendimiento
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Usuario_EmprendimientoUpdateArgs>(args: SelectSubset<T, Usuario_EmprendimientoUpdateArgs<ExtArgs>>): Prisma__Usuario_EmprendimientoClient<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuario_Emprendimientos.
     * @param {Usuario_EmprendimientoDeleteManyArgs} args - Arguments to filter Usuario_Emprendimientos to delete.
     * @example
     * // Delete a few Usuario_Emprendimientos
     * const { count } = await prisma.usuario_Emprendimiento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Usuario_EmprendimientoDeleteManyArgs>(args?: SelectSubset<T, Usuario_EmprendimientoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuario_Emprendimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Usuario_EmprendimientoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuario_Emprendimientos
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Usuario_EmprendimientoUpdateManyArgs>(args: SelectSubset<T, Usuario_EmprendimientoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuario_Emprendimientos and returns the data updated in the database.
     * @param {Usuario_EmprendimientoUpdateManyAndReturnArgs} args - Arguments to update many Usuario_Emprendimientos.
     * @example
     * // Update many Usuario_Emprendimientos
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuario_Emprendimientos and only return the `Id_usu_emp`
     * const usuario_EmprendimientoWithId_usu_empOnly = await prisma.usuario_Emprendimiento.updateManyAndReturn({
     *   select: { Id_usu_emp: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Usuario_EmprendimientoUpdateManyAndReturnArgs>(args: SelectSubset<T, Usuario_EmprendimientoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario_Emprendimiento.
     * @param {Usuario_EmprendimientoUpsertArgs} args - Arguments to update or create a Usuario_Emprendimiento.
     * @example
     * // Update or create a Usuario_Emprendimiento
     * const usuario_Emprendimiento = await prisma.usuario_Emprendimiento.upsert({
     *   create: {
     *     // ... data to create a Usuario_Emprendimiento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario_Emprendimiento we want to update
     *   }
     * })
     */
    upsert<T extends Usuario_EmprendimientoUpsertArgs>(args: SelectSubset<T, Usuario_EmprendimientoUpsertArgs<ExtArgs>>): Prisma__Usuario_EmprendimientoClient<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuario_Emprendimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Usuario_EmprendimientoCountArgs} args - Arguments to filter Usuario_Emprendimientos to count.
     * @example
     * // Count the number of Usuario_Emprendimientos
     * const count = await prisma.usuario_Emprendimiento.count({
     *   where: {
     *     // ... the filter for the Usuario_Emprendimientos we want to count
     *   }
     * })
    **/
    count<T extends Usuario_EmprendimientoCountArgs>(
      args?: Subset<T, Usuario_EmprendimientoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Usuario_EmprendimientoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario_Emprendimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Usuario_EmprendimientoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Usuario_EmprendimientoAggregateArgs>(args: Subset<T, Usuario_EmprendimientoAggregateArgs>): Prisma.PrismaPromise<GetUsuario_EmprendimientoAggregateType<T>>

    /**
     * Group by Usuario_Emprendimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Usuario_EmprendimientoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Usuario_EmprendimientoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Usuario_EmprendimientoGroupByArgs['orderBy'] }
        : { orderBy?: Usuario_EmprendimientoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Usuario_EmprendimientoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuario_EmprendimientoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario_Emprendimiento model
   */
  readonly fields: Usuario_EmprendimientoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario_Emprendimiento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Usuario_EmprendimientoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rela_colo_usuemp<T extends Colores_marcaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Colores_marcaDefaultArgs<ExtArgs>>): Prisma__Colores_marcaClient<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rela_usu_usuemp<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rela_emp_usuemp<T extends EmprendimientoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmprendimientoDefaultArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario_Emprendimiento model
   */
  interface Usuario_EmprendimientoFieldRefs {
    readonly Id_usu_emp: FieldRef<"Usuario_Emprendimiento", 'Int'>
    readonly nom_color: FieldRef<"Usuario_Emprendimiento", 'String'>
    readonly email: FieldRef<"Usuario_Emprendimiento", 'String'>
    readonly typo: FieldRef<"Usuario_Emprendimiento", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Usuario_Emprendimiento findUnique
   */
  export type Usuario_EmprendimientoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Usuario_Emprendimiento to fetch.
     */
    where: Usuario_EmprendimientoWhereUniqueInput
  }

  /**
   * Usuario_Emprendimiento findUniqueOrThrow
   */
  export type Usuario_EmprendimientoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Usuario_Emprendimiento to fetch.
     */
    where: Usuario_EmprendimientoWhereUniqueInput
  }

  /**
   * Usuario_Emprendimiento findFirst
   */
  export type Usuario_EmprendimientoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Usuario_Emprendimiento to fetch.
     */
    where?: Usuario_EmprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuario_Emprendimientos to fetch.
     */
    orderBy?: Usuario_EmprendimientoOrderByWithRelationInput | Usuario_EmprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuario_Emprendimientos.
     */
    cursor?: Usuario_EmprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuario_Emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuario_Emprendimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuario_Emprendimientos.
     */
    distinct?: Usuario_EmprendimientoScalarFieldEnum | Usuario_EmprendimientoScalarFieldEnum[]
  }

  /**
   * Usuario_Emprendimiento findFirstOrThrow
   */
  export type Usuario_EmprendimientoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Usuario_Emprendimiento to fetch.
     */
    where?: Usuario_EmprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuario_Emprendimientos to fetch.
     */
    orderBy?: Usuario_EmprendimientoOrderByWithRelationInput | Usuario_EmprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuario_Emprendimientos.
     */
    cursor?: Usuario_EmprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuario_Emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuario_Emprendimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuario_Emprendimientos.
     */
    distinct?: Usuario_EmprendimientoScalarFieldEnum | Usuario_EmprendimientoScalarFieldEnum[]
  }

  /**
   * Usuario_Emprendimiento findMany
   */
  export type Usuario_EmprendimientoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Usuario_Emprendimientos to fetch.
     */
    where?: Usuario_EmprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuario_Emprendimientos to fetch.
     */
    orderBy?: Usuario_EmprendimientoOrderByWithRelationInput | Usuario_EmprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuario_Emprendimientos.
     */
    cursor?: Usuario_EmprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuario_Emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuario_Emprendimientos.
     */
    skip?: number
    distinct?: Usuario_EmprendimientoScalarFieldEnum | Usuario_EmprendimientoScalarFieldEnum[]
  }

  /**
   * Usuario_Emprendimiento create
   */
  export type Usuario_EmprendimientoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario_Emprendimiento.
     */
    data: XOR<Usuario_EmprendimientoCreateInput, Usuario_EmprendimientoUncheckedCreateInput>
  }

  /**
   * Usuario_Emprendimiento createMany
   */
  export type Usuario_EmprendimientoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuario_Emprendimientos.
     */
    data: Usuario_EmprendimientoCreateManyInput | Usuario_EmprendimientoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario_Emprendimiento createManyAndReturn
   */
  export type Usuario_EmprendimientoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * The data used to create many Usuario_Emprendimientos.
     */
    data: Usuario_EmprendimientoCreateManyInput | Usuario_EmprendimientoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario_Emprendimiento update
   */
  export type Usuario_EmprendimientoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario_Emprendimiento.
     */
    data: XOR<Usuario_EmprendimientoUpdateInput, Usuario_EmprendimientoUncheckedUpdateInput>
    /**
     * Choose, which Usuario_Emprendimiento to update.
     */
    where: Usuario_EmprendimientoWhereUniqueInput
  }

  /**
   * Usuario_Emprendimiento updateMany
   */
  export type Usuario_EmprendimientoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuario_Emprendimientos.
     */
    data: XOR<Usuario_EmprendimientoUpdateManyMutationInput, Usuario_EmprendimientoUncheckedUpdateManyInput>
    /**
     * Filter which Usuario_Emprendimientos to update
     */
    where?: Usuario_EmprendimientoWhereInput
    /**
     * Limit how many Usuario_Emprendimientos to update.
     */
    limit?: number
  }

  /**
   * Usuario_Emprendimiento updateManyAndReturn
   */
  export type Usuario_EmprendimientoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * The data used to update Usuario_Emprendimientos.
     */
    data: XOR<Usuario_EmprendimientoUpdateManyMutationInput, Usuario_EmprendimientoUncheckedUpdateManyInput>
    /**
     * Filter which Usuario_Emprendimientos to update
     */
    where?: Usuario_EmprendimientoWhereInput
    /**
     * Limit how many Usuario_Emprendimientos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario_Emprendimiento upsert
   */
  export type Usuario_EmprendimientoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario_Emprendimiento to update in case it exists.
     */
    where: Usuario_EmprendimientoWhereUniqueInput
    /**
     * In case the Usuario_Emprendimiento found by the `where` argument doesn't exist, create a new Usuario_Emprendimiento with this data.
     */
    create: XOR<Usuario_EmprendimientoCreateInput, Usuario_EmprendimientoUncheckedCreateInput>
    /**
     * In case the Usuario_Emprendimiento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Usuario_EmprendimientoUpdateInput, Usuario_EmprendimientoUncheckedUpdateInput>
  }

  /**
   * Usuario_Emprendimiento delete
   */
  export type Usuario_EmprendimientoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter which Usuario_Emprendimiento to delete.
     */
    where: Usuario_EmprendimientoWhereUniqueInput
  }

  /**
   * Usuario_Emprendimiento deleteMany
   */
  export type Usuario_EmprendimientoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario_Emprendimientos to delete
     */
    where?: Usuario_EmprendimientoWhereInput
    /**
     * Limit how many Usuario_Emprendimientos to delete.
     */
    limit?: number
  }

  /**
   * Usuario_Emprendimiento without action
   */
  export type Usuario_EmprendimientoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
  }


  /**
   * Model Foto_Usuario
   */

  export type AggregateFoto_Usuario = {
    _count: Foto_UsuarioCountAggregateOutputType | null
    _avg: Foto_UsuarioAvgAggregateOutputType | null
    _sum: Foto_UsuarioSumAggregateOutputType | null
    _min: Foto_UsuarioMinAggregateOutputType | null
    _max: Foto_UsuarioMaxAggregateOutputType | null
  }

  export type Foto_UsuarioAvgAggregateOutputType = {
    Id_fotousu: number | null
  }

  export type Foto_UsuarioSumAggregateOutputType = {
    Id_fotousu: number | null
  }

  export type Foto_UsuarioMinAggregateOutputType = {
    Id_fotousu: number | null
    foto_perfil: string | null
  }

  export type Foto_UsuarioMaxAggregateOutputType = {
    Id_fotousu: number | null
    foto_perfil: string | null
  }

  export type Foto_UsuarioCountAggregateOutputType = {
    Id_fotousu: number
    foto_perfil: number
    _all: number
  }


  export type Foto_UsuarioAvgAggregateInputType = {
    Id_fotousu?: true
  }

  export type Foto_UsuarioSumAggregateInputType = {
    Id_fotousu?: true
  }

  export type Foto_UsuarioMinAggregateInputType = {
    Id_fotousu?: true
    foto_perfil?: true
  }

  export type Foto_UsuarioMaxAggregateInputType = {
    Id_fotousu?: true
    foto_perfil?: true
  }

  export type Foto_UsuarioCountAggregateInputType = {
    Id_fotousu?: true
    foto_perfil?: true
    _all?: true
  }

  export type Foto_UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Foto_Usuario to aggregate.
     */
    where?: Foto_UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foto_Usuarios to fetch.
     */
    orderBy?: Foto_UsuarioOrderByWithRelationInput | Foto_UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Foto_UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foto_Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foto_Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Foto_Usuarios
    **/
    _count?: true | Foto_UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Foto_UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Foto_UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Foto_UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Foto_UsuarioMaxAggregateInputType
  }

  export type GetFoto_UsuarioAggregateType<T extends Foto_UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateFoto_Usuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFoto_Usuario[P]>
      : GetScalarType<T[P], AggregateFoto_Usuario[P]>
  }




  export type Foto_UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Foto_UsuarioWhereInput
    orderBy?: Foto_UsuarioOrderByWithAggregationInput | Foto_UsuarioOrderByWithAggregationInput[]
    by: Foto_UsuarioScalarFieldEnum[] | Foto_UsuarioScalarFieldEnum
    having?: Foto_UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Foto_UsuarioCountAggregateInputType | true
    _avg?: Foto_UsuarioAvgAggregateInputType
    _sum?: Foto_UsuarioSumAggregateInputType
    _min?: Foto_UsuarioMinAggregateInputType
    _max?: Foto_UsuarioMaxAggregateInputType
  }

  export type Foto_UsuarioGroupByOutputType = {
    Id_fotousu: number
    foto_perfil: string
    _count: Foto_UsuarioCountAggregateOutputType | null
    _avg: Foto_UsuarioAvgAggregateOutputType | null
    _sum: Foto_UsuarioSumAggregateOutputType | null
    _min: Foto_UsuarioMinAggregateOutputType | null
    _max: Foto_UsuarioMaxAggregateOutputType | null
  }

  type GetFoto_UsuarioGroupByPayload<T extends Foto_UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Foto_UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Foto_UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Foto_UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], Foto_UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type Foto_UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_fotousu?: boolean
    foto_perfil?: boolean
    usuarios?: boolean | Foto_Usuario$usuariosArgs<ExtArgs>
    foto_contacto?: boolean | Foto_Usuario$foto_contactoArgs<ExtArgs>
    _count?: boolean | Foto_UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foto_Usuario"]>

  export type Foto_UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_fotousu?: boolean
    foto_perfil?: boolean
  }, ExtArgs["result"]["foto_Usuario"]>

  export type Foto_UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_fotousu?: boolean
    foto_perfil?: boolean
  }, ExtArgs["result"]["foto_Usuario"]>

  export type Foto_UsuarioSelectScalar = {
    Id_fotousu?: boolean
    foto_perfil?: boolean
  }

  export type Foto_UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_fotousu" | "foto_perfil", ExtArgs["result"]["foto_Usuario"]>
  export type Foto_UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Foto_Usuario$usuariosArgs<ExtArgs>
    foto_contacto?: boolean | Foto_Usuario$foto_contactoArgs<ExtArgs>
    _count?: boolean | Foto_UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Foto_UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Foto_UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Foto_UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Foto_Usuario"
    objects: {
      usuarios: Prisma.$UsuarioPayload<ExtArgs>[]
      foto_contacto: Prisma.$ContactosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_fotousu: number
      foto_perfil: string
    }, ExtArgs["result"]["foto_Usuario"]>
    composites: {}
  }

  type Foto_UsuarioGetPayload<S extends boolean | null | undefined | Foto_UsuarioDefaultArgs> = $Result.GetResult<Prisma.$Foto_UsuarioPayload, S>

  type Foto_UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Foto_UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Foto_UsuarioCountAggregateInputType | true
    }

  export interface Foto_UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Foto_Usuario'], meta: { name: 'Foto_Usuario' } }
    /**
     * Find zero or one Foto_Usuario that matches the filter.
     * @param {Foto_UsuarioFindUniqueArgs} args - Arguments to find a Foto_Usuario
     * @example
     * // Get one Foto_Usuario
     * const foto_Usuario = await prisma.foto_Usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Foto_UsuarioFindUniqueArgs>(args: SelectSubset<T, Foto_UsuarioFindUniqueArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Foto_Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Foto_UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Foto_Usuario
     * @example
     * // Get one Foto_Usuario
     * const foto_Usuario = await prisma.foto_Usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Foto_UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, Foto_UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Foto_Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_UsuarioFindFirstArgs} args - Arguments to find a Foto_Usuario
     * @example
     * // Get one Foto_Usuario
     * const foto_Usuario = await prisma.foto_Usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Foto_UsuarioFindFirstArgs>(args?: SelectSubset<T, Foto_UsuarioFindFirstArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Foto_Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_UsuarioFindFirstOrThrowArgs} args - Arguments to find a Foto_Usuario
     * @example
     * // Get one Foto_Usuario
     * const foto_Usuario = await prisma.foto_Usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Foto_UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, Foto_UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Foto_Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Foto_Usuarios
     * const foto_Usuarios = await prisma.foto_Usuario.findMany()
     * 
     * // Get first 10 Foto_Usuarios
     * const foto_Usuarios = await prisma.foto_Usuario.findMany({ take: 10 })
     * 
     * // Only select the `Id_fotousu`
     * const foto_UsuarioWithId_fotousuOnly = await prisma.foto_Usuario.findMany({ select: { Id_fotousu: true } })
     * 
     */
    findMany<T extends Foto_UsuarioFindManyArgs>(args?: SelectSubset<T, Foto_UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Foto_Usuario.
     * @param {Foto_UsuarioCreateArgs} args - Arguments to create a Foto_Usuario.
     * @example
     * // Create one Foto_Usuario
     * const Foto_Usuario = await prisma.foto_Usuario.create({
     *   data: {
     *     // ... data to create a Foto_Usuario
     *   }
     * })
     * 
     */
    create<T extends Foto_UsuarioCreateArgs>(args: SelectSubset<T, Foto_UsuarioCreateArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Foto_Usuarios.
     * @param {Foto_UsuarioCreateManyArgs} args - Arguments to create many Foto_Usuarios.
     * @example
     * // Create many Foto_Usuarios
     * const foto_Usuario = await prisma.foto_Usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Foto_UsuarioCreateManyArgs>(args?: SelectSubset<T, Foto_UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Foto_Usuarios and returns the data saved in the database.
     * @param {Foto_UsuarioCreateManyAndReturnArgs} args - Arguments to create many Foto_Usuarios.
     * @example
     * // Create many Foto_Usuarios
     * const foto_Usuario = await prisma.foto_Usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Foto_Usuarios and only return the `Id_fotousu`
     * const foto_UsuarioWithId_fotousuOnly = await prisma.foto_Usuario.createManyAndReturn({
     *   select: { Id_fotousu: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Foto_UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, Foto_UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Foto_Usuario.
     * @param {Foto_UsuarioDeleteArgs} args - Arguments to delete one Foto_Usuario.
     * @example
     * // Delete one Foto_Usuario
     * const Foto_Usuario = await prisma.foto_Usuario.delete({
     *   where: {
     *     // ... filter to delete one Foto_Usuario
     *   }
     * })
     * 
     */
    delete<T extends Foto_UsuarioDeleteArgs>(args: SelectSubset<T, Foto_UsuarioDeleteArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Foto_Usuario.
     * @param {Foto_UsuarioUpdateArgs} args - Arguments to update one Foto_Usuario.
     * @example
     * // Update one Foto_Usuario
     * const foto_Usuario = await prisma.foto_Usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Foto_UsuarioUpdateArgs>(args: SelectSubset<T, Foto_UsuarioUpdateArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Foto_Usuarios.
     * @param {Foto_UsuarioDeleteManyArgs} args - Arguments to filter Foto_Usuarios to delete.
     * @example
     * // Delete a few Foto_Usuarios
     * const { count } = await prisma.foto_Usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Foto_UsuarioDeleteManyArgs>(args?: SelectSubset<T, Foto_UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Foto_Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Foto_Usuarios
     * const foto_Usuario = await prisma.foto_Usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Foto_UsuarioUpdateManyArgs>(args: SelectSubset<T, Foto_UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Foto_Usuarios and returns the data updated in the database.
     * @param {Foto_UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Foto_Usuarios.
     * @example
     * // Update many Foto_Usuarios
     * const foto_Usuario = await prisma.foto_Usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Foto_Usuarios and only return the `Id_fotousu`
     * const foto_UsuarioWithId_fotousuOnly = await prisma.foto_Usuario.updateManyAndReturn({
     *   select: { Id_fotousu: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Foto_UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, Foto_UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Foto_Usuario.
     * @param {Foto_UsuarioUpsertArgs} args - Arguments to update or create a Foto_Usuario.
     * @example
     * // Update or create a Foto_Usuario
     * const foto_Usuario = await prisma.foto_Usuario.upsert({
     *   create: {
     *     // ... data to create a Foto_Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Foto_Usuario we want to update
     *   }
     * })
     */
    upsert<T extends Foto_UsuarioUpsertArgs>(args: SelectSubset<T, Foto_UsuarioUpsertArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Foto_Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_UsuarioCountArgs} args - Arguments to filter Foto_Usuarios to count.
     * @example
     * // Count the number of Foto_Usuarios
     * const count = await prisma.foto_Usuario.count({
     *   where: {
     *     // ... the filter for the Foto_Usuarios we want to count
     *   }
     * })
    **/
    count<T extends Foto_UsuarioCountArgs>(
      args?: Subset<T, Foto_UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Foto_UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Foto_Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Foto_UsuarioAggregateArgs>(args: Subset<T, Foto_UsuarioAggregateArgs>): Prisma.PrismaPromise<GetFoto_UsuarioAggregateType<T>>

    /**
     * Group by Foto_Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Foto_UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Foto_UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Foto_UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: Foto_UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Foto_UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFoto_UsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Foto_Usuario model
   */
  readonly fields: Foto_UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Foto_Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Foto_UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Foto_Usuario$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Foto_Usuario$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    foto_contacto<T extends Foto_Usuario$foto_contactoArgs<ExtArgs> = {}>(args?: Subset<T, Foto_Usuario$foto_contactoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Foto_Usuario model
   */
  interface Foto_UsuarioFieldRefs {
    readonly Id_fotousu: FieldRef<"Foto_Usuario", 'Int'>
    readonly foto_perfil: FieldRef<"Foto_Usuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Foto_Usuario findUnique
   */
  export type Foto_UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Usuario to fetch.
     */
    where: Foto_UsuarioWhereUniqueInput
  }

  /**
   * Foto_Usuario findUniqueOrThrow
   */
  export type Foto_UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Usuario to fetch.
     */
    where: Foto_UsuarioWhereUniqueInput
  }

  /**
   * Foto_Usuario findFirst
   */
  export type Foto_UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Usuario to fetch.
     */
    where?: Foto_UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foto_Usuarios to fetch.
     */
    orderBy?: Foto_UsuarioOrderByWithRelationInput | Foto_UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Foto_Usuarios.
     */
    cursor?: Foto_UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foto_Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foto_Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Foto_Usuarios.
     */
    distinct?: Foto_UsuarioScalarFieldEnum | Foto_UsuarioScalarFieldEnum[]
  }

  /**
   * Foto_Usuario findFirstOrThrow
   */
  export type Foto_UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Usuario to fetch.
     */
    where?: Foto_UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foto_Usuarios to fetch.
     */
    orderBy?: Foto_UsuarioOrderByWithRelationInput | Foto_UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Foto_Usuarios.
     */
    cursor?: Foto_UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foto_Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foto_Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Foto_Usuarios.
     */
    distinct?: Foto_UsuarioScalarFieldEnum | Foto_UsuarioScalarFieldEnum[]
  }

  /**
   * Foto_Usuario findMany
   */
  export type Foto_UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Foto_Usuarios to fetch.
     */
    where?: Foto_UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foto_Usuarios to fetch.
     */
    orderBy?: Foto_UsuarioOrderByWithRelationInput | Foto_UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Foto_Usuarios.
     */
    cursor?: Foto_UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foto_Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foto_Usuarios.
     */
    skip?: number
    distinct?: Foto_UsuarioScalarFieldEnum | Foto_UsuarioScalarFieldEnum[]
  }

  /**
   * Foto_Usuario create
   */
  export type Foto_UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Foto_Usuario.
     */
    data: XOR<Foto_UsuarioCreateInput, Foto_UsuarioUncheckedCreateInput>
  }

  /**
   * Foto_Usuario createMany
   */
  export type Foto_UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Foto_Usuarios.
     */
    data: Foto_UsuarioCreateManyInput | Foto_UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Foto_Usuario createManyAndReturn
   */
  export type Foto_UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Foto_Usuarios.
     */
    data: Foto_UsuarioCreateManyInput | Foto_UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Foto_Usuario update
   */
  export type Foto_UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Foto_Usuario.
     */
    data: XOR<Foto_UsuarioUpdateInput, Foto_UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Foto_Usuario to update.
     */
    where: Foto_UsuarioWhereUniqueInput
  }

  /**
   * Foto_Usuario updateMany
   */
  export type Foto_UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Foto_Usuarios.
     */
    data: XOR<Foto_UsuarioUpdateManyMutationInput, Foto_UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Foto_Usuarios to update
     */
    where?: Foto_UsuarioWhereInput
    /**
     * Limit how many Foto_Usuarios to update.
     */
    limit?: number
  }

  /**
   * Foto_Usuario updateManyAndReturn
   */
  export type Foto_UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Foto_Usuarios.
     */
    data: XOR<Foto_UsuarioUpdateManyMutationInput, Foto_UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Foto_Usuarios to update
     */
    where?: Foto_UsuarioWhereInput
    /**
     * Limit how many Foto_Usuarios to update.
     */
    limit?: number
  }

  /**
   * Foto_Usuario upsert
   */
  export type Foto_UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Foto_Usuario to update in case it exists.
     */
    where: Foto_UsuarioWhereUniqueInput
    /**
     * In case the Foto_Usuario found by the `where` argument doesn't exist, create a new Foto_Usuario with this data.
     */
    create: XOR<Foto_UsuarioCreateInput, Foto_UsuarioUncheckedCreateInput>
    /**
     * In case the Foto_Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Foto_UsuarioUpdateInput, Foto_UsuarioUncheckedUpdateInput>
  }

  /**
   * Foto_Usuario delete
   */
  export type Foto_UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Foto_Usuario to delete.
     */
    where: Foto_UsuarioWhereUniqueInput
  }

  /**
   * Foto_Usuario deleteMany
   */
  export type Foto_UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Foto_Usuarios to delete
     */
    where?: Foto_UsuarioWhereInput
    /**
     * Limit how many Foto_Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Foto_Usuario.usuarios
   */
  export type Foto_Usuario$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Foto_Usuario.foto_contacto
   */
  export type Foto_Usuario$foto_contactoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    where?: ContactosWhereInput
    orderBy?: ContactosOrderByWithRelationInput | ContactosOrderByWithRelationInput[]
    cursor?: ContactosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactosScalarFieldEnum | ContactosScalarFieldEnum[]
  }

  /**
   * Foto_Usuario without action
   */
  export type Foto_UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foto_Usuario
     */
    select?: Foto_UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foto_Usuario
     */
    omit?: Foto_UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Foto_UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Contactos
   */

  export type AggregateContactos = {
    _count: ContactosCountAggregateOutputType | null
    _avg: ContactosAvgAggregateOutputType | null
    _sum: ContactosSumAggregateOutputType | null
    _min: ContactosMinAggregateOutputType | null
    _max: ContactosMaxAggregateOutputType | null
  }

  export type ContactosAvgAggregateOutputType = {
    Id_contactos: number | null
    telefono: number | null
    foto_contacto: number | null
  }

  export type ContactosSumAggregateOutputType = {
    Id_contactos: number | null
    telefono: number | null
    foto_contacto: number | null
  }

  export type ContactosMinAggregateOutputType = {
    Id_contactos: number | null
    telefono: number | null
    nombre: string | null
    redes_soc: string | null
    notas_perz: string | null
    email_contactos: string | null
    foto_contacto: number | null
  }

  export type ContactosMaxAggregateOutputType = {
    Id_contactos: number | null
    telefono: number | null
    nombre: string | null
    redes_soc: string | null
    notas_perz: string | null
    email_contactos: string | null
    foto_contacto: number | null
  }

  export type ContactosCountAggregateOutputType = {
    Id_contactos: number
    telefono: number
    nombre: number
    redes_soc: number
    notas_perz: number
    email_contactos: number
    foto_contacto: number
    _all: number
  }


  export type ContactosAvgAggregateInputType = {
    Id_contactos?: true
    telefono?: true
    foto_contacto?: true
  }

  export type ContactosSumAggregateInputType = {
    Id_contactos?: true
    telefono?: true
    foto_contacto?: true
  }

  export type ContactosMinAggregateInputType = {
    Id_contactos?: true
    telefono?: true
    nombre?: true
    redes_soc?: true
    notas_perz?: true
    email_contactos?: true
    foto_contacto?: true
  }

  export type ContactosMaxAggregateInputType = {
    Id_contactos?: true
    telefono?: true
    nombre?: true
    redes_soc?: true
    notas_perz?: true
    email_contactos?: true
    foto_contacto?: true
  }

  export type ContactosCountAggregateInputType = {
    Id_contactos?: true
    telefono?: true
    nombre?: true
    redes_soc?: true
    notas_perz?: true
    email_contactos?: true
    foto_contacto?: true
    _all?: true
  }

  export type ContactosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contactos to aggregate.
     */
    where?: ContactosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contactos to fetch.
     */
    orderBy?: ContactosOrderByWithRelationInput | ContactosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContactosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contactos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contactos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contactos
    **/
    _count?: true | ContactosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContactosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContactosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactosMaxAggregateInputType
  }

  export type GetContactosAggregateType<T extends ContactosAggregateArgs> = {
        [P in keyof T & keyof AggregateContactos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContactos[P]>
      : GetScalarType<T[P], AggregateContactos[P]>
  }




  export type ContactosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactosWhereInput
    orderBy?: ContactosOrderByWithAggregationInput | ContactosOrderByWithAggregationInput[]
    by: ContactosScalarFieldEnum[] | ContactosScalarFieldEnum
    having?: ContactosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactosCountAggregateInputType | true
    _avg?: ContactosAvgAggregateInputType
    _sum?: ContactosSumAggregateInputType
    _min?: ContactosMinAggregateInputType
    _max?: ContactosMaxAggregateInputType
  }

  export type ContactosGroupByOutputType = {
    Id_contactos: number
    telefono: number
    nombre: string
    redes_soc: string
    notas_perz: string
    email_contactos: string
    foto_contacto: number
    _count: ContactosCountAggregateOutputType | null
    _avg: ContactosAvgAggregateOutputType | null
    _sum: ContactosSumAggregateOutputType | null
    _min: ContactosMinAggregateOutputType | null
    _max: ContactosMaxAggregateOutputType | null
  }

  type GetContactosGroupByPayload<T extends ContactosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactosGroupByOutputType[P]>
            : GetScalarType<T[P], ContactosGroupByOutputType[P]>
        }
      >
    >


  export type ContactosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_contactos?: boolean
    telefono?: boolean
    nombre?: boolean
    redes_soc?: boolean
    notas_perz?: boolean
    email_contactos?: boolean
    foto_contacto?: boolean
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
    usuario?: boolean | Contactos$usuarioArgs<ExtArgs>
    _count?: boolean | ContactosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contactos"]>

  export type ContactosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_contactos?: boolean
    telefono?: boolean
    nombre?: boolean
    redes_soc?: boolean
    notas_perz?: boolean
    email_contactos?: boolean
    foto_contacto?: boolean
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contactos"]>

  export type ContactosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_contactos?: boolean
    telefono?: boolean
    nombre?: boolean
    redes_soc?: boolean
    notas_perz?: boolean
    email_contactos?: boolean
    foto_contacto?: boolean
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contactos"]>

  export type ContactosSelectScalar = {
    Id_contactos?: boolean
    telefono?: boolean
    nombre?: boolean
    redes_soc?: boolean
    notas_perz?: boolean
    email_contactos?: boolean
    foto_contacto?: boolean
  }

  export type ContactosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_contactos" | "telefono" | "nombre" | "redes_soc" | "notas_perz" | "email_contactos" | "foto_contacto", ExtArgs["result"]["contactos"]>
  export type ContactosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
    usuario?: boolean | Contactos$usuarioArgs<ExtArgs>
    _count?: boolean | ContactosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ContactosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
  }
  export type ContactosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foto?: boolean | Foto_UsuarioDefaultArgs<ExtArgs>
  }

  export type $ContactosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contactos"
    objects: {
      foto: Prisma.$Foto_UsuarioPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_contactos: number
      telefono: number
      nombre: string
      redes_soc: string
      notas_perz: string
      email_contactos: string
      foto_contacto: number
    }, ExtArgs["result"]["contactos"]>
    composites: {}
  }

  type ContactosGetPayload<S extends boolean | null | undefined | ContactosDefaultArgs> = $Result.GetResult<Prisma.$ContactosPayload, S>

  type ContactosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ContactosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ContactosCountAggregateInputType | true
    }

  export interface ContactosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contactos'], meta: { name: 'Contactos' } }
    /**
     * Find zero or one Contactos that matches the filter.
     * @param {ContactosFindUniqueArgs} args - Arguments to find a Contactos
     * @example
     * // Get one Contactos
     * const contactos = await prisma.contactos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContactosFindUniqueArgs>(args: SelectSubset<T, ContactosFindUniqueArgs<ExtArgs>>): Prisma__ContactosClient<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Contactos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ContactosFindUniqueOrThrowArgs} args - Arguments to find a Contactos
     * @example
     * // Get one Contactos
     * const contactos = await prisma.contactos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContactosFindUniqueOrThrowArgs>(args: SelectSubset<T, ContactosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContactosClient<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contactos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactosFindFirstArgs} args - Arguments to find a Contactos
     * @example
     * // Get one Contactos
     * const contactos = await prisma.contactos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContactosFindFirstArgs>(args?: SelectSubset<T, ContactosFindFirstArgs<ExtArgs>>): Prisma__ContactosClient<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contactos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactosFindFirstOrThrowArgs} args - Arguments to find a Contactos
     * @example
     * // Get one Contactos
     * const contactos = await prisma.contactos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContactosFindFirstOrThrowArgs>(args?: SelectSubset<T, ContactosFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContactosClient<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Contactos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contactos
     * const contactos = await prisma.contactos.findMany()
     * 
     * // Get first 10 Contactos
     * const contactos = await prisma.contactos.findMany({ take: 10 })
     * 
     * // Only select the `Id_contactos`
     * const contactosWithId_contactosOnly = await prisma.contactos.findMany({ select: { Id_contactos: true } })
     * 
     */
    findMany<T extends ContactosFindManyArgs>(args?: SelectSubset<T, ContactosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Contactos.
     * @param {ContactosCreateArgs} args - Arguments to create a Contactos.
     * @example
     * // Create one Contactos
     * const Contactos = await prisma.contactos.create({
     *   data: {
     *     // ... data to create a Contactos
     *   }
     * })
     * 
     */
    create<T extends ContactosCreateArgs>(args: SelectSubset<T, ContactosCreateArgs<ExtArgs>>): Prisma__ContactosClient<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Contactos.
     * @param {ContactosCreateManyArgs} args - Arguments to create many Contactos.
     * @example
     * // Create many Contactos
     * const contactos = await prisma.contactos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContactosCreateManyArgs>(args?: SelectSubset<T, ContactosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Contactos and returns the data saved in the database.
     * @param {ContactosCreateManyAndReturnArgs} args - Arguments to create many Contactos.
     * @example
     * // Create many Contactos
     * const contactos = await prisma.contactos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Contactos and only return the `Id_contactos`
     * const contactosWithId_contactosOnly = await prisma.contactos.createManyAndReturn({
     *   select: { Id_contactos: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ContactosCreateManyAndReturnArgs>(args?: SelectSubset<T, ContactosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Contactos.
     * @param {ContactosDeleteArgs} args - Arguments to delete one Contactos.
     * @example
     * // Delete one Contactos
     * const Contactos = await prisma.contactos.delete({
     *   where: {
     *     // ... filter to delete one Contactos
     *   }
     * })
     * 
     */
    delete<T extends ContactosDeleteArgs>(args: SelectSubset<T, ContactosDeleteArgs<ExtArgs>>): Prisma__ContactosClient<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Contactos.
     * @param {ContactosUpdateArgs} args - Arguments to update one Contactos.
     * @example
     * // Update one Contactos
     * const contactos = await prisma.contactos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContactosUpdateArgs>(args: SelectSubset<T, ContactosUpdateArgs<ExtArgs>>): Prisma__ContactosClient<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Contactos.
     * @param {ContactosDeleteManyArgs} args - Arguments to filter Contactos to delete.
     * @example
     * // Delete a few Contactos
     * const { count } = await prisma.contactos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContactosDeleteManyArgs>(args?: SelectSubset<T, ContactosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contactos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contactos
     * const contactos = await prisma.contactos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContactosUpdateManyArgs>(args: SelectSubset<T, ContactosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contactos and returns the data updated in the database.
     * @param {ContactosUpdateManyAndReturnArgs} args - Arguments to update many Contactos.
     * @example
     * // Update many Contactos
     * const contactos = await prisma.contactos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Contactos and only return the `Id_contactos`
     * const contactosWithId_contactosOnly = await prisma.contactos.updateManyAndReturn({
     *   select: { Id_contactos: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ContactosUpdateManyAndReturnArgs>(args: SelectSubset<T, ContactosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Contactos.
     * @param {ContactosUpsertArgs} args - Arguments to update or create a Contactos.
     * @example
     * // Update or create a Contactos
     * const contactos = await prisma.contactos.upsert({
     *   create: {
     *     // ... data to create a Contactos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contactos we want to update
     *   }
     * })
     */
    upsert<T extends ContactosUpsertArgs>(args: SelectSubset<T, ContactosUpsertArgs<ExtArgs>>): Prisma__ContactosClient<$Result.GetResult<Prisma.$ContactosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Contactos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactosCountArgs} args - Arguments to filter Contactos to count.
     * @example
     * // Count the number of Contactos
     * const count = await prisma.contactos.count({
     *   where: {
     *     // ... the filter for the Contactos we want to count
     *   }
     * })
    **/
    count<T extends ContactosCountArgs>(
      args?: Subset<T, ContactosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contactos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactosAggregateArgs>(args: Subset<T, ContactosAggregateArgs>): Prisma.PrismaPromise<GetContactosAggregateType<T>>

    /**
     * Group by Contactos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContactosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContactosGroupByArgs['orderBy'] }
        : { orderBy?: ContactosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContactosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contactos model
   */
  readonly fields: ContactosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contactos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContactosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    foto<T extends Foto_UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Foto_UsuarioDefaultArgs<ExtArgs>>): Prisma__Foto_UsuarioClient<$Result.GetResult<Prisma.$Foto_UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends Contactos$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, Contactos$usuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Contactos model
   */
  interface ContactosFieldRefs {
    readonly Id_contactos: FieldRef<"Contactos", 'Int'>
    readonly telefono: FieldRef<"Contactos", 'Int'>
    readonly nombre: FieldRef<"Contactos", 'String'>
    readonly redes_soc: FieldRef<"Contactos", 'String'>
    readonly notas_perz: FieldRef<"Contactos", 'String'>
    readonly email_contactos: FieldRef<"Contactos", 'String'>
    readonly foto_contacto: FieldRef<"Contactos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Contactos findUnique
   */
  export type ContactosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    /**
     * Filter, which Contactos to fetch.
     */
    where: ContactosWhereUniqueInput
  }

  /**
   * Contactos findUniqueOrThrow
   */
  export type ContactosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    /**
     * Filter, which Contactos to fetch.
     */
    where: ContactosWhereUniqueInput
  }

  /**
   * Contactos findFirst
   */
  export type ContactosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    /**
     * Filter, which Contactos to fetch.
     */
    where?: ContactosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contactos to fetch.
     */
    orderBy?: ContactosOrderByWithRelationInput | ContactosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contactos.
     */
    cursor?: ContactosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contactos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contactos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contactos.
     */
    distinct?: ContactosScalarFieldEnum | ContactosScalarFieldEnum[]
  }

  /**
   * Contactos findFirstOrThrow
   */
  export type ContactosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    /**
     * Filter, which Contactos to fetch.
     */
    where?: ContactosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contactos to fetch.
     */
    orderBy?: ContactosOrderByWithRelationInput | ContactosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contactos.
     */
    cursor?: ContactosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contactos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contactos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contactos.
     */
    distinct?: ContactosScalarFieldEnum | ContactosScalarFieldEnum[]
  }

  /**
   * Contactos findMany
   */
  export type ContactosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    /**
     * Filter, which Contactos to fetch.
     */
    where?: ContactosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contactos to fetch.
     */
    orderBy?: ContactosOrderByWithRelationInput | ContactosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contactos.
     */
    cursor?: ContactosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contactos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contactos.
     */
    skip?: number
    distinct?: ContactosScalarFieldEnum | ContactosScalarFieldEnum[]
  }

  /**
   * Contactos create
   */
  export type ContactosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    /**
     * The data needed to create a Contactos.
     */
    data: XOR<ContactosCreateInput, ContactosUncheckedCreateInput>
  }

  /**
   * Contactos createMany
   */
  export type ContactosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contactos.
     */
    data: ContactosCreateManyInput | ContactosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contactos createManyAndReturn
   */
  export type ContactosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * The data used to create many Contactos.
     */
    data: ContactosCreateManyInput | ContactosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contactos update
   */
  export type ContactosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    /**
     * The data needed to update a Contactos.
     */
    data: XOR<ContactosUpdateInput, ContactosUncheckedUpdateInput>
    /**
     * Choose, which Contactos to update.
     */
    where: ContactosWhereUniqueInput
  }

  /**
   * Contactos updateMany
   */
  export type ContactosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contactos.
     */
    data: XOR<ContactosUpdateManyMutationInput, ContactosUncheckedUpdateManyInput>
    /**
     * Filter which Contactos to update
     */
    where?: ContactosWhereInput
    /**
     * Limit how many Contactos to update.
     */
    limit?: number
  }

  /**
   * Contactos updateManyAndReturn
   */
  export type ContactosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * The data used to update Contactos.
     */
    data: XOR<ContactosUpdateManyMutationInput, ContactosUncheckedUpdateManyInput>
    /**
     * Filter which Contactos to update
     */
    where?: ContactosWhereInput
    /**
     * Limit how many Contactos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contactos upsert
   */
  export type ContactosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    /**
     * The filter to search for the Contactos to update in case it exists.
     */
    where: ContactosWhereUniqueInput
    /**
     * In case the Contactos found by the `where` argument doesn't exist, create a new Contactos with this data.
     */
    create: XOR<ContactosCreateInput, ContactosUncheckedCreateInput>
    /**
     * In case the Contactos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContactosUpdateInput, ContactosUncheckedUpdateInput>
  }

  /**
   * Contactos delete
   */
  export type ContactosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
    /**
     * Filter which Contactos to delete.
     */
    where: ContactosWhereUniqueInput
  }

  /**
   * Contactos deleteMany
   */
  export type ContactosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contactos to delete
     */
    where?: ContactosWhereInput
    /**
     * Limit how many Contactos to delete.
     */
    limit?: number
  }

  /**
   * Contactos.usuario
   */
  export type Contactos$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Contactos without action
   */
  export type ContactosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contactos
     */
    select?: ContactosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contactos
     */
    omit?: ContactosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactosInclude<ExtArgs> | null
  }


  /**
   * Model Emprendimiento
   */

  export type AggregateEmprendimiento = {
    _count: EmprendimientoCountAggregateOutputType | null
    _avg: EmprendimientoAvgAggregateOutputType | null
    _sum: EmprendimientoSumAggregateOutputType | null
    _min: EmprendimientoMinAggregateOutputType | null
    _max: EmprendimientoMaxAggregateOutputType | null
  }

  export type EmprendimientoAvgAggregateOutputType = {
    producto_foto: number | null
  }

  export type EmprendimientoSumAggregateOutputType = {
    producto_foto: number | null
  }

  export type EmprendimientoMinAggregateOutputType = {
    typo: string | null
    descripcion: string | null
    producto_foto: number | null
    producto: string | null
  }

  export type EmprendimientoMaxAggregateOutputType = {
    typo: string | null
    descripcion: string | null
    producto_foto: number | null
    producto: string | null
  }

  export type EmprendimientoCountAggregateOutputType = {
    typo: number
    descripcion: number
    producto_foto: number
    producto: number
    _all: number
  }


  export type EmprendimientoAvgAggregateInputType = {
    producto_foto?: true
  }

  export type EmprendimientoSumAggregateInputType = {
    producto_foto?: true
  }

  export type EmprendimientoMinAggregateInputType = {
    typo?: true
    descripcion?: true
    producto_foto?: true
    producto?: true
  }

  export type EmprendimientoMaxAggregateInputType = {
    typo?: true
    descripcion?: true
    producto_foto?: true
    producto?: true
  }

  export type EmprendimientoCountAggregateInputType = {
    typo?: true
    descripcion?: true
    producto_foto?: true
    producto?: true
    _all?: true
  }

  export type EmprendimientoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Emprendimiento to aggregate.
     */
    where?: EmprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprendimientos to fetch.
     */
    orderBy?: EmprendimientoOrderByWithRelationInput | EmprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprendimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Emprendimientos
    **/
    _count?: true | EmprendimientoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmprendimientoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmprendimientoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmprendimientoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmprendimientoMaxAggregateInputType
  }

  export type GetEmprendimientoAggregateType<T extends EmprendimientoAggregateArgs> = {
        [P in keyof T & keyof AggregateEmprendimiento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmprendimiento[P]>
      : GetScalarType<T[P], AggregateEmprendimiento[P]>
  }




  export type EmprendimientoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmprendimientoWhereInput
    orderBy?: EmprendimientoOrderByWithAggregationInput | EmprendimientoOrderByWithAggregationInput[]
    by: EmprendimientoScalarFieldEnum[] | EmprendimientoScalarFieldEnum
    having?: EmprendimientoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmprendimientoCountAggregateInputType | true
    _avg?: EmprendimientoAvgAggregateInputType
    _sum?: EmprendimientoSumAggregateInputType
    _min?: EmprendimientoMinAggregateInputType
    _max?: EmprendimientoMaxAggregateInputType
  }

  export type EmprendimientoGroupByOutputType = {
    typo: string
    descripcion: string
    producto_foto: number
    producto: string
    _count: EmprendimientoCountAggregateOutputType | null
    _avg: EmprendimientoAvgAggregateOutputType | null
    _sum: EmprendimientoSumAggregateOutputType | null
    _min: EmprendimientoMinAggregateOutputType | null
    _max: EmprendimientoMaxAggregateOutputType | null
  }

  type GetEmprendimientoGroupByPayload<T extends EmprendimientoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmprendimientoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmprendimientoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmprendimientoGroupByOutputType[P]>
            : GetScalarType<T[P], EmprendimientoGroupByOutputType[P]>
        }
      >
    >


  export type EmprendimientoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    typo?: boolean
    descripcion?: boolean
    producto_foto?: boolean
    producto?: boolean
    rela_emp_prodfoto?: boolean | Productos_fotoDefaultArgs<ExtArgs>
    rela_produ_emp?: boolean | ProductosDefaultArgs<ExtArgs>
    usuario?: boolean | Emprendimiento$usuarioArgs<ExtArgs>
    marketing_emprendimiento?: boolean | Emprendimiento$marketing_emprendimientoArgs<ExtArgs>
    emprendimiento_producto?: boolean | Emprendimiento$emprendimiento_productoArgs<ExtArgs>
    usuario_emprendimiento?: boolean | Emprendimiento$usuario_emprendimientoArgs<ExtArgs>
    _count?: boolean | EmprendimientoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["emprendimiento"]>

  export type EmprendimientoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    typo?: boolean
    descripcion?: boolean
    producto_foto?: boolean
    producto?: boolean
    rela_emp_prodfoto?: boolean | Productos_fotoDefaultArgs<ExtArgs>
    rela_produ_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["emprendimiento"]>

  export type EmprendimientoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    typo?: boolean
    descripcion?: boolean
    producto_foto?: boolean
    producto?: boolean
    rela_emp_prodfoto?: boolean | Productos_fotoDefaultArgs<ExtArgs>
    rela_produ_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["emprendimiento"]>

  export type EmprendimientoSelectScalar = {
    typo?: boolean
    descripcion?: boolean
    producto_foto?: boolean
    producto?: boolean
  }

  export type EmprendimientoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"typo" | "descripcion" | "producto_foto" | "producto", ExtArgs["result"]["emprendimiento"]>
  export type EmprendimientoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_emp_prodfoto?: boolean | Productos_fotoDefaultArgs<ExtArgs>
    rela_produ_emp?: boolean | ProductosDefaultArgs<ExtArgs>
    usuario?: boolean | Emprendimiento$usuarioArgs<ExtArgs>
    marketing_emprendimiento?: boolean | Emprendimiento$marketing_emprendimientoArgs<ExtArgs>
    emprendimiento_producto?: boolean | Emprendimiento$emprendimiento_productoArgs<ExtArgs>
    usuario_emprendimiento?: boolean | Emprendimiento$usuario_emprendimientoArgs<ExtArgs>
    _count?: boolean | EmprendimientoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EmprendimientoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_emp_prodfoto?: boolean | Productos_fotoDefaultArgs<ExtArgs>
    rela_produ_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }
  export type EmprendimientoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_emp_prodfoto?: boolean | Productos_fotoDefaultArgs<ExtArgs>
    rela_produ_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }

  export type $EmprendimientoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Emprendimiento"
    objects: {
      rela_emp_prodfoto: Prisma.$Productos_fotoPayload<ExtArgs>
      rela_produ_emp: Prisma.$ProductosPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>[]
      marketing_emprendimiento: Prisma.$Marketing_emprendimientoPayload<ExtArgs>[]
      emprendimiento_producto: Prisma.$Emprendimiento_productoPayload<ExtArgs>[]
      usuario_emprendimiento: Prisma.$Usuario_EmprendimientoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      typo: string
      descripcion: string
      producto_foto: number
      producto: string
    }, ExtArgs["result"]["emprendimiento"]>
    composites: {}
  }

  type EmprendimientoGetPayload<S extends boolean | null | undefined | EmprendimientoDefaultArgs> = $Result.GetResult<Prisma.$EmprendimientoPayload, S>

  type EmprendimientoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmprendimientoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmprendimientoCountAggregateInputType | true
    }

  export interface EmprendimientoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Emprendimiento'], meta: { name: 'Emprendimiento' } }
    /**
     * Find zero or one Emprendimiento that matches the filter.
     * @param {EmprendimientoFindUniqueArgs} args - Arguments to find a Emprendimiento
     * @example
     * // Get one Emprendimiento
     * const emprendimiento = await prisma.emprendimiento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmprendimientoFindUniqueArgs>(args: SelectSubset<T, EmprendimientoFindUniqueArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Emprendimiento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmprendimientoFindUniqueOrThrowArgs} args - Arguments to find a Emprendimiento
     * @example
     * // Get one Emprendimiento
     * const emprendimiento = await prisma.emprendimiento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmprendimientoFindUniqueOrThrowArgs>(args: SelectSubset<T, EmprendimientoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Emprendimiento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmprendimientoFindFirstArgs} args - Arguments to find a Emprendimiento
     * @example
     * // Get one Emprendimiento
     * const emprendimiento = await prisma.emprendimiento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmprendimientoFindFirstArgs>(args?: SelectSubset<T, EmprendimientoFindFirstArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Emprendimiento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmprendimientoFindFirstOrThrowArgs} args - Arguments to find a Emprendimiento
     * @example
     * // Get one Emprendimiento
     * const emprendimiento = await prisma.emprendimiento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmprendimientoFindFirstOrThrowArgs>(args?: SelectSubset<T, EmprendimientoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Emprendimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmprendimientoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Emprendimientos
     * const emprendimientos = await prisma.emprendimiento.findMany()
     * 
     * // Get first 10 Emprendimientos
     * const emprendimientos = await prisma.emprendimiento.findMany({ take: 10 })
     * 
     * // Only select the `typo`
     * const emprendimientoWithTypoOnly = await prisma.emprendimiento.findMany({ select: { typo: true } })
     * 
     */
    findMany<T extends EmprendimientoFindManyArgs>(args?: SelectSubset<T, EmprendimientoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Emprendimiento.
     * @param {EmprendimientoCreateArgs} args - Arguments to create a Emprendimiento.
     * @example
     * // Create one Emprendimiento
     * const Emprendimiento = await prisma.emprendimiento.create({
     *   data: {
     *     // ... data to create a Emprendimiento
     *   }
     * })
     * 
     */
    create<T extends EmprendimientoCreateArgs>(args: SelectSubset<T, EmprendimientoCreateArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Emprendimientos.
     * @param {EmprendimientoCreateManyArgs} args - Arguments to create many Emprendimientos.
     * @example
     * // Create many Emprendimientos
     * const emprendimiento = await prisma.emprendimiento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmprendimientoCreateManyArgs>(args?: SelectSubset<T, EmprendimientoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Emprendimientos and returns the data saved in the database.
     * @param {EmprendimientoCreateManyAndReturnArgs} args - Arguments to create many Emprendimientos.
     * @example
     * // Create many Emprendimientos
     * const emprendimiento = await prisma.emprendimiento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Emprendimientos and only return the `typo`
     * const emprendimientoWithTypoOnly = await prisma.emprendimiento.createManyAndReturn({
     *   select: { typo: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EmprendimientoCreateManyAndReturnArgs>(args?: SelectSubset<T, EmprendimientoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Emprendimiento.
     * @param {EmprendimientoDeleteArgs} args - Arguments to delete one Emprendimiento.
     * @example
     * // Delete one Emprendimiento
     * const Emprendimiento = await prisma.emprendimiento.delete({
     *   where: {
     *     // ... filter to delete one Emprendimiento
     *   }
     * })
     * 
     */
    delete<T extends EmprendimientoDeleteArgs>(args: SelectSubset<T, EmprendimientoDeleteArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Emprendimiento.
     * @param {EmprendimientoUpdateArgs} args - Arguments to update one Emprendimiento.
     * @example
     * // Update one Emprendimiento
     * const emprendimiento = await prisma.emprendimiento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmprendimientoUpdateArgs>(args: SelectSubset<T, EmprendimientoUpdateArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Emprendimientos.
     * @param {EmprendimientoDeleteManyArgs} args - Arguments to filter Emprendimientos to delete.
     * @example
     * // Delete a few Emprendimientos
     * const { count } = await prisma.emprendimiento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmprendimientoDeleteManyArgs>(args?: SelectSubset<T, EmprendimientoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emprendimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmprendimientoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Emprendimientos
     * const emprendimiento = await prisma.emprendimiento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmprendimientoUpdateManyArgs>(args: SelectSubset<T, EmprendimientoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emprendimientos and returns the data updated in the database.
     * @param {EmprendimientoUpdateManyAndReturnArgs} args - Arguments to update many Emprendimientos.
     * @example
     * // Update many Emprendimientos
     * const emprendimiento = await prisma.emprendimiento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Emprendimientos and only return the `typo`
     * const emprendimientoWithTypoOnly = await prisma.emprendimiento.updateManyAndReturn({
     *   select: { typo: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EmprendimientoUpdateManyAndReturnArgs>(args: SelectSubset<T, EmprendimientoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Emprendimiento.
     * @param {EmprendimientoUpsertArgs} args - Arguments to update or create a Emprendimiento.
     * @example
     * // Update or create a Emprendimiento
     * const emprendimiento = await prisma.emprendimiento.upsert({
     *   create: {
     *     // ... data to create a Emprendimiento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Emprendimiento we want to update
     *   }
     * })
     */
    upsert<T extends EmprendimientoUpsertArgs>(args: SelectSubset<T, EmprendimientoUpsertArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Emprendimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmprendimientoCountArgs} args - Arguments to filter Emprendimientos to count.
     * @example
     * // Count the number of Emprendimientos
     * const count = await prisma.emprendimiento.count({
     *   where: {
     *     // ... the filter for the Emprendimientos we want to count
     *   }
     * })
    **/
    count<T extends EmprendimientoCountArgs>(
      args?: Subset<T, EmprendimientoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmprendimientoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Emprendimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmprendimientoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmprendimientoAggregateArgs>(args: Subset<T, EmprendimientoAggregateArgs>): Prisma.PrismaPromise<GetEmprendimientoAggregateType<T>>

    /**
     * Group by Emprendimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmprendimientoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmprendimientoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmprendimientoGroupByArgs['orderBy'] }
        : { orderBy?: EmprendimientoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmprendimientoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmprendimientoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Emprendimiento model
   */
  readonly fields: EmprendimientoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Emprendimiento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmprendimientoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rela_emp_prodfoto<T extends Productos_fotoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Productos_fotoDefaultArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rela_produ_emp<T extends ProductosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductosDefaultArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends Emprendimiento$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, Emprendimiento$usuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    marketing_emprendimiento<T extends Emprendimiento$marketing_emprendimientoArgs<ExtArgs> = {}>(args?: Subset<T, Emprendimiento$marketing_emprendimientoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    emprendimiento_producto<T extends Emprendimiento$emprendimiento_productoArgs<ExtArgs> = {}>(args?: Subset<T, Emprendimiento$emprendimiento_productoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuario_emprendimiento<T extends Emprendimiento$usuario_emprendimientoArgs<ExtArgs> = {}>(args?: Subset<T, Emprendimiento$usuario_emprendimientoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Emprendimiento model
   */
  interface EmprendimientoFieldRefs {
    readonly typo: FieldRef<"Emprendimiento", 'String'>
    readonly descripcion: FieldRef<"Emprendimiento", 'String'>
    readonly producto_foto: FieldRef<"Emprendimiento", 'Int'>
    readonly producto: FieldRef<"Emprendimiento", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Emprendimiento findUnique
   */
  export type EmprendimientoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimiento to fetch.
     */
    where: EmprendimientoWhereUniqueInput
  }

  /**
   * Emprendimiento findUniqueOrThrow
   */
  export type EmprendimientoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimiento to fetch.
     */
    where: EmprendimientoWhereUniqueInput
  }

  /**
   * Emprendimiento findFirst
   */
  export type EmprendimientoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimiento to fetch.
     */
    where?: EmprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprendimientos to fetch.
     */
    orderBy?: EmprendimientoOrderByWithRelationInput | EmprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Emprendimientos.
     */
    cursor?: EmprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprendimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Emprendimientos.
     */
    distinct?: EmprendimientoScalarFieldEnum | EmprendimientoScalarFieldEnum[]
  }

  /**
   * Emprendimiento findFirstOrThrow
   */
  export type EmprendimientoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimiento to fetch.
     */
    where?: EmprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprendimientos to fetch.
     */
    orderBy?: EmprendimientoOrderByWithRelationInput | EmprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Emprendimientos.
     */
    cursor?: EmprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprendimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Emprendimientos.
     */
    distinct?: EmprendimientoScalarFieldEnum | EmprendimientoScalarFieldEnum[]
  }

  /**
   * Emprendimiento findMany
   */
  export type EmprendimientoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimientos to fetch.
     */
    where?: EmprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprendimientos to fetch.
     */
    orderBy?: EmprendimientoOrderByWithRelationInput | EmprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Emprendimientos.
     */
    cursor?: EmprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprendimientos.
     */
    skip?: number
    distinct?: EmprendimientoScalarFieldEnum | EmprendimientoScalarFieldEnum[]
  }

  /**
   * Emprendimiento create
   */
  export type EmprendimientoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    /**
     * The data needed to create a Emprendimiento.
     */
    data: XOR<EmprendimientoCreateInput, EmprendimientoUncheckedCreateInput>
  }

  /**
   * Emprendimiento createMany
   */
  export type EmprendimientoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Emprendimientos.
     */
    data: EmprendimientoCreateManyInput | EmprendimientoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Emprendimiento createManyAndReturn
   */
  export type EmprendimientoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * The data used to create many Emprendimientos.
     */
    data: EmprendimientoCreateManyInput | EmprendimientoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Emprendimiento update
   */
  export type EmprendimientoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    /**
     * The data needed to update a Emprendimiento.
     */
    data: XOR<EmprendimientoUpdateInput, EmprendimientoUncheckedUpdateInput>
    /**
     * Choose, which Emprendimiento to update.
     */
    where: EmprendimientoWhereUniqueInput
  }

  /**
   * Emprendimiento updateMany
   */
  export type EmprendimientoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Emprendimientos.
     */
    data: XOR<EmprendimientoUpdateManyMutationInput, EmprendimientoUncheckedUpdateManyInput>
    /**
     * Filter which Emprendimientos to update
     */
    where?: EmprendimientoWhereInput
    /**
     * Limit how many Emprendimientos to update.
     */
    limit?: number
  }

  /**
   * Emprendimiento updateManyAndReturn
   */
  export type EmprendimientoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * The data used to update Emprendimientos.
     */
    data: XOR<EmprendimientoUpdateManyMutationInput, EmprendimientoUncheckedUpdateManyInput>
    /**
     * Filter which Emprendimientos to update
     */
    where?: EmprendimientoWhereInput
    /**
     * Limit how many Emprendimientos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Emprendimiento upsert
   */
  export type EmprendimientoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    /**
     * The filter to search for the Emprendimiento to update in case it exists.
     */
    where: EmprendimientoWhereUniqueInput
    /**
     * In case the Emprendimiento found by the `where` argument doesn't exist, create a new Emprendimiento with this data.
     */
    create: XOR<EmprendimientoCreateInput, EmprendimientoUncheckedCreateInput>
    /**
     * In case the Emprendimiento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmprendimientoUpdateInput, EmprendimientoUncheckedUpdateInput>
  }

  /**
   * Emprendimiento delete
   */
  export type EmprendimientoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    /**
     * Filter which Emprendimiento to delete.
     */
    where: EmprendimientoWhereUniqueInput
  }

  /**
   * Emprendimiento deleteMany
   */
  export type EmprendimientoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Emprendimientos to delete
     */
    where?: EmprendimientoWhereInput
    /**
     * Limit how many Emprendimientos to delete.
     */
    limit?: number
  }

  /**
   * Emprendimiento.usuario
   */
  export type Emprendimiento$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Emprendimiento.marketing_emprendimiento
   */
  export type Emprendimiento$marketing_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    where?: Marketing_emprendimientoWhereInput
    orderBy?: Marketing_emprendimientoOrderByWithRelationInput | Marketing_emprendimientoOrderByWithRelationInput[]
    cursor?: Marketing_emprendimientoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Marketing_emprendimientoScalarFieldEnum | Marketing_emprendimientoScalarFieldEnum[]
  }

  /**
   * Emprendimiento.emprendimiento_producto
   */
  export type Emprendimiento$emprendimiento_productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    where?: Emprendimiento_productoWhereInput
    orderBy?: Emprendimiento_productoOrderByWithRelationInput | Emprendimiento_productoOrderByWithRelationInput[]
    cursor?: Emprendimiento_productoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Emprendimiento_productoScalarFieldEnum | Emprendimiento_productoScalarFieldEnum[]
  }

  /**
   * Emprendimiento.usuario_emprendimiento
   */
  export type Emprendimiento$usuario_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    where?: Usuario_EmprendimientoWhereInput
    orderBy?: Usuario_EmprendimientoOrderByWithRelationInput | Usuario_EmprendimientoOrderByWithRelationInput[]
    cursor?: Usuario_EmprendimientoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Usuario_EmprendimientoScalarFieldEnum | Usuario_EmprendimientoScalarFieldEnum[]
  }

  /**
   * Emprendimiento without action
   */
  export type EmprendimientoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
  }


  /**
   * Model Emprendimiento_producto
   */

  export type AggregateEmprendimiento_producto = {
    _count: Emprendimiento_productoCountAggregateOutputType | null
    _avg: Emprendimiento_productoAvgAggregateOutputType | null
    _sum: Emprendimiento_productoSumAggregateOutputType | null
    _min: Emprendimiento_productoMinAggregateOutputType | null
    _max: Emprendimiento_productoMaxAggregateOutputType | null
  }

  export type Emprendimiento_productoAvgAggregateOutputType = {
    Id_emp_prod: number | null
    costo: number | null
    stock: number | null
  }

  export type Emprendimiento_productoSumAggregateOutputType = {
    Id_emp_prod: number | null
    costo: number | null
    stock: number | null
  }

  export type Emprendimiento_productoMinAggregateOutputType = {
    Id_emp_prod: number | null
    costo: number | null
    stock: number | null
    emp_prod: string | null
    prod_emp: string | null
  }

  export type Emprendimiento_productoMaxAggregateOutputType = {
    Id_emp_prod: number | null
    costo: number | null
    stock: number | null
    emp_prod: string | null
    prod_emp: string | null
  }

  export type Emprendimiento_productoCountAggregateOutputType = {
    Id_emp_prod: number
    costo: number
    stock: number
    emp_prod: number
    prod_emp: number
    _all: number
  }


  export type Emprendimiento_productoAvgAggregateInputType = {
    Id_emp_prod?: true
    costo?: true
    stock?: true
  }

  export type Emprendimiento_productoSumAggregateInputType = {
    Id_emp_prod?: true
    costo?: true
    stock?: true
  }

  export type Emprendimiento_productoMinAggregateInputType = {
    Id_emp_prod?: true
    costo?: true
    stock?: true
    emp_prod?: true
    prod_emp?: true
  }

  export type Emprendimiento_productoMaxAggregateInputType = {
    Id_emp_prod?: true
    costo?: true
    stock?: true
    emp_prod?: true
    prod_emp?: true
  }

  export type Emprendimiento_productoCountAggregateInputType = {
    Id_emp_prod?: true
    costo?: true
    stock?: true
    emp_prod?: true
    prod_emp?: true
    _all?: true
  }

  export type Emprendimiento_productoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Emprendimiento_producto to aggregate.
     */
    where?: Emprendimiento_productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprendimiento_productos to fetch.
     */
    orderBy?: Emprendimiento_productoOrderByWithRelationInput | Emprendimiento_productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Emprendimiento_productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprendimiento_productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprendimiento_productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Emprendimiento_productos
    **/
    _count?: true | Emprendimiento_productoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Emprendimiento_productoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Emprendimiento_productoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Emprendimiento_productoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Emprendimiento_productoMaxAggregateInputType
  }

  export type GetEmprendimiento_productoAggregateType<T extends Emprendimiento_productoAggregateArgs> = {
        [P in keyof T & keyof AggregateEmprendimiento_producto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmprendimiento_producto[P]>
      : GetScalarType<T[P], AggregateEmprendimiento_producto[P]>
  }




  export type Emprendimiento_productoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Emprendimiento_productoWhereInput
    orderBy?: Emprendimiento_productoOrderByWithAggregationInput | Emprendimiento_productoOrderByWithAggregationInput[]
    by: Emprendimiento_productoScalarFieldEnum[] | Emprendimiento_productoScalarFieldEnum
    having?: Emprendimiento_productoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Emprendimiento_productoCountAggregateInputType | true
    _avg?: Emprendimiento_productoAvgAggregateInputType
    _sum?: Emprendimiento_productoSumAggregateInputType
    _min?: Emprendimiento_productoMinAggregateInputType
    _max?: Emprendimiento_productoMaxAggregateInputType
  }

  export type Emprendimiento_productoGroupByOutputType = {
    Id_emp_prod: number
    costo: number
    stock: number
    emp_prod: string
    prod_emp: string
    _count: Emprendimiento_productoCountAggregateOutputType | null
    _avg: Emprendimiento_productoAvgAggregateOutputType | null
    _sum: Emprendimiento_productoSumAggregateOutputType | null
    _min: Emprendimiento_productoMinAggregateOutputType | null
    _max: Emprendimiento_productoMaxAggregateOutputType | null
  }

  type GetEmprendimiento_productoGroupByPayload<T extends Emprendimiento_productoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Emprendimiento_productoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Emprendimiento_productoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Emprendimiento_productoGroupByOutputType[P]>
            : GetScalarType<T[P], Emprendimiento_productoGroupByOutputType[P]>
        }
      >
    >


  export type Emprendimiento_productoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_emp_prod?: boolean
    costo?: boolean
    stock?: boolean
    emp_prod?: boolean
    prod_emp?: boolean
    rela_emp_prod?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_prod_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["emprendimiento_producto"]>

  export type Emprendimiento_productoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_emp_prod?: boolean
    costo?: boolean
    stock?: boolean
    emp_prod?: boolean
    prod_emp?: boolean
    rela_emp_prod?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_prod_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["emprendimiento_producto"]>

  export type Emprendimiento_productoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_emp_prod?: boolean
    costo?: boolean
    stock?: boolean
    emp_prod?: boolean
    prod_emp?: boolean
    rela_emp_prod?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_prod_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["emprendimiento_producto"]>

  export type Emprendimiento_productoSelectScalar = {
    Id_emp_prod?: boolean
    costo?: boolean
    stock?: boolean
    emp_prod?: boolean
    prod_emp?: boolean
  }

  export type Emprendimiento_productoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_emp_prod" | "costo" | "stock" | "emp_prod" | "prod_emp", ExtArgs["result"]["emprendimiento_producto"]>
  export type Emprendimiento_productoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_emp_prod?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_prod_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }
  export type Emprendimiento_productoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_emp_prod?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_prod_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }
  export type Emprendimiento_productoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_emp_prod?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_prod_emp?: boolean | ProductosDefaultArgs<ExtArgs>
  }

  export type $Emprendimiento_productoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Emprendimiento_producto"
    objects: {
      rela_emp_prod: Prisma.$EmprendimientoPayload<ExtArgs>
      rela_prod_emp: Prisma.$ProductosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_emp_prod: number
      costo: number
      stock: number
      emp_prod: string
      prod_emp: string
    }, ExtArgs["result"]["emprendimiento_producto"]>
    composites: {}
  }

  type Emprendimiento_productoGetPayload<S extends boolean | null | undefined | Emprendimiento_productoDefaultArgs> = $Result.GetResult<Prisma.$Emprendimiento_productoPayload, S>

  type Emprendimiento_productoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Emprendimiento_productoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Emprendimiento_productoCountAggregateInputType | true
    }

  export interface Emprendimiento_productoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Emprendimiento_producto'], meta: { name: 'Emprendimiento_producto' } }
    /**
     * Find zero or one Emprendimiento_producto that matches the filter.
     * @param {Emprendimiento_productoFindUniqueArgs} args - Arguments to find a Emprendimiento_producto
     * @example
     * // Get one Emprendimiento_producto
     * const emprendimiento_producto = await prisma.emprendimiento_producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Emprendimiento_productoFindUniqueArgs>(args: SelectSubset<T, Emprendimiento_productoFindUniqueArgs<ExtArgs>>): Prisma__Emprendimiento_productoClient<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Emprendimiento_producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Emprendimiento_productoFindUniqueOrThrowArgs} args - Arguments to find a Emprendimiento_producto
     * @example
     * // Get one Emprendimiento_producto
     * const emprendimiento_producto = await prisma.emprendimiento_producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Emprendimiento_productoFindUniqueOrThrowArgs>(args: SelectSubset<T, Emprendimiento_productoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Emprendimiento_productoClient<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Emprendimiento_producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Emprendimiento_productoFindFirstArgs} args - Arguments to find a Emprendimiento_producto
     * @example
     * // Get one Emprendimiento_producto
     * const emprendimiento_producto = await prisma.emprendimiento_producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Emprendimiento_productoFindFirstArgs>(args?: SelectSubset<T, Emprendimiento_productoFindFirstArgs<ExtArgs>>): Prisma__Emprendimiento_productoClient<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Emprendimiento_producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Emprendimiento_productoFindFirstOrThrowArgs} args - Arguments to find a Emprendimiento_producto
     * @example
     * // Get one Emprendimiento_producto
     * const emprendimiento_producto = await prisma.emprendimiento_producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Emprendimiento_productoFindFirstOrThrowArgs>(args?: SelectSubset<T, Emprendimiento_productoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Emprendimiento_productoClient<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Emprendimiento_productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Emprendimiento_productoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Emprendimiento_productos
     * const emprendimiento_productos = await prisma.emprendimiento_producto.findMany()
     * 
     * // Get first 10 Emprendimiento_productos
     * const emprendimiento_productos = await prisma.emprendimiento_producto.findMany({ take: 10 })
     * 
     * // Only select the `Id_emp_prod`
     * const emprendimiento_productoWithId_emp_prodOnly = await prisma.emprendimiento_producto.findMany({ select: { Id_emp_prod: true } })
     * 
     */
    findMany<T extends Emprendimiento_productoFindManyArgs>(args?: SelectSubset<T, Emprendimiento_productoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Emprendimiento_producto.
     * @param {Emprendimiento_productoCreateArgs} args - Arguments to create a Emprendimiento_producto.
     * @example
     * // Create one Emprendimiento_producto
     * const Emprendimiento_producto = await prisma.emprendimiento_producto.create({
     *   data: {
     *     // ... data to create a Emprendimiento_producto
     *   }
     * })
     * 
     */
    create<T extends Emprendimiento_productoCreateArgs>(args: SelectSubset<T, Emprendimiento_productoCreateArgs<ExtArgs>>): Prisma__Emprendimiento_productoClient<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Emprendimiento_productos.
     * @param {Emprendimiento_productoCreateManyArgs} args - Arguments to create many Emprendimiento_productos.
     * @example
     * // Create many Emprendimiento_productos
     * const emprendimiento_producto = await prisma.emprendimiento_producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Emprendimiento_productoCreateManyArgs>(args?: SelectSubset<T, Emprendimiento_productoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Emprendimiento_productos and returns the data saved in the database.
     * @param {Emprendimiento_productoCreateManyAndReturnArgs} args - Arguments to create many Emprendimiento_productos.
     * @example
     * // Create many Emprendimiento_productos
     * const emprendimiento_producto = await prisma.emprendimiento_producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Emprendimiento_productos and only return the `Id_emp_prod`
     * const emprendimiento_productoWithId_emp_prodOnly = await prisma.emprendimiento_producto.createManyAndReturn({
     *   select: { Id_emp_prod: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Emprendimiento_productoCreateManyAndReturnArgs>(args?: SelectSubset<T, Emprendimiento_productoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Emprendimiento_producto.
     * @param {Emprendimiento_productoDeleteArgs} args - Arguments to delete one Emprendimiento_producto.
     * @example
     * // Delete one Emprendimiento_producto
     * const Emprendimiento_producto = await prisma.emprendimiento_producto.delete({
     *   where: {
     *     // ... filter to delete one Emprendimiento_producto
     *   }
     * })
     * 
     */
    delete<T extends Emprendimiento_productoDeleteArgs>(args: SelectSubset<T, Emprendimiento_productoDeleteArgs<ExtArgs>>): Prisma__Emprendimiento_productoClient<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Emprendimiento_producto.
     * @param {Emprendimiento_productoUpdateArgs} args - Arguments to update one Emprendimiento_producto.
     * @example
     * // Update one Emprendimiento_producto
     * const emprendimiento_producto = await prisma.emprendimiento_producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Emprendimiento_productoUpdateArgs>(args: SelectSubset<T, Emprendimiento_productoUpdateArgs<ExtArgs>>): Prisma__Emprendimiento_productoClient<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Emprendimiento_productos.
     * @param {Emprendimiento_productoDeleteManyArgs} args - Arguments to filter Emprendimiento_productos to delete.
     * @example
     * // Delete a few Emprendimiento_productos
     * const { count } = await prisma.emprendimiento_producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Emprendimiento_productoDeleteManyArgs>(args?: SelectSubset<T, Emprendimiento_productoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emprendimiento_productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Emprendimiento_productoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Emprendimiento_productos
     * const emprendimiento_producto = await prisma.emprendimiento_producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Emprendimiento_productoUpdateManyArgs>(args: SelectSubset<T, Emprendimiento_productoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emprendimiento_productos and returns the data updated in the database.
     * @param {Emprendimiento_productoUpdateManyAndReturnArgs} args - Arguments to update many Emprendimiento_productos.
     * @example
     * // Update many Emprendimiento_productos
     * const emprendimiento_producto = await prisma.emprendimiento_producto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Emprendimiento_productos and only return the `Id_emp_prod`
     * const emprendimiento_productoWithId_emp_prodOnly = await prisma.emprendimiento_producto.updateManyAndReturn({
     *   select: { Id_emp_prod: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Emprendimiento_productoUpdateManyAndReturnArgs>(args: SelectSubset<T, Emprendimiento_productoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Emprendimiento_producto.
     * @param {Emprendimiento_productoUpsertArgs} args - Arguments to update or create a Emprendimiento_producto.
     * @example
     * // Update or create a Emprendimiento_producto
     * const emprendimiento_producto = await prisma.emprendimiento_producto.upsert({
     *   create: {
     *     // ... data to create a Emprendimiento_producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Emprendimiento_producto we want to update
     *   }
     * })
     */
    upsert<T extends Emprendimiento_productoUpsertArgs>(args: SelectSubset<T, Emprendimiento_productoUpsertArgs<ExtArgs>>): Prisma__Emprendimiento_productoClient<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Emprendimiento_productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Emprendimiento_productoCountArgs} args - Arguments to filter Emprendimiento_productos to count.
     * @example
     * // Count the number of Emprendimiento_productos
     * const count = await prisma.emprendimiento_producto.count({
     *   where: {
     *     // ... the filter for the Emprendimiento_productos we want to count
     *   }
     * })
    **/
    count<T extends Emprendimiento_productoCountArgs>(
      args?: Subset<T, Emprendimiento_productoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Emprendimiento_productoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Emprendimiento_producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Emprendimiento_productoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Emprendimiento_productoAggregateArgs>(args: Subset<T, Emprendimiento_productoAggregateArgs>): Prisma.PrismaPromise<GetEmprendimiento_productoAggregateType<T>>

    /**
     * Group by Emprendimiento_producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Emprendimiento_productoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Emprendimiento_productoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Emprendimiento_productoGroupByArgs['orderBy'] }
        : { orderBy?: Emprendimiento_productoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Emprendimiento_productoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmprendimiento_productoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Emprendimiento_producto model
   */
  readonly fields: Emprendimiento_productoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Emprendimiento_producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Emprendimiento_productoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rela_emp_prod<T extends EmprendimientoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmprendimientoDefaultArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rela_prod_emp<T extends ProductosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductosDefaultArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Emprendimiento_producto model
   */
  interface Emprendimiento_productoFieldRefs {
    readonly Id_emp_prod: FieldRef<"Emprendimiento_producto", 'Int'>
    readonly costo: FieldRef<"Emprendimiento_producto", 'Float'>
    readonly stock: FieldRef<"Emprendimiento_producto", 'Int'>
    readonly emp_prod: FieldRef<"Emprendimiento_producto", 'String'>
    readonly prod_emp: FieldRef<"Emprendimiento_producto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Emprendimiento_producto findUnique
   */
  export type Emprendimiento_productoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimiento_producto to fetch.
     */
    where: Emprendimiento_productoWhereUniqueInput
  }

  /**
   * Emprendimiento_producto findUniqueOrThrow
   */
  export type Emprendimiento_productoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimiento_producto to fetch.
     */
    where: Emprendimiento_productoWhereUniqueInput
  }

  /**
   * Emprendimiento_producto findFirst
   */
  export type Emprendimiento_productoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimiento_producto to fetch.
     */
    where?: Emprendimiento_productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprendimiento_productos to fetch.
     */
    orderBy?: Emprendimiento_productoOrderByWithRelationInput | Emprendimiento_productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Emprendimiento_productos.
     */
    cursor?: Emprendimiento_productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprendimiento_productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprendimiento_productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Emprendimiento_productos.
     */
    distinct?: Emprendimiento_productoScalarFieldEnum | Emprendimiento_productoScalarFieldEnum[]
  }

  /**
   * Emprendimiento_producto findFirstOrThrow
   */
  export type Emprendimiento_productoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimiento_producto to fetch.
     */
    where?: Emprendimiento_productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprendimiento_productos to fetch.
     */
    orderBy?: Emprendimiento_productoOrderByWithRelationInput | Emprendimiento_productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Emprendimiento_productos.
     */
    cursor?: Emprendimiento_productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprendimiento_productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprendimiento_productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Emprendimiento_productos.
     */
    distinct?: Emprendimiento_productoScalarFieldEnum | Emprendimiento_productoScalarFieldEnum[]
  }

  /**
   * Emprendimiento_producto findMany
   */
  export type Emprendimiento_productoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    /**
     * Filter, which Emprendimiento_productos to fetch.
     */
    where?: Emprendimiento_productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emprendimiento_productos to fetch.
     */
    orderBy?: Emprendimiento_productoOrderByWithRelationInput | Emprendimiento_productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Emprendimiento_productos.
     */
    cursor?: Emprendimiento_productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emprendimiento_productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emprendimiento_productos.
     */
    skip?: number
    distinct?: Emprendimiento_productoScalarFieldEnum | Emprendimiento_productoScalarFieldEnum[]
  }

  /**
   * Emprendimiento_producto create
   */
  export type Emprendimiento_productoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    /**
     * The data needed to create a Emprendimiento_producto.
     */
    data: XOR<Emprendimiento_productoCreateInput, Emprendimiento_productoUncheckedCreateInput>
  }

  /**
   * Emprendimiento_producto createMany
   */
  export type Emprendimiento_productoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Emprendimiento_productos.
     */
    data: Emprendimiento_productoCreateManyInput | Emprendimiento_productoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Emprendimiento_producto createManyAndReturn
   */
  export type Emprendimiento_productoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * The data used to create many Emprendimiento_productos.
     */
    data: Emprendimiento_productoCreateManyInput | Emprendimiento_productoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Emprendimiento_producto update
   */
  export type Emprendimiento_productoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    /**
     * The data needed to update a Emprendimiento_producto.
     */
    data: XOR<Emprendimiento_productoUpdateInput, Emprendimiento_productoUncheckedUpdateInput>
    /**
     * Choose, which Emprendimiento_producto to update.
     */
    where: Emprendimiento_productoWhereUniqueInput
  }

  /**
   * Emprendimiento_producto updateMany
   */
  export type Emprendimiento_productoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Emprendimiento_productos.
     */
    data: XOR<Emprendimiento_productoUpdateManyMutationInput, Emprendimiento_productoUncheckedUpdateManyInput>
    /**
     * Filter which Emprendimiento_productos to update
     */
    where?: Emprendimiento_productoWhereInput
    /**
     * Limit how many Emprendimiento_productos to update.
     */
    limit?: number
  }

  /**
   * Emprendimiento_producto updateManyAndReturn
   */
  export type Emprendimiento_productoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * The data used to update Emprendimiento_productos.
     */
    data: XOR<Emprendimiento_productoUpdateManyMutationInput, Emprendimiento_productoUncheckedUpdateManyInput>
    /**
     * Filter which Emprendimiento_productos to update
     */
    where?: Emprendimiento_productoWhereInput
    /**
     * Limit how many Emprendimiento_productos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Emprendimiento_producto upsert
   */
  export type Emprendimiento_productoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    /**
     * The filter to search for the Emprendimiento_producto to update in case it exists.
     */
    where: Emprendimiento_productoWhereUniqueInput
    /**
     * In case the Emprendimiento_producto found by the `where` argument doesn't exist, create a new Emprendimiento_producto with this data.
     */
    create: XOR<Emprendimiento_productoCreateInput, Emprendimiento_productoUncheckedCreateInput>
    /**
     * In case the Emprendimiento_producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Emprendimiento_productoUpdateInput, Emprendimiento_productoUncheckedUpdateInput>
  }

  /**
   * Emprendimiento_producto delete
   */
  export type Emprendimiento_productoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    /**
     * Filter which Emprendimiento_producto to delete.
     */
    where: Emprendimiento_productoWhereUniqueInput
  }

  /**
   * Emprendimiento_producto deleteMany
   */
  export type Emprendimiento_productoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Emprendimiento_productos to delete
     */
    where?: Emprendimiento_productoWhereInput
    /**
     * Limit how many Emprendimiento_productos to delete.
     */
    limit?: number
  }

  /**
   * Emprendimiento_producto without action
   */
  export type Emprendimiento_productoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
  }


  /**
   * Model Colores_marca
   */

  export type AggregateColores_marca = {
    _count: Colores_marcaCountAggregateOutputType | null
    _min: Colores_marcaMinAggregateOutputType | null
    _max: Colores_marcaMaxAggregateOutputType | null
  }

  export type Colores_marcaMinAggregateOutputType = {
    nom_colores: string | null
    foto: string | null
  }

  export type Colores_marcaMaxAggregateOutputType = {
    nom_colores: string | null
    foto: string | null
  }

  export type Colores_marcaCountAggregateOutputType = {
    nom_colores: number
    foto: number
    _all: number
  }


  export type Colores_marcaMinAggregateInputType = {
    nom_colores?: true
    foto?: true
  }

  export type Colores_marcaMaxAggregateInputType = {
    nom_colores?: true
    foto?: true
  }

  export type Colores_marcaCountAggregateInputType = {
    nom_colores?: true
    foto?: true
    _all?: true
  }

  export type Colores_marcaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Colores_marca to aggregate.
     */
    where?: Colores_marcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colores_marcas to fetch.
     */
    orderBy?: Colores_marcaOrderByWithRelationInput | Colores_marcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Colores_marcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colores_marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colores_marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Colores_marcas
    **/
    _count?: true | Colores_marcaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Colores_marcaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Colores_marcaMaxAggregateInputType
  }

  export type GetColores_marcaAggregateType<T extends Colores_marcaAggregateArgs> = {
        [P in keyof T & keyof AggregateColores_marca]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateColores_marca[P]>
      : GetScalarType<T[P], AggregateColores_marca[P]>
  }




  export type Colores_marcaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Colores_marcaWhereInput
    orderBy?: Colores_marcaOrderByWithAggregationInput | Colores_marcaOrderByWithAggregationInput[]
    by: Colores_marcaScalarFieldEnum[] | Colores_marcaScalarFieldEnum
    having?: Colores_marcaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Colores_marcaCountAggregateInputType | true
    _min?: Colores_marcaMinAggregateInputType
    _max?: Colores_marcaMaxAggregateInputType
  }

  export type Colores_marcaGroupByOutputType = {
    nom_colores: string
    foto: string
    _count: Colores_marcaCountAggregateOutputType | null
    _min: Colores_marcaMinAggregateOutputType | null
    _max: Colores_marcaMaxAggregateOutputType | null
  }

  type GetColores_marcaGroupByPayload<T extends Colores_marcaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Colores_marcaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Colores_marcaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Colores_marcaGroupByOutputType[P]>
            : GetScalarType<T[P], Colores_marcaGroupByOutputType[P]>
        }
      >
    >


  export type Colores_marcaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nom_colores?: boolean
    foto?: boolean
    usuario_emprendimiento?: boolean | Colores_marca$usuario_emprendimientoArgs<ExtArgs>
    _count?: boolean | Colores_marcaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["colores_marca"]>

  export type Colores_marcaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nom_colores?: boolean
    foto?: boolean
  }, ExtArgs["result"]["colores_marca"]>

  export type Colores_marcaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nom_colores?: boolean
    foto?: boolean
  }, ExtArgs["result"]["colores_marca"]>

  export type Colores_marcaSelectScalar = {
    nom_colores?: boolean
    foto?: boolean
  }

  export type Colores_marcaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"nom_colores" | "foto", ExtArgs["result"]["colores_marca"]>
  export type Colores_marcaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_emprendimiento?: boolean | Colores_marca$usuario_emprendimientoArgs<ExtArgs>
    _count?: boolean | Colores_marcaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Colores_marcaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Colores_marcaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Colores_marcaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Colores_marca"
    objects: {
      usuario_emprendimiento: Prisma.$Usuario_EmprendimientoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      nom_colores: string
      foto: string
    }, ExtArgs["result"]["colores_marca"]>
    composites: {}
  }

  type Colores_marcaGetPayload<S extends boolean | null | undefined | Colores_marcaDefaultArgs> = $Result.GetResult<Prisma.$Colores_marcaPayload, S>

  type Colores_marcaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Colores_marcaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Colores_marcaCountAggregateInputType | true
    }

  export interface Colores_marcaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Colores_marca'], meta: { name: 'Colores_marca' } }
    /**
     * Find zero or one Colores_marca that matches the filter.
     * @param {Colores_marcaFindUniqueArgs} args - Arguments to find a Colores_marca
     * @example
     * // Get one Colores_marca
     * const colores_marca = await prisma.colores_marca.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Colores_marcaFindUniqueArgs>(args: SelectSubset<T, Colores_marcaFindUniqueArgs<ExtArgs>>): Prisma__Colores_marcaClient<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Colores_marca that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Colores_marcaFindUniqueOrThrowArgs} args - Arguments to find a Colores_marca
     * @example
     * // Get one Colores_marca
     * const colores_marca = await prisma.colores_marca.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Colores_marcaFindUniqueOrThrowArgs>(args: SelectSubset<T, Colores_marcaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Colores_marcaClient<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Colores_marca that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Colores_marcaFindFirstArgs} args - Arguments to find a Colores_marca
     * @example
     * // Get one Colores_marca
     * const colores_marca = await prisma.colores_marca.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Colores_marcaFindFirstArgs>(args?: SelectSubset<T, Colores_marcaFindFirstArgs<ExtArgs>>): Prisma__Colores_marcaClient<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Colores_marca that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Colores_marcaFindFirstOrThrowArgs} args - Arguments to find a Colores_marca
     * @example
     * // Get one Colores_marca
     * const colores_marca = await prisma.colores_marca.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Colores_marcaFindFirstOrThrowArgs>(args?: SelectSubset<T, Colores_marcaFindFirstOrThrowArgs<ExtArgs>>): Prisma__Colores_marcaClient<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Colores_marcas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Colores_marcaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Colores_marcas
     * const colores_marcas = await prisma.colores_marca.findMany()
     * 
     * // Get first 10 Colores_marcas
     * const colores_marcas = await prisma.colores_marca.findMany({ take: 10 })
     * 
     * // Only select the `nom_colores`
     * const colores_marcaWithNom_coloresOnly = await prisma.colores_marca.findMany({ select: { nom_colores: true } })
     * 
     */
    findMany<T extends Colores_marcaFindManyArgs>(args?: SelectSubset<T, Colores_marcaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Colores_marca.
     * @param {Colores_marcaCreateArgs} args - Arguments to create a Colores_marca.
     * @example
     * // Create one Colores_marca
     * const Colores_marca = await prisma.colores_marca.create({
     *   data: {
     *     // ... data to create a Colores_marca
     *   }
     * })
     * 
     */
    create<T extends Colores_marcaCreateArgs>(args: SelectSubset<T, Colores_marcaCreateArgs<ExtArgs>>): Prisma__Colores_marcaClient<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Colores_marcas.
     * @param {Colores_marcaCreateManyArgs} args - Arguments to create many Colores_marcas.
     * @example
     * // Create many Colores_marcas
     * const colores_marca = await prisma.colores_marca.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Colores_marcaCreateManyArgs>(args?: SelectSubset<T, Colores_marcaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Colores_marcas and returns the data saved in the database.
     * @param {Colores_marcaCreateManyAndReturnArgs} args - Arguments to create many Colores_marcas.
     * @example
     * // Create many Colores_marcas
     * const colores_marca = await prisma.colores_marca.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Colores_marcas and only return the `nom_colores`
     * const colores_marcaWithNom_coloresOnly = await prisma.colores_marca.createManyAndReturn({
     *   select: { nom_colores: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Colores_marcaCreateManyAndReturnArgs>(args?: SelectSubset<T, Colores_marcaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Colores_marca.
     * @param {Colores_marcaDeleteArgs} args - Arguments to delete one Colores_marca.
     * @example
     * // Delete one Colores_marca
     * const Colores_marca = await prisma.colores_marca.delete({
     *   where: {
     *     // ... filter to delete one Colores_marca
     *   }
     * })
     * 
     */
    delete<T extends Colores_marcaDeleteArgs>(args: SelectSubset<T, Colores_marcaDeleteArgs<ExtArgs>>): Prisma__Colores_marcaClient<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Colores_marca.
     * @param {Colores_marcaUpdateArgs} args - Arguments to update one Colores_marca.
     * @example
     * // Update one Colores_marca
     * const colores_marca = await prisma.colores_marca.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Colores_marcaUpdateArgs>(args: SelectSubset<T, Colores_marcaUpdateArgs<ExtArgs>>): Prisma__Colores_marcaClient<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Colores_marcas.
     * @param {Colores_marcaDeleteManyArgs} args - Arguments to filter Colores_marcas to delete.
     * @example
     * // Delete a few Colores_marcas
     * const { count } = await prisma.colores_marca.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Colores_marcaDeleteManyArgs>(args?: SelectSubset<T, Colores_marcaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Colores_marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Colores_marcaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Colores_marcas
     * const colores_marca = await prisma.colores_marca.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Colores_marcaUpdateManyArgs>(args: SelectSubset<T, Colores_marcaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Colores_marcas and returns the data updated in the database.
     * @param {Colores_marcaUpdateManyAndReturnArgs} args - Arguments to update many Colores_marcas.
     * @example
     * // Update many Colores_marcas
     * const colores_marca = await prisma.colores_marca.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Colores_marcas and only return the `nom_colores`
     * const colores_marcaWithNom_coloresOnly = await prisma.colores_marca.updateManyAndReturn({
     *   select: { nom_colores: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Colores_marcaUpdateManyAndReturnArgs>(args: SelectSubset<T, Colores_marcaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Colores_marca.
     * @param {Colores_marcaUpsertArgs} args - Arguments to update or create a Colores_marca.
     * @example
     * // Update or create a Colores_marca
     * const colores_marca = await prisma.colores_marca.upsert({
     *   create: {
     *     // ... data to create a Colores_marca
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Colores_marca we want to update
     *   }
     * })
     */
    upsert<T extends Colores_marcaUpsertArgs>(args: SelectSubset<T, Colores_marcaUpsertArgs<ExtArgs>>): Prisma__Colores_marcaClient<$Result.GetResult<Prisma.$Colores_marcaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Colores_marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Colores_marcaCountArgs} args - Arguments to filter Colores_marcas to count.
     * @example
     * // Count the number of Colores_marcas
     * const count = await prisma.colores_marca.count({
     *   where: {
     *     // ... the filter for the Colores_marcas we want to count
     *   }
     * })
    **/
    count<T extends Colores_marcaCountArgs>(
      args?: Subset<T, Colores_marcaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Colores_marcaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Colores_marca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Colores_marcaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Colores_marcaAggregateArgs>(args: Subset<T, Colores_marcaAggregateArgs>): Prisma.PrismaPromise<GetColores_marcaAggregateType<T>>

    /**
     * Group by Colores_marca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Colores_marcaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Colores_marcaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Colores_marcaGroupByArgs['orderBy'] }
        : { orderBy?: Colores_marcaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Colores_marcaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetColores_marcaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Colores_marca model
   */
  readonly fields: Colores_marcaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Colores_marca.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Colores_marcaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario_emprendimiento<T extends Colores_marca$usuario_emprendimientoArgs<ExtArgs> = {}>(args?: Subset<T, Colores_marca$usuario_emprendimientoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Usuario_EmprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Colores_marca model
   */
  interface Colores_marcaFieldRefs {
    readonly nom_colores: FieldRef<"Colores_marca", 'String'>
    readonly foto: FieldRef<"Colores_marca", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Colores_marca findUnique
   */
  export type Colores_marcaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
    /**
     * Filter, which Colores_marca to fetch.
     */
    where: Colores_marcaWhereUniqueInput
  }

  /**
   * Colores_marca findUniqueOrThrow
   */
  export type Colores_marcaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
    /**
     * Filter, which Colores_marca to fetch.
     */
    where: Colores_marcaWhereUniqueInput
  }

  /**
   * Colores_marca findFirst
   */
  export type Colores_marcaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
    /**
     * Filter, which Colores_marca to fetch.
     */
    where?: Colores_marcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colores_marcas to fetch.
     */
    orderBy?: Colores_marcaOrderByWithRelationInput | Colores_marcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Colores_marcas.
     */
    cursor?: Colores_marcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colores_marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colores_marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Colores_marcas.
     */
    distinct?: Colores_marcaScalarFieldEnum | Colores_marcaScalarFieldEnum[]
  }

  /**
   * Colores_marca findFirstOrThrow
   */
  export type Colores_marcaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
    /**
     * Filter, which Colores_marca to fetch.
     */
    where?: Colores_marcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colores_marcas to fetch.
     */
    orderBy?: Colores_marcaOrderByWithRelationInput | Colores_marcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Colores_marcas.
     */
    cursor?: Colores_marcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colores_marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colores_marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Colores_marcas.
     */
    distinct?: Colores_marcaScalarFieldEnum | Colores_marcaScalarFieldEnum[]
  }

  /**
   * Colores_marca findMany
   */
  export type Colores_marcaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
    /**
     * Filter, which Colores_marcas to fetch.
     */
    where?: Colores_marcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colores_marcas to fetch.
     */
    orderBy?: Colores_marcaOrderByWithRelationInput | Colores_marcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Colores_marcas.
     */
    cursor?: Colores_marcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colores_marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colores_marcas.
     */
    skip?: number
    distinct?: Colores_marcaScalarFieldEnum | Colores_marcaScalarFieldEnum[]
  }

  /**
   * Colores_marca create
   */
  export type Colores_marcaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
    /**
     * The data needed to create a Colores_marca.
     */
    data: XOR<Colores_marcaCreateInput, Colores_marcaUncheckedCreateInput>
  }

  /**
   * Colores_marca createMany
   */
  export type Colores_marcaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Colores_marcas.
     */
    data: Colores_marcaCreateManyInput | Colores_marcaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Colores_marca createManyAndReturn
   */
  export type Colores_marcaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * The data used to create many Colores_marcas.
     */
    data: Colores_marcaCreateManyInput | Colores_marcaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Colores_marca update
   */
  export type Colores_marcaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
    /**
     * The data needed to update a Colores_marca.
     */
    data: XOR<Colores_marcaUpdateInput, Colores_marcaUncheckedUpdateInput>
    /**
     * Choose, which Colores_marca to update.
     */
    where: Colores_marcaWhereUniqueInput
  }

  /**
   * Colores_marca updateMany
   */
  export type Colores_marcaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Colores_marcas.
     */
    data: XOR<Colores_marcaUpdateManyMutationInput, Colores_marcaUncheckedUpdateManyInput>
    /**
     * Filter which Colores_marcas to update
     */
    where?: Colores_marcaWhereInput
    /**
     * Limit how many Colores_marcas to update.
     */
    limit?: number
  }

  /**
   * Colores_marca updateManyAndReturn
   */
  export type Colores_marcaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * The data used to update Colores_marcas.
     */
    data: XOR<Colores_marcaUpdateManyMutationInput, Colores_marcaUncheckedUpdateManyInput>
    /**
     * Filter which Colores_marcas to update
     */
    where?: Colores_marcaWhereInput
    /**
     * Limit how many Colores_marcas to update.
     */
    limit?: number
  }

  /**
   * Colores_marca upsert
   */
  export type Colores_marcaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
    /**
     * The filter to search for the Colores_marca to update in case it exists.
     */
    where: Colores_marcaWhereUniqueInput
    /**
     * In case the Colores_marca found by the `where` argument doesn't exist, create a new Colores_marca with this data.
     */
    create: XOR<Colores_marcaCreateInput, Colores_marcaUncheckedCreateInput>
    /**
     * In case the Colores_marca was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Colores_marcaUpdateInput, Colores_marcaUncheckedUpdateInput>
  }

  /**
   * Colores_marca delete
   */
  export type Colores_marcaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
    /**
     * Filter which Colores_marca to delete.
     */
    where: Colores_marcaWhereUniqueInput
  }

  /**
   * Colores_marca deleteMany
   */
  export type Colores_marcaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Colores_marcas to delete
     */
    where?: Colores_marcaWhereInput
    /**
     * Limit how many Colores_marcas to delete.
     */
    limit?: number
  }

  /**
   * Colores_marca.usuario_emprendimiento
   */
  export type Colores_marca$usuario_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario_Emprendimiento
     */
    select?: Usuario_EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario_Emprendimiento
     */
    omit?: Usuario_EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Usuario_EmprendimientoInclude<ExtArgs> | null
    where?: Usuario_EmprendimientoWhereInput
    orderBy?: Usuario_EmprendimientoOrderByWithRelationInput | Usuario_EmprendimientoOrderByWithRelationInput[]
    cursor?: Usuario_EmprendimientoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Usuario_EmprendimientoScalarFieldEnum | Usuario_EmprendimientoScalarFieldEnum[]
  }

  /**
   * Colores_marca without action
   */
  export type Colores_marcaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores_marca
     */
    select?: Colores_marcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Colores_marca
     */
    omit?: Colores_marcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Colores_marcaInclude<ExtArgs> | null
  }


  /**
   * Model Marketing_emprendimiento
   */

  export type AggregateMarketing_emprendimiento = {
    _count: Marketing_emprendimientoCountAggregateOutputType | null
    _avg: Marketing_emprendimientoAvgAggregateOutputType | null
    _sum: Marketing_emprendimientoSumAggregateOutputType | null
    _min: Marketing_emprendimientoMinAggregateOutputType | null
    _max: Marketing_emprendimientoMaxAggregateOutputType | null
  }

  export type Marketing_emprendimientoAvgAggregateOutputType = {
    Id_marketing_emprendimiento: number | null
    Id_mark: number | null
  }

  export type Marketing_emprendimientoSumAggregateOutputType = {
    Id_marketing_emprendimiento: number | null
    Id_mark: number | null
  }

  export type Marketing_emprendimientoMinAggregateOutputType = {
    Id_marketing_emprendimiento: number | null
    typo_emp: string | null
    Id_mark: number | null
  }

  export type Marketing_emprendimientoMaxAggregateOutputType = {
    Id_marketing_emprendimiento: number | null
    typo_emp: string | null
    Id_mark: number | null
  }

  export type Marketing_emprendimientoCountAggregateOutputType = {
    Id_marketing_emprendimiento: number
    typo_emp: number
    Id_mark: number
    _all: number
  }


  export type Marketing_emprendimientoAvgAggregateInputType = {
    Id_marketing_emprendimiento?: true
    Id_mark?: true
  }

  export type Marketing_emprendimientoSumAggregateInputType = {
    Id_marketing_emprendimiento?: true
    Id_mark?: true
  }

  export type Marketing_emprendimientoMinAggregateInputType = {
    Id_marketing_emprendimiento?: true
    typo_emp?: true
    Id_mark?: true
  }

  export type Marketing_emprendimientoMaxAggregateInputType = {
    Id_marketing_emprendimiento?: true
    typo_emp?: true
    Id_mark?: true
  }

  export type Marketing_emprendimientoCountAggregateInputType = {
    Id_marketing_emprendimiento?: true
    typo_emp?: true
    Id_mark?: true
    _all?: true
  }

  export type Marketing_emprendimientoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marketing_emprendimiento to aggregate.
     */
    where?: Marketing_emprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marketing_emprendimientos to fetch.
     */
    orderBy?: Marketing_emprendimientoOrderByWithRelationInput | Marketing_emprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Marketing_emprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marketing_emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marketing_emprendimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Marketing_emprendimientos
    **/
    _count?: true | Marketing_emprendimientoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Marketing_emprendimientoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Marketing_emprendimientoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Marketing_emprendimientoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Marketing_emprendimientoMaxAggregateInputType
  }

  export type GetMarketing_emprendimientoAggregateType<T extends Marketing_emprendimientoAggregateArgs> = {
        [P in keyof T & keyof AggregateMarketing_emprendimiento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarketing_emprendimiento[P]>
      : GetScalarType<T[P], AggregateMarketing_emprendimiento[P]>
  }




  export type Marketing_emprendimientoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Marketing_emprendimientoWhereInput
    orderBy?: Marketing_emprendimientoOrderByWithAggregationInput | Marketing_emprendimientoOrderByWithAggregationInput[]
    by: Marketing_emprendimientoScalarFieldEnum[] | Marketing_emprendimientoScalarFieldEnum
    having?: Marketing_emprendimientoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Marketing_emprendimientoCountAggregateInputType | true
    _avg?: Marketing_emprendimientoAvgAggregateInputType
    _sum?: Marketing_emprendimientoSumAggregateInputType
    _min?: Marketing_emprendimientoMinAggregateInputType
    _max?: Marketing_emprendimientoMaxAggregateInputType
  }

  export type Marketing_emprendimientoGroupByOutputType = {
    Id_marketing_emprendimiento: number
    typo_emp: string
    Id_mark: number
    _count: Marketing_emprendimientoCountAggregateOutputType | null
    _avg: Marketing_emprendimientoAvgAggregateOutputType | null
    _sum: Marketing_emprendimientoSumAggregateOutputType | null
    _min: Marketing_emprendimientoMinAggregateOutputType | null
    _max: Marketing_emprendimientoMaxAggregateOutputType | null
  }

  type GetMarketing_emprendimientoGroupByPayload<T extends Marketing_emprendimientoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Marketing_emprendimientoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Marketing_emprendimientoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Marketing_emprendimientoGroupByOutputType[P]>
            : GetScalarType<T[P], Marketing_emprendimientoGroupByOutputType[P]>
        }
      >
    >


  export type Marketing_emprendimientoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_marketing_emprendimiento?: boolean
    typo_emp?: boolean
    Id_mark?: boolean
    rela_emp_mark?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_mark_emp?: boolean | MarketingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketing_emprendimiento"]>

  export type Marketing_emprendimientoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_marketing_emprendimiento?: boolean
    typo_emp?: boolean
    Id_mark?: boolean
    rela_emp_mark?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_mark_emp?: boolean | MarketingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketing_emprendimiento"]>

  export type Marketing_emprendimientoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_marketing_emprendimiento?: boolean
    typo_emp?: boolean
    Id_mark?: boolean
    rela_emp_mark?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_mark_emp?: boolean | MarketingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketing_emprendimiento"]>

  export type Marketing_emprendimientoSelectScalar = {
    Id_marketing_emprendimiento?: boolean
    typo_emp?: boolean
    Id_mark?: boolean
  }

  export type Marketing_emprendimientoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_marketing_emprendimiento" | "typo_emp" | "Id_mark", ExtArgs["result"]["marketing_emprendimiento"]>
  export type Marketing_emprendimientoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_emp_mark?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_mark_emp?: boolean | MarketingDefaultArgs<ExtArgs>
  }
  export type Marketing_emprendimientoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_emp_mark?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_mark_emp?: boolean | MarketingDefaultArgs<ExtArgs>
  }
  export type Marketing_emprendimientoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_emp_mark?: boolean | EmprendimientoDefaultArgs<ExtArgs>
    rela_mark_emp?: boolean | MarketingDefaultArgs<ExtArgs>
  }

  export type $Marketing_emprendimientoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Marketing_emprendimiento"
    objects: {
      rela_emp_mark: Prisma.$EmprendimientoPayload<ExtArgs>
      rela_mark_emp: Prisma.$MarketingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_marketing_emprendimiento: number
      typo_emp: string
      Id_mark: number
    }, ExtArgs["result"]["marketing_emprendimiento"]>
    composites: {}
  }

  type Marketing_emprendimientoGetPayload<S extends boolean | null | undefined | Marketing_emprendimientoDefaultArgs> = $Result.GetResult<Prisma.$Marketing_emprendimientoPayload, S>

  type Marketing_emprendimientoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Marketing_emprendimientoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Marketing_emprendimientoCountAggregateInputType | true
    }

  export interface Marketing_emprendimientoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Marketing_emprendimiento'], meta: { name: 'Marketing_emprendimiento' } }
    /**
     * Find zero or one Marketing_emprendimiento that matches the filter.
     * @param {Marketing_emprendimientoFindUniqueArgs} args - Arguments to find a Marketing_emprendimiento
     * @example
     * // Get one Marketing_emprendimiento
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Marketing_emprendimientoFindUniqueArgs>(args: SelectSubset<T, Marketing_emprendimientoFindUniqueArgs<ExtArgs>>): Prisma__Marketing_emprendimientoClient<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Marketing_emprendimiento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Marketing_emprendimientoFindUniqueOrThrowArgs} args - Arguments to find a Marketing_emprendimiento
     * @example
     * // Get one Marketing_emprendimiento
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Marketing_emprendimientoFindUniqueOrThrowArgs>(args: SelectSubset<T, Marketing_emprendimientoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Marketing_emprendimientoClient<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Marketing_emprendimiento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Marketing_emprendimientoFindFirstArgs} args - Arguments to find a Marketing_emprendimiento
     * @example
     * // Get one Marketing_emprendimiento
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Marketing_emprendimientoFindFirstArgs>(args?: SelectSubset<T, Marketing_emprendimientoFindFirstArgs<ExtArgs>>): Prisma__Marketing_emprendimientoClient<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Marketing_emprendimiento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Marketing_emprendimientoFindFirstOrThrowArgs} args - Arguments to find a Marketing_emprendimiento
     * @example
     * // Get one Marketing_emprendimiento
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Marketing_emprendimientoFindFirstOrThrowArgs>(args?: SelectSubset<T, Marketing_emprendimientoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Marketing_emprendimientoClient<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Marketing_emprendimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Marketing_emprendimientoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Marketing_emprendimientos
     * const marketing_emprendimientos = await prisma.marketing_emprendimiento.findMany()
     * 
     * // Get first 10 Marketing_emprendimientos
     * const marketing_emprendimientos = await prisma.marketing_emprendimiento.findMany({ take: 10 })
     * 
     * // Only select the `Id_marketing_emprendimiento`
     * const marketing_emprendimientoWithId_marketing_emprendimientoOnly = await prisma.marketing_emprendimiento.findMany({ select: { Id_marketing_emprendimiento: true } })
     * 
     */
    findMany<T extends Marketing_emprendimientoFindManyArgs>(args?: SelectSubset<T, Marketing_emprendimientoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Marketing_emprendimiento.
     * @param {Marketing_emprendimientoCreateArgs} args - Arguments to create a Marketing_emprendimiento.
     * @example
     * // Create one Marketing_emprendimiento
     * const Marketing_emprendimiento = await prisma.marketing_emprendimiento.create({
     *   data: {
     *     // ... data to create a Marketing_emprendimiento
     *   }
     * })
     * 
     */
    create<T extends Marketing_emprendimientoCreateArgs>(args: SelectSubset<T, Marketing_emprendimientoCreateArgs<ExtArgs>>): Prisma__Marketing_emprendimientoClient<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Marketing_emprendimientos.
     * @param {Marketing_emprendimientoCreateManyArgs} args - Arguments to create many Marketing_emprendimientos.
     * @example
     * // Create many Marketing_emprendimientos
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Marketing_emprendimientoCreateManyArgs>(args?: SelectSubset<T, Marketing_emprendimientoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Marketing_emprendimientos and returns the data saved in the database.
     * @param {Marketing_emprendimientoCreateManyAndReturnArgs} args - Arguments to create many Marketing_emprendimientos.
     * @example
     * // Create many Marketing_emprendimientos
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Marketing_emprendimientos and only return the `Id_marketing_emprendimiento`
     * const marketing_emprendimientoWithId_marketing_emprendimientoOnly = await prisma.marketing_emprendimiento.createManyAndReturn({
     *   select: { Id_marketing_emprendimiento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Marketing_emprendimientoCreateManyAndReturnArgs>(args?: SelectSubset<T, Marketing_emprendimientoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Marketing_emprendimiento.
     * @param {Marketing_emprendimientoDeleteArgs} args - Arguments to delete one Marketing_emprendimiento.
     * @example
     * // Delete one Marketing_emprendimiento
     * const Marketing_emprendimiento = await prisma.marketing_emprendimiento.delete({
     *   where: {
     *     // ... filter to delete one Marketing_emprendimiento
     *   }
     * })
     * 
     */
    delete<T extends Marketing_emprendimientoDeleteArgs>(args: SelectSubset<T, Marketing_emprendimientoDeleteArgs<ExtArgs>>): Prisma__Marketing_emprendimientoClient<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Marketing_emprendimiento.
     * @param {Marketing_emprendimientoUpdateArgs} args - Arguments to update one Marketing_emprendimiento.
     * @example
     * // Update one Marketing_emprendimiento
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Marketing_emprendimientoUpdateArgs>(args: SelectSubset<T, Marketing_emprendimientoUpdateArgs<ExtArgs>>): Prisma__Marketing_emprendimientoClient<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Marketing_emprendimientos.
     * @param {Marketing_emprendimientoDeleteManyArgs} args - Arguments to filter Marketing_emprendimientos to delete.
     * @example
     * // Delete a few Marketing_emprendimientos
     * const { count } = await prisma.marketing_emprendimiento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Marketing_emprendimientoDeleteManyArgs>(args?: SelectSubset<T, Marketing_emprendimientoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Marketing_emprendimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Marketing_emprendimientoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Marketing_emprendimientos
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Marketing_emprendimientoUpdateManyArgs>(args: SelectSubset<T, Marketing_emprendimientoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Marketing_emprendimientos and returns the data updated in the database.
     * @param {Marketing_emprendimientoUpdateManyAndReturnArgs} args - Arguments to update many Marketing_emprendimientos.
     * @example
     * // Update many Marketing_emprendimientos
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Marketing_emprendimientos and only return the `Id_marketing_emprendimiento`
     * const marketing_emprendimientoWithId_marketing_emprendimientoOnly = await prisma.marketing_emprendimiento.updateManyAndReturn({
     *   select: { Id_marketing_emprendimiento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Marketing_emprendimientoUpdateManyAndReturnArgs>(args: SelectSubset<T, Marketing_emprendimientoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Marketing_emprendimiento.
     * @param {Marketing_emprendimientoUpsertArgs} args - Arguments to update or create a Marketing_emprendimiento.
     * @example
     * // Update or create a Marketing_emprendimiento
     * const marketing_emprendimiento = await prisma.marketing_emprendimiento.upsert({
     *   create: {
     *     // ... data to create a Marketing_emprendimiento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Marketing_emprendimiento we want to update
     *   }
     * })
     */
    upsert<T extends Marketing_emprendimientoUpsertArgs>(args: SelectSubset<T, Marketing_emprendimientoUpsertArgs<ExtArgs>>): Prisma__Marketing_emprendimientoClient<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Marketing_emprendimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Marketing_emprendimientoCountArgs} args - Arguments to filter Marketing_emprendimientos to count.
     * @example
     * // Count the number of Marketing_emprendimientos
     * const count = await prisma.marketing_emprendimiento.count({
     *   where: {
     *     // ... the filter for the Marketing_emprendimientos we want to count
     *   }
     * })
    **/
    count<T extends Marketing_emprendimientoCountArgs>(
      args?: Subset<T, Marketing_emprendimientoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Marketing_emprendimientoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Marketing_emprendimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Marketing_emprendimientoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Marketing_emprendimientoAggregateArgs>(args: Subset<T, Marketing_emprendimientoAggregateArgs>): Prisma.PrismaPromise<GetMarketing_emprendimientoAggregateType<T>>

    /**
     * Group by Marketing_emprendimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Marketing_emprendimientoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Marketing_emprendimientoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Marketing_emprendimientoGroupByArgs['orderBy'] }
        : { orderBy?: Marketing_emprendimientoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Marketing_emprendimientoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarketing_emprendimientoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Marketing_emprendimiento model
   */
  readonly fields: Marketing_emprendimientoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Marketing_emprendimiento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Marketing_emprendimientoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rela_emp_mark<T extends EmprendimientoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmprendimientoDefaultArgs<ExtArgs>>): Prisma__EmprendimientoClient<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rela_mark_emp<T extends MarketingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MarketingDefaultArgs<ExtArgs>>): Prisma__MarketingClient<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Marketing_emprendimiento model
   */
  interface Marketing_emprendimientoFieldRefs {
    readonly Id_marketing_emprendimiento: FieldRef<"Marketing_emprendimiento", 'Int'>
    readonly typo_emp: FieldRef<"Marketing_emprendimiento", 'String'>
    readonly Id_mark: FieldRef<"Marketing_emprendimiento", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Marketing_emprendimiento findUnique
   */
  export type Marketing_emprendimientoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Marketing_emprendimiento to fetch.
     */
    where: Marketing_emprendimientoWhereUniqueInput
  }

  /**
   * Marketing_emprendimiento findUniqueOrThrow
   */
  export type Marketing_emprendimientoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Marketing_emprendimiento to fetch.
     */
    where: Marketing_emprendimientoWhereUniqueInput
  }

  /**
   * Marketing_emprendimiento findFirst
   */
  export type Marketing_emprendimientoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Marketing_emprendimiento to fetch.
     */
    where?: Marketing_emprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marketing_emprendimientos to fetch.
     */
    orderBy?: Marketing_emprendimientoOrderByWithRelationInput | Marketing_emprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marketing_emprendimientos.
     */
    cursor?: Marketing_emprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marketing_emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marketing_emprendimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marketing_emprendimientos.
     */
    distinct?: Marketing_emprendimientoScalarFieldEnum | Marketing_emprendimientoScalarFieldEnum[]
  }

  /**
   * Marketing_emprendimiento findFirstOrThrow
   */
  export type Marketing_emprendimientoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Marketing_emprendimiento to fetch.
     */
    where?: Marketing_emprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marketing_emprendimientos to fetch.
     */
    orderBy?: Marketing_emprendimientoOrderByWithRelationInput | Marketing_emprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marketing_emprendimientos.
     */
    cursor?: Marketing_emprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marketing_emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marketing_emprendimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marketing_emprendimientos.
     */
    distinct?: Marketing_emprendimientoScalarFieldEnum | Marketing_emprendimientoScalarFieldEnum[]
  }

  /**
   * Marketing_emprendimiento findMany
   */
  export type Marketing_emprendimientoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    /**
     * Filter, which Marketing_emprendimientos to fetch.
     */
    where?: Marketing_emprendimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marketing_emprendimientos to fetch.
     */
    orderBy?: Marketing_emprendimientoOrderByWithRelationInput | Marketing_emprendimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Marketing_emprendimientos.
     */
    cursor?: Marketing_emprendimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marketing_emprendimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marketing_emprendimientos.
     */
    skip?: number
    distinct?: Marketing_emprendimientoScalarFieldEnum | Marketing_emprendimientoScalarFieldEnum[]
  }

  /**
   * Marketing_emprendimiento create
   */
  export type Marketing_emprendimientoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    /**
     * The data needed to create a Marketing_emprendimiento.
     */
    data: XOR<Marketing_emprendimientoCreateInput, Marketing_emprendimientoUncheckedCreateInput>
  }

  /**
   * Marketing_emprendimiento createMany
   */
  export type Marketing_emprendimientoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Marketing_emprendimientos.
     */
    data: Marketing_emprendimientoCreateManyInput | Marketing_emprendimientoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Marketing_emprendimiento createManyAndReturn
   */
  export type Marketing_emprendimientoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * The data used to create many Marketing_emprendimientos.
     */
    data: Marketing_emprendimientoCreateManyInput | Marketing_emprendimientoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Marketing_emprendimiento update
   */
  export type Marketing_emprendimientoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    /**
     * The data needed to update a Marketing_emprendimiento.
     */
    data: XOR<Marketing_emprendimientoUpdateInput, Marketing_emprendimientoUncheckedUpdateInput>
    /**
     * Choose, which Marketing_emprendimiento to update.
     */
    where: Marketing_emprendimientoWhereUniqueInput
  }

  /**
   * Marketing_emprendimiento updateMany
   */
  export type Marketing_emprendimientoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Marketing_emprendimientos.
     */
    data: XOR<Marketing_emprendimientoUpdateManyMutationInput, Marketing_emprendimientoUncheckedUpdateManyInput>
    /**
     * Filter which Marketing_emprendimientos to update
     */
    where?: Marketing_emprendimientoWhereInput
    /**
     * Limit how many Marketing_emprendimientos to update.
     */
    limit?: number
  }

  /**
   * Marketing_emprendimiento updateManyAndReturn
   */
  export type Marketing_emprendimientoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * The data used to update Marketing_emprendimientos.
     */
    data: XOR<Marketing_emprendimientoUpdateManyMutationInput, Marketing_emprendimientoUncheckedUpdateManyInput>
    /**
     * Filter which Marketing_emprendimientos to update
     */
    where?: Marketing_emprendimientoWhereInput
    /**
     * Limit how many Marketing_emprendimientos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Marketing_emprendimiento upsert
   */
  export type Marketing_emprendimientoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    /**
     * The filter to search for the Marketing_emprendimiento to update in case it exists.
     */
    where: Marketing_emprendimientoWhereUniqueInput
    /**
     * In case the Marketing_emprendimiento found by the `where` argument doesn't exist, create a new Marketing_emprendimiento with this data.
     */
    create: XOR<Marketing_emprendimientoCreateInput, Marketing_emprendimientoUncheckedCreateInput>
    /**
     * In case the Marketing_emprendimiento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Marketing_emprendimientoUpdateInput, Marketing_emprendimientoUncheckedUpdateInput>
  }

  /**
   * Marketing_emprendimiento delete
   */
  export type Marketing_emprendimientoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    /**
     * Filter which Marketing_emprendimiento to delete.
     */
    where: Marketing_emprendimientoWhereUniqueInput
  }

  /**
   * Marketing_emprendimiento deleteMany
   */
  export type Marketing_emprendimientoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marketing_emprendimientos to delete
     */
    where?: Marketing_emprendimientoWhereInput
    /**
     * Limit how many Marketing_emprendimientos to delete.
     */
    limit?: number
  }

  /**
   * Marketing_emprendimiento without action
   */
  export type Marketing_emprendimientoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
  }


  /**
   * Model Marketing
   */

  export type AggregateMarketing = {
    _count: MarketingCountAggregateOutputType | null
    _avg: MarketingAvgAggregateOutputType | null
    _sum: MarketingSumAggregateOutputType | null
    _min: MarketingMinAggregateOutputType | null
    _max: MarketingMaxAggregateOutputType | null
  }

  export type MarketingAvgAggregateOutputType = {
    Id_marketing: number | null
  }

  export type MarketingSumAggregateOutputType = {
    Id_marketing: number | null
  }

  export type MarketingMinAggregateOutputType = {
    Id_marketing: number | null
    publicacion: string | null
  }

  export type MarketingMaxAggregateOutputType = {
    Id_marketing: number | null
    publicacion: string | null
  }

  export type MarketingCountAggregateOutputType = {
    Id_marketing: number
    publicacion: number
    _all: number
  }


  export type MarketingAvgAggregateInputType = {
    Id_marketing?: true
  }

  export type MarketingSumAggregateInputType = {
    Id_marketing?: true
  }

  export type MarketingMinAggregateInputType = {
    Id_marketing?: true
    publicacion?: true
  }

  export type MarketingMaxAggregateInputType = {
    Id_marketing?: true
    publicacion?: true
  }

  export type MarketingCountAggregateInputType = {
    Id_marketing?: true
    publicacion?: true
    _all?: true
  }

  export type MarketingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marketing to aggregate.
     */
    where?: MarketingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marketings to fetch.
     */
    orderBy?: MarketingOrderByWithRelationInput | MarketingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MarketingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marketings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marketings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Marketings
    **/
    _count?: true | MarketingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MarketingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MarketingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MarketingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MarketingMaxAggregateInputType
  }

  export type GetMarketingAggregateType<T extends MarketingAggregateArgs> = {
        [P in keyof T & keyof AggregateMarketing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarketing[P]>
      : GetScalarType<T[P], AggregateMarketing[P]>
  }




  export type MarketingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarketingWhereInput
    orderBy?: MarketingOrderByWithAggregationInput | MarketingOrderByWithAggregationInput[]
    by: MarketingScalarFieldEnum[] | MarketingScalarFieldEnum
    having?: MarketingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MarketingCountAggregateInputType | true
    _avg?: MarketingAvgAggregateInputType
    _sum?: MarketingSumAggregateInputType
    _min?: MarketingMinAggregateInputType
    _max?: MarketingMaxAggregateInputType
  }

  export type MarketingGroupByOutputType = {
    Id_marketing: number
    publicacion: string
    _count: MarketingCountAggregateOutputType | null
    _avg: MarketingAvgAggregateOutputType | null
    _sum: MarketingSumAggregateOutputType | null
    _min: MarketingMinAggregateOutputType | null
    _max: MarketingMaxAggregateOutputType | null
  }

  type GetMarketingGroupByPayload<T extends MarketingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MarketingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MarketingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MarketingGroupByOutputType[P]>
            : GetScalarType<T[P], MarketingGroupByOutputType[P]>
        }
      >
    >


  export type MarketingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_marketing?: boolean
    publicacion?: boolean
    rela_publi_mark?: boolean | PublicacionesDefaultArgs<ExtArgs>
    marketing_emprendimiento?: boolean | Marketing$marketing_emprendimientoArgs<ExtArgs>
    _count?: boolean | MarketingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketing"]>

  export type MarketingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_marketing?: boolean
    publicacion?: boolean
    rela_publi_mark?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketing"]>

  export type MarketingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_marketing?: boolean
    publicacion?: boolean
    rela_publi_mark?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketing"]>

  export type MarketingSelectScalar = {
    Id_marketing?: boolean
    publicacion?: boolean
  }

  export type MarketingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_marketing" | "publicacion", ExtArgs["result"]["marketing"]>
  export type MarketingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_publi_mark?: boolean | PublicacionesDefaultArgs<ExtArgs>
    marketing_emprendimiento?: boolean | Marketing$marketing_emprendimientoArgs<ExtArgs>
    _count?: boolean | MarketingCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MarketingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_publi_mark?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }
  export type MarketingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_publi_mark?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }

  export type $MarketingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Marketing"
    objects: {
      rela_publi_mark: Prisma.$PublicacionesPayload<ExtArgs>
      marketing_emprendimiento: Prisma.$Marketing_emprendimientoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_marketing: number
      publicacion: string
    }, ExtArgs["result"]["marketing"]>
    composites: {}
  }

  type MarketingGetPayload<S extends boolean | null | undefined | MarketingDefaultArgs> = $Result.GetResult<Prisma.$MarketingPayload, S>

  type MarketingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MarketingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MarketingCountAggregateInputType | true
    }

  export interface MarketingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Marketing'], meta: { name: 'Marketing' } }
    /**
     * Find zero or one Marketing that matches the filter.
     * @param {MarketingFindUniqueArgs} args - Arguments to find a Marketing
     * @example
     * // Get one Marketing
     * const marketing = await prisma.marketing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MarketingFindUniqueArgs>(args: SelectSubset<T, MarketingFindUniqueArgs<ExtArgs>>): Prisma__MarketingClient<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Marketing that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MarketingFindUniqueOrThrowArgs} args - Arguments to find a Marketing
     * @example
     * // Get one Marketing
     * const marketing = await prisma.marketing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MarketingFindUniqueOrThrowArgs>(args: SelectSubset<T, MarketingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MarketingClient<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Marketing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketingFindFirstArgs} args - Arguments to find a Marketing
     * @example
     * // Get one Marketing
     * const marketing = await prisma.marketing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MarketingFindFirstArgs>(args?: SelectSubset<T, MarketingFindFirstArgs<ExtArgs>>): Prisma__MarketingClient<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Marketing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketingFindFirstOrThrowArgs} args - Arguments to find a Marketing
     * @example
     * // Get one Marketing
     * const marketing = await prisma.marketing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MarketingFindFirstOrThrowArgs>(args?: SelectSubset<T, MarketingFindFirstOrThrowArgs<ExtArgs>>): Prisma__MarketingClient<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Marketings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Marketings
     * const marketings = await prisma.marketing.findMany()
     * 
     * // Get first 10 Marketings
     * const marketings = await prisma.marketing.findMany({ take: 10 })
     * 
     * // Only select the `Id_marketing`
     * const marketingWithId_marketingOnly = await prisma.marketing.findMany({ select: { Id_marketing: true } })
     * 
     */
    findMany<T extends MarketingFindManyArgs>(args?: SelectSubset<T, MarketingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Marketing.
     * @param {MarketingCreateArgs} args - Arguments to create a Marketing.
     * @example
     * // Create one Marketing
     * const Marketing = await prisma.marketing.create({
     *   data: {
     *     // ... data to create a Marketing
     *   }
     * })
     * 
     */
    create<T extends MarketingCreateArgs>(args: SelectSubset<T, MarketingCreateArgs<ExtArgs>>): Prisma__MarketingClient<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Marketings.
     * @param {MarketingCreateManyArgs} args - Arguments to create many Marketings.
     * @example
     * // Create many Marketings
     * const marketing = await prisma.marketing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MarketingCreateManyArgs>(args?: SelectSubset<T, MarketingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Marketings and returns the data saved in the database.
     * @param {MarketingCreateManyAndReturnArgs} args - Arguments to create many Marketings.
     * @example
     * // Create many Marketings
     * const marketing = await prisma.marketing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Marketings and only return the `Id_marketing`
     * const marketingWithId_marketingOnly = await prisma.marketing.createManyAndReturn({
     *   select: { Id_marketing: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MarketingCreateManyAndReturnArgs>(args?: SelectSubset<T, MarketingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Marketing.
     * @param {MarketingDeleteArgs} args - Arguments to delete one Marketing.
     * @example
     * // Delete one Marketing
     * const Marketing = await prisma.marketing.delete({
     *   where: {
     *     // ... filter to delete one Marketing
     *   }
     * })
     * 
     */
    delete<T extends MarketingDeleteArgs>(args: SelectSubset<T, MarketingDeleteArgs<ExtArgs>>): Prisma__MarketingClient<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Marketing.
     * @param {MarketingUpdateArgs} args - Arguments to update one Marketing.
     * @example
     * // Update one Marketing
     * const marketing = await prisma.marketing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MarketingUpdateArgs>(args: SelectSubset<T, MarketingUpdateArgs<ExtArgs>>): Prisma__MarketingClient<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Marketings.
     * @param {MarketingDeleteManyArgs} args - Arguments to filter Marketings to delete.
     * @example
     * // Delete a few Marketings
     * const { count } = await prisma.marketing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MarketingDeleteManyArgs>(args?: SelectSubset<T, MarketingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Marketings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Marketings
     * const marketing = await prisma.marketing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MarketingUpdateManyArgs>(args: SelectSubset<T, MarketingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Marketings and returns the data updated in the database.
     * @param {MarketingUpdateManyAndReturnArgs} args - Arguments to update many Marketings.
     * @example
     * // Update many Marketings
     * const marketing = await prisma.marketing.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Marketings and only return the `Id_marketing`
     * const marketingWithId_marketingOnly = await prisma.marketing.updateManyAndReturn({
     *   select: { Id_marketing: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MarketingUpdateManyAndReturnArgs>(args: SelectSubset<T, MarketingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Marketing.
     * @param {MarketingUpsertArgs} args - Arguments to update or create a Marketing.
     * @example
     * // Update or create a Marketing
     * const marketing = await prisma.marketing.upsert({
     *   create: {
     *     // ... data to create a Marketing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Marketing we want to update
     *   }
     * })
     */
    upsert<T extends MarketingUpsertArgs>(args: SelectSubset<T, MarketingUpsertArgs<ExtArgs>>): Prisma__MarketingClient<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Marketings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketingCountArgs} args - Arguments to filter Marketings to count.
     * @example
     * // Count the number of Marketings
     * const count = await prisma.marketing.count({
     *   where: {
     *     // ... the filter for the Marketings we want to count
     *   }
     * })
    **/
    count<T extends MarketingCountArgs>(
      args?: Subset<T, MarketingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MarketingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Marketing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MarketingAggregateArgs>(args: Subset<T, MarketingAggregateArgs>): Prisma.PrismaPromise<GetMarketingAggregateType<T>>

    /**
     * Group by Marketing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MarketingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MarketingGroupByArgs['orderBy'] }
        : { orderBy?: MarketingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MarketingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarketingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Marketing model
   */
  readonly fields: MarketingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Marketing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MarketingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rela_publi_mark<T extends PublicacionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PublicacionesDefaultArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    marketing_emprendimiento<T extends Marketing$marketing_emprendimientoArgs<ExtArgs> = {}>(args?: Subset<T, Marketing$marketing_emprendimientoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Marketing_emprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Marketing model
   */
  interface MarketingFieldRefs {
    readonly Id_marketing: FieldRef<"Marketing", 'Int'>
    readonly publicacion: FieldRef<"Marketing", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Marketing findUnique
   */
  export type MarketingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    /**
     * Filter, which Marketing to fetch.
     */
    where: MarketingWhereUniqueInput
  }

  /**
   * Marketing findUniqueOrThrow
   */
  export type MarketingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    /**
     * Filter, which Marketing to fetch.
     */
    where: MarketingWhereUniqueInput
  }

  /**
   * Marketing findFirst
   */
  export type MarketingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    /**
     * Filter, which Marketing to fetch.
     */
    where?: MarketingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marketings to fetch.
     */
    orderBy?: MarketingOrderByWithRelationInput | MarketingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marketings.
     */
    cursor?: MarketingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marketings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marketings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marketings.
     */
    distinct?: MarketingScalarFieldEnum | MarketingScalarFieldEnum[]
  }

  /**
   * Marketing findFirstOrThrow
   */
  export type MarketingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    /**
     * Filter, which Marketing to fetch.
     */
    where?: MarketingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marketings to fetch.
     */
    orderBy?: MarketingOrderByWithRelationInput | MarketingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marketings.
     */
    cursor?: MarketingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marketings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marketings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marketings.
     */
    distinct?: MarketingScalarFieldEnum | MarketingScalarFieldEnum[]
  }

  /**
   * Marketing findMany
   */
  export type MarketingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    /**
     * Filter, which Marketings to fetch.
     */
    where?: MarketingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marketings to fetch.
     */
    orderBy?: MarketingOrderByWithRelationInput | MarketingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Marketings.
     */
    cursor?: MarketingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marketings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marketings.
     */
    skip?: number
    distinct?: MarketingScalarFieldEnum | MarketingScalarFieldEnum[]
  }

  /**
   * Marketing create
   */
  export type MarketingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    /**
     * The data needed to create a Marketing.
     */
    data: XOR<MarketingCreateInput, MarketingUncheckedCreateInput>
  }

  /**
   * Marketing createMany
   */
  export type MarketingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Marketings.
     */
    data: MarketingCreateManyInput | MarketingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Marketing createManyAndReturn
   */
  export type MarketingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * The data used to create many Marketings.
     */
    data: MarketingCreateManyInput | MarketingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Marketing update
   */
  export type MarketingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    /**
     * The data needed to update a Marketing.
     */
    data: XOR<MarketingUpdateInput, MarketingUncheckedUpdateInput>
    /**
     * Choose, which Marketing to update.
     */
    where: MarketingWhereUniqueInput
  }

  /**
   * Marketing updateMany
   */
  export type MarketingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Marketings.
     */
    data: XOR<MarketingUpdateManyMutationInput, MarketingUncheckedUpdateManyInput>
    /**
     * Filter which Marketings to update
     */
    where?: MarketingWhereInput
    /**
     * Limit how many Marketings to update.
     */
    limit?: number
  }

  /**
   * Marketing updateManyAndReturn
   */
  export type MarketingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * The data used to update Marketings.
     */
    data: XOR<MarketingUpdateManyMutationInput, MarketingUncheckedUpdateManyInput>
    /**
     * Filter which Marketings to update
     */
    where?: MarketingWhereInput
    /**
     * Limit how many Marketings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Marketing upsert
   */
  export type MarketingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    /**
     * The filter to search for the Marketing to update in case it exists.
     */
    where: MarketingWhereUniqueInput
    /**
     * In case the Marketing found by the `where` argument doesn't exist, create a new Marketing with this data.
     */
    create: XOR<MarketingCreateInput, MarketingUncheckedCreateInput>
    /**
     * In case the Marketing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MarketingUpdateInput, MarketingUncheckedUpdateInput>
  }

  /**
   * Marketing delete
   */
  export type MarketingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    /**
     * Filter which Marketing to delete.
     */
    where: MarketingWhereUniqueInput
  }

  /**
   * Marketing deleteMany
   */
  export type MarketingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marketings to delete
     */
    where?: MarketingWhereInput
    /**
     * Limit how many Marketings to delete.
     */
    limit?: number
  }

  /**
   * Marketing.marketing_emprendimiento
   */
  export type Marketing$marketing_emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing_emprendimiento
     */
    select?: Marketing_emprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing_emprendimiento
     */
    omit?: Marketing_emprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Marketing_emprendimientoInclude<ExtArgs> | null
    where?: Marketing_emprendimientoWhereInput
    orderBy?: Marketing_emprendimientoOrderByWithRelationInput | Marketing_emprendimientoOrderByWithRelationInput[]
    cursor?: Marketing_emprendimientoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Marketing_emprendimientoScalarFieldEnum | Marketing_emprendimientoScalarFieldEnum[]
  }

  /**
   * Marketing without action
   */
  export type MarketingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
  }


  /**
   * Model Publicaciones
   */

  export type AggregatePublicaciones = {
    _count: PublicacionesCountAggregateOutputType | null
    _avg: PublicacionesAvgAggregateOutputType | null
    _sum: PublicacionesSumAggregateOutputType | null
    _min: PublicacionesMinAggregateOutputType | null
    _max: PublicacionesMaxAggregateOutputType | null
  }

  export type PublicacionesAvgAggregateOutputType = {
    foto: number | null
  }

  export type PublicacionesSumAggregateOutputType = {
    foto: number | null
  }

  export type PublicacionesMinAggregateOutputType = {
    link_plantilla: string | null
    desc: string | null
    nombre: string | null
    foto: number | null
  }

  export type PublicacionesMaxAggregateOutputType = {
    link_plantilla: string | null
    desc: string | null
    nombre: string | null
    foto: number | null
  }

  export type PublicacionesCountAggregateOutputType = {
    link_plantilla: number
    desc: number
    nombre: number
    foto: number
    _all: number
  }


  export type PublicacionesAvgAggregateInputType = {
    foto?: true
  }

  export type PublicacionesSumAggregateInputType = {
    foto?: true
  }

  export type PublicacionesMinAggregateInputType = {
    link_plantilla?: true
    desc?: true
    nombre?: true
    foto?: true
  }

  export type PublicacionesMaxAggregateInputType = {
    link_plantilla?: true
    desc?: true
    nombre?: true
    foto?: true
  }

  export type PublicacionesCountAggregateInputType = {
    link_plantilla?: true
    desc?: true
    nombre?: true
    foto?: true
    _all?: true
  }

  export type PublicacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicaciones to aggregate.
     */
    where?: PublicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones to fetch.
     */
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PublicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Publicaciones
    **/
    _count?: true | PublicacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PublicacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PublicacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PublicacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PublicacionesMaxAggregateInputType
  }

  export type GetPublicacionesAggregateType<T extends PublicacionesAggregateArgs> = {
        [P in keyof T & keyof AggregatePublicaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublicaciones[P]>
      : GetScalarType<T[P], AggregatePublicaciones[P]>
  }




  export type PublicacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionesWhereInput
    orderBy?: PublicacionesOrderByWithAggregationInput | PublicacionesOrderByWithAggregationInput[]
    by: PublicacionesScalarFieldEnum[] | PublicacionesScalarFieldEnum
    having?: PublicacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PublicacionesCountAggregateInputType | true
    _avg?: PublicacionesAvgAggregateInputType
    _sum?: PublicacionesSumAggregateInputType
    _min?: PublicacionesMinAggregateInputType
    _max?: PublicacionesMaxAggregateInputType
  }

  export type PublicacionesGroupByOutputType = {
    link_plantilla: string
    desc: string
    nombre: string
    foto: number
    _count: PublicacionesCountAggregateOutputType | null
    _avg: PublicacionesAvgAggregateOutputType | null
    _sum: PublicacionesSumAggregateOutputType | null
    _min: PublicacionesMinAggregateOutputType | null
    _max: PublicacionesMaxAggregateOutputType | null
  }

  type GetPublicacionesGroupByPayload<T extends PublicacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PublicacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PublicacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PublicacionesGroupByOutputType[P]>
            : GetScalarType<T[P], PublicacionesGroupByOutputType[P]>
        }
      >
    >


  export type PublicacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    link_plantilla?: boolean
    desc?: boolean
    nombre?: boolean
    foto?: boolean
    rela_foto_publi?: boolean | Publicaciones_fotoDefaultArgs<ExtArgs>
    marketing?: boolean | Publicaciones$marketingArgs<ExtArgs>
    _count?: boolean | PublicacionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicaciones"]>

  export type PublicacionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    link_plantilla?: boolean
    desc?: boolean
    nombre?: boolean
    foto?: boolean
    rela_foto_publi?: boolean | Publicaciones_fotoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicaciones"]>

  export type PublicacionesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    link_plantilla?: boolean
    desc?: boolean
    nombre?: boolean
    foto?: boolean
    rela_foto_publi?: boolean | Publicaciones_fotoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicaciones"]>

  export type PublicacionesSelectScalar = {
    link_plantilla?: boolean
    desc?: boolean
    nombre?: boolean
    foto?: boolean
  }

  export type PublicacionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"link_plantilla" | "desc" | "nombre" | "foto", ExtArgs["result"]["publicaciones"]>
  export type PublicacionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_foto_publi?: boolean | Publicaciones_fotoDefaultArgs<ExtArgs>
    marketing?: boolean | Publicaciones$marketingArgs<ExtArgs>
    _count?: boolean | PublicacionesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PublicacionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_foto_publi?: boolean | Publicaciones_fotoDefaultArgs<ExtArgs>
  }
  export type PublicacionesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_foto_publi?: boolean | Publicaciones_fotoDefaultArgs<ExtArgs>
  }

  export type $PublicacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Publicaciones"
    objects: {
      rela_foto_publi: Prisma.$Publicaciones_fotoPayload<ExtArgs>
      marketing: Prisma.$MarketingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      link_plantilla: string
      desc: string
      nombre: string
      foto: number
    }, ExtArgs["result"]["publicaciones"]>
    composites: {}
  }

  type PublicacionesGetPayload<S extends boolean | null | undefined | PublicacionesDefaultArgs> = $Result.GetResult<Prisma.$PublicacionesPayload, S>

  type PublicacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PublicacionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PublicacionesCountAggregateInputType | true
    }

  export interface PublicacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Publicaciones'], meta: { name: 'Publicaciones' } }
    /**
     * Find zero or one Publicaciones that matches the filter.
     * @param {PublicacionesFindUniqueArgs} args - Arguments to find a Publicaciones
     * @example
     * // Get one Publicaciones
     * const publicaciones = await prisma.publicaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PublicacionesFindUniqueArgs>(args: SelectSubset<T, PublicacionesFindUniqueArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Publicaciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PublicacionesFindUniqueOrThrowArgs} args - Arguments to find a Publicaciones
     * @example
     * // Get one Publicaciones
     * const publicaciones = await prisma.publicaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PublicacionesFindUniqueOrThrowArgs>(args: SelectSubset<T, PublicacionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Publicaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesFindFirstArgs} args - Arguments to find a Publicaciones
     * @example
     * // Get one Publicaciones
     * const publicaciones = await prisma.publicaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PublicacionesFindFirstArgs>(args?: SelectSubset<T, PublicacionesFindFirstArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Publicaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesFindFirstOrThrowArgs} args - Arguments to find a Publicaciones
     * @example
     * // Get one Publicaciones
     * const publicaciones = await prisma.publicaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PublicacionesFindFirstOrThrowArgs>(args?: SelectSubset<T, PublicacionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Publicaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Publicaciones
     * const publicaciones = await prisma.publicaciones.findMany()
     * 
     * // Get first 10 Publicaciones
     * const publicaciones = await prisma.publicaciones.findMany({ take: 10 })
     * 
     * // Only select the `link_plantilla`
     * const publicacionesWithLink_plantillaOnly = await prisma.publicaciones.findMany({ select: { link_plantilla: true } })
     * 
     */
    findMany<T extends PublicacionesFindManyArgs>(args?: SelectSubset<T, PublicacionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Publicaciones.
     * @param {PublicacionesCreateArgs} args - Arguments to create a Publicaciones.
     * @example
     * // Create one Publicaciones
     * const Publicaciones = await prisma.publicaciones.create({
     *   data: {
     *     // ... data to create a Publicaciones
     *   }
     * })
     * 
     */
    create<T extends PublicacionesCreateArgs>(args: SelectSubset<T, PublicacionesCreateArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Publicaciones.
     * @param {PublicacionesCreateManyArgs} args - Arguments to create many Publicaciones.
     * @example
     * // Create many Publicaciones
     * const publicaciones = await prisma.publicaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PublicacionesCreateManyArgs>(args?: SelectSubset<T, PublicacionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Publicaciones and returns the data saved in the database.
     * @param {PublicacionesCreateManyAndReturnArgs} args - Arguments to create many Publicaciones.
     * @example
     * // Create many Publicaciones
     * const publicaciones = await prisma.publicaciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Publicaciones and only return the `link_plantilla`
     * const publicacionesWithLink_plantillaOnly = await prisma.publicaciones.createManyAndReturn({
     *   select: { link_plantilla: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PublicacionesCreateManyAndReturnArgs>(args?: SelectSubset<T, PublicacionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Publicaciones.
     * @param {PublicacionesDeleteArgs} args - Arguments to delete one Publicaciones.
     * @example
     * // Delete one Publicaciones
     * const Publicaciones = await prisma.publicaciones.delete({
     *   where: {
     *     // ... filter to delete one Publicaciones
     *   }
     * })
     * 
     */
    delete<T extends PublicacionesDeleteArgs>(args: SelectSubset<T, PublicacionesDeleteArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Publicaciones.
     * @param {PublicacionesUpdateArgs} args - Arguments to update one Publicaciones.
     * @example
     * // Update one Publicaciones
     * const publicaciones = await prisma.publicaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PublicacionesUpdateArgs>(args: SelectSubset<T, PublicacionesUpdateArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Publicaciones.
     * @param {PublicacionesDeleteManyArgs} args - Arguments to filter Publicaciones to delete.
     * @example
     * // Delete a few Publicaciones
     * const { count } = await prisma.publicaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PublicacionesDeleteManyArgs>(args?: SelectSubset<T, PublicacionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Publicaciones
     * const publicaciones = await prisma.publicaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PublicacionesUpdateManyArgs>(args: SelectSubset<T, PublicacionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicaciones and returns the data updated in the database.
     * @param {PublicacionesUpdateManyAndReturnArgs} args - Arguments to update many Publicaciones.
     * @example
     * // Update many Publicaciones
     * const publicaciones = await prisma.publicaciones.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Publicaciones and only return the `link_plantilla`
     * const publicacionesWithLink_plantillaOnly = await prisma.publicaciones.updateManyAndReturn({
     *   select: { link_plantilla: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PublicacionesUpdateManyAndReturnArgs>(args: SelectSubset<T, PublicacionesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Publicaciones.
     * @param {PublicacionesUpsertArgs} args - Arguments to update or create a Publicaciones.
     * @example
     * // Update or create a Publicaciones
     * const publicaciones = await prisma.publicaciones.upsert({
     *   create: {
     *     // ... data to create a Publicaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Publicaciones we want to update
     *   }
     * })
     */
    upsert<T extends PublicacionesUpsertArgs>(args: SelectSubset<T, PublicacionesUpsertArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Publicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesCountArgs} args - Arguments to filter Publicaciones to count.
     * @example
     * // Count the number of Publicaciones
     * const count = await prisma.publicaciones.count({
     *   where: {
     *     // ... the filter for the Publicaciones we want to count
     *   }
     * })
    **/
    count<T extends PublicacionesCountArgs>(
      args?: Subset<T, PublicacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PublicacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Publicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PublicacionesAggregateArgs>(args: Subset<T, PublicacionesAggregateArgs>): Prisma.PrismaPromise<GetPublicacionesAggregateType<T>>

    /**
     * Group by Publicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PublicacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PublicacionesGroupByArgs['orderBy'] }
        : { orderBy?: PublicacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PublicacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublicacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Publicaciones model
   */
  readonly fields: PublicacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Publicaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PublicacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rela_foto_publi<T extends Publicaciones_fotoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Publicaciones_fotoDefaultArgs<ExtArgs>>): Prisma__Publicaciones_fotoClient<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    marketing<T extends Publicaciones$marketingArgs<ExtArgs> = {}>(args?: Subset<T, Publicaciones$marketingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Publicaciones model
   */
  interface PublicacionesFieldRefs {
    readonly link_plantilla: FieldRef<"Publicaciones", 'String'>
    readonly desc: FieldRef<"Publicaciones", 'String'>
    readonly nombre: FieldRef<"Publicaciones", 'String'>
    readonly foto: FieldRef<"Publicaciones", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Publicaciones findUnique
   */
  export type PublicacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where: PublicacionesWhereUniqueInput
  }

  /**
   * Publicaciones findUniqueOrThrow
   */
  export type PublicacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where: PublicacionesWhereUniqueInput
  }

  /**
   * Publicaciones findFirst
   */
  export type PublicacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where?: PublicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones to fetch.
     */
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicaciones.
     */
    cursor?: PublicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicaciones.
     */
    distinct?: PublicacionesScalarFieldEnum | PublicacionesScalarFieldEnum[]
  }

  /**
   * Publicaciones findFirstOrThrow
   */
  export type PublicacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where?: PublicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones to fetch.
     */
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicaciones.
     */
    cursor?: PublicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicaciones.
     */
    distinct?: PublicacionesScalarFieldEnum | PublicacionesScalarFieldEnum[]
  }

  /**
   * Publicaciones findMany
   */
  export type PublicacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where?: PublicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones to fetch.
     */
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Publicaciones.
     */
    cursor?: PublicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones.
     */
    skip?: number
    distinct?: PublicacionesScalarFieldEnum | PublicacionesScalarFieldEnum[]
  }

  /**
   * Publicaciones create
   */
  export type PublicacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * The data needed to create a Publicaciones.
     */
    data: XOR<PublicacionesCreateInput, PublicacionesUncheckedCreateInput>
  }

  /**
   * Publicaciones createMany
   */
  export type PublicacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Publicaciones.
     */
    data: PublicacionesCreateManyInput | PublicacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Publicaciones createManyAndReturn
   */
  export type PublicacionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * The data used to create many Publicaciones.
     */
    data: PublicacionesCreateManyInput | PublicacionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Publicaciones update
   */
  export type PublicacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * The data needed to update a Publicaciones.
     */
    data: XOR<PublicacionesUpdateInput, PublicacionesUncheckedUpdateInput>
    /**
     * Choose, which Publicaciones to update.
     */
    where: PublicacionesWhereUniqueInput
  }

  /**
   * Publicaciones updateMany
   */
  export type PublicacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Publicaciones.
     */
    data: XOR<PublicacionesUpdateManyMutationInput, PublicacionesUncheckedUpdateManyInput>
    /**
     * Filter which Publicaciones to update
     */
    where?: PublicacionesWhereInput
    /**
     * Limit how many Publicaciones to update.
     */
    limit?: number
  }

  /**
   * Publicaciones updateManyAndReturn
   */
  export type PublicacionesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * The data used to update Publicaciones.
     */
    data: XOR<PublicacionesUpdateManyMutationInput, PublicacionesUncheckedUpdateManyInput>
    /**
     * Filter which Publicaciones to update
     */
    where?: PublicacionesWhereInput
    /**
     * Limit how many Publicaciones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Publicaciones upsert
   */
  export type PublicacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * The filter to search for the Publicaciones to update in case it exists.
     */
    where: PublicacionesWhereUniqueInput
    /**
     * In case the Publicaciones found by the `where` argument doesn't exist, create a new Publicaciones with this data.
     */
    create: XOR<PublicacionesCreateInput, PublicacionesUncheckedCreateInput>
    /**
     * In case the Publicaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PublicacionesUpdateInput, PublicacionesUncheckedUpdateInput>
  }

  /**
   * Publicaciones delete
   */
  export type PublicacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter which Publicaciones to delete.
     */
    where: PublicacionesWhereUniqueInput
  }

  /**
   * Publicaciones deleteMany
   */
  export type PublicacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicaciones to delete
     */
    where?: PublicacionesWhereInput
    /**
     * Limit how many Publicaciones to delete.
     */
    limit?: number
  }

  /**
   * Publicaciones.marketing
   */
  export type Publicaciones$marketingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marketing
     */
    select?: MarketingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marketing
     */
    omit?: MarketingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketingInclude<ExtArgs> | null
    where?: MarketingWhereInput
    orderBy?: MarketingOrderByWithRelationInput | MarketingOrderByWithRelationInput[]
    cursor?: MarketingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MarketingScalarFieldEnum | MarketingScalarFieldEnum[]
  }

  /**
   * Publicaciones without action
   */
  export type PublicacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
  }


  /**
   * Model Publicaciones_foto
   */

  export type AggregatePublicaciones_foto = {
    _count: Publicaciones_fotoCountAggregateOutputType | null
    _avg: Publicaciones_fotoAvgAggregateOutputType | null
    _sum: Publicaciones_fotoSumAggregateOutputType | null
    _min: Publicaciones_fotoMinAggregateOutputType | null
    _max: Publicaciones_fotoMaxAggregateOutputType | null
  }

  export type Publicaciones_fotoAvgAggregateOutputType = {
    Id_publicaciones_foto: number | null
  }

  export type Publicaciones_fotoSumAggregateOutputType = {
    Id_publicaciones_foto: number | null
  }

  export type Publicaciones_fotoMinAggregateOutputType = {
    Id_publicaciones_foto: number | null
    foto: string | null
  }

  export type Publicaciones_fotoMaxAggregateOutputType = {
    Id_publicaciones_foto: number | null
    foto: string | null
  }

  export type Publicaciones_fotoCountAggregateOutputType = {
    Id_publicaciones_foto: number
    foto: number
    _all: number
  }


  export type Publicaciones_fotoAvgAggregateInputType = {
    Id_publicaciones_foto?: true
  }

  export type Publicaciones_fotoSumAggregateInputType = {
    Id_publicaciones_foto?: true
  }

  export type Publicaciones_fotoMinAggregateInputType = {
    Id_publicaciones_foto?: true
    foto?: true
  }

  export type Publicaciones_fotoMaxAggregateInputType = {
    Id_publicaciones_foto?: true
    foto?: true
  }

  export type Publicaciones_fotoCountAggregateInputType = {
    Id_publicaciones_foto?: true
    foto?: true
    _all?: true
  }

  export type Publicaciones_fotoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicaciones_foto to aggregate.
     */
    where?: Publicaciones_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones_fotos to fetch.
     */
    orderBy?: Publicaciones_fotoOrderByWithRelationInput | Publicaciones_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Publicaciones_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones_fotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Publicaciones_fotos
    **/
    _count?: true | Publicaciones_fotoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Publicaciones_fotoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Publicaciones_fotoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Publicaciones_fotoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Publicaciones_fotoMaxAggregateInputType
  }

  export type GetPublicaciones_fotoAggregateType<T extends Publicaciones_fotoAggregateArgs> = {
        [P in keyof T & keyof AggregatePublicaciones_foto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublicaciones_foto[P]>
      : GetScalarType<T[P], AggregatePublicaciones_foto[P]>
  }




  export type Publicaciones_fotoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Publicaciones_fotoWhereInput
    orderBy?: Publicaciones_fotoOrderByWithAggregationInput | Publicaciones_fotoOrderByWithAggregationInput[]
    by: Publicaciones_fotoScalarFieldEnum[] | Publicaciones_fotoScalarFieldEnum
    having?: Publicaciones_fotoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Publicaciones_fotoCountAggregateInputType | true
    _avg?: Publicaciones_fotoAvgAggregateInputType
    _sum?: Publicaciones_fotoSumAggregateInputType
    _min?: Publicaciones_fotoMinAggregateInputType
    _max?: Publicaciones_fotoMaxAggregateInputType
  }

  export type Publicaciones_fotoGroupByOutputType = {
    Id_publicaciones_foto: number
    foto: string
    _count: Publicaciones_fotoCountAggregateOutputType | null
    _avg: Publicaciones_fotoAvgAggregateOutputType | null
    _sum: Publicaciones_fotoSumAggregateOutputType | null
    _min: Publicaciones_fotoMinAggregateOutputType | null
    _max: Publicaciones_fotoMaxAggregateOutputType | null
  }

  type GetPublicaciones_fotoGroupByPayload<T extends Publicaciones_fotoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Publicaciones_fotoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Publicaciones_fotoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Publicaciones_fotoGroupByOutputType[P]>
            : GetScalarType<T[P], Publicaciones_fotoGroupByOutputType[P]>
        }
      >
    >


  export type Publicaciones_fotoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_publicaciones_foto?: boolean
    foto?: boolean
    publicaciones?: boolean | Publicaciones_foto$publicacionesArgs<ExtArgs>
    _count?: boolean | Publicaciones_fotoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicaciones_foto"]>

  export type Publicaciones_fotoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_publicaciones_foto?: boolean
    foto?: boolean
  }, ExtArgs["result"]["publicaciones_foto"]>

  export type Publicaciones_fotoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_publicaciones_foto?: boolean
    foto?: boolean
  }, ExtArgs["result"]["publicaciones_foto"]>

  export type Publicaciones_fotoSelectScalar = {
    Id_publicaciones_foto?: boolean
    foto?: boolean
  }

  export type Publicaciones_fotoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_publicaciones_foto" | "foto", ExtArgs["result"]["publicaciones_foto"]>
  export type Publicaciones_fotoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    publicaciones?: boolean | Publicaciones_foto$publicacionesArgs<ExtArgs>
    _count?: boolean | Publicaciones_fotoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Publicaciones_fotoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Publicaciones_fotoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Publicaciones_fotoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Publicaciones_foto"
    objects: {
      publicaciones: Prisma.$PublicacionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_publicaciones_foto: number
      foto: string
    }, ExtArgs["result"]["publicaciones_foto"]>
    composites: {}
  }

  type Publicaciones_fotoGetPayload<S extends boolean | null | undefined | Publicaciones_fotoDefaultArgs> = $Result.GetResult<Prisma.$Publicaciones_fotoPayload, S>

  type Publicaciones_fotoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Publicaciones_fotoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Publicaciones_fotoCountAggregateInputType | true
    }

  export interface Publicaciones_fotoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Publicaciones_foto'], meta: { name: 'Publicaciones_foto' } }
    /**
     * Find zero or one Publicaciones_foto that matches the filter.
     * @param {Publicaciones_fotoFindUniqueArgs} args - Arguments to find a Publicaciones_foto
     * @example
     * // Get one Publicaciones_foto
     * const publicaciones_foto = await prisma.publicaciones_foto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Publicaciones_fotoFindUniqueArgs>(args: SelectSubset<T, Publicaciones_fotoFindUniqueArgs<ExtArgs>>): Prisma__Publicaciones_fotoClient<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Publicaciones_foto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Publicaciones_fotoFindUniqueOrThrowArgs} args - Arguments to find a Publicaciones_foto
     * @example
     * // Get one Publicaciones_foto
     * const publicaciones_foto = await prisma.publicaciones_foto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Publicaciones_fotoFindUniqueOrThrowArgs>(args: SelectSubset<T, Publicaciones_fotoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Publicaciones_fotoClient<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Publicaciones_foto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Publicaciones_fotoFindFirstArgs} args - Arguments to find a Publicaciones_foto
     * @example
     * // Get one Publicaciones_foto
     * const publicaciones_foto = await prisma.publicaciones_foto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Publicaciones_fotoFindFirstArgs>(args?: SelectSubset<T, Publicaciones_fotoFindFirstArgs<ExtArgs>>): Prisma__Publicaciones_fotoClient<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Publicaciones_foto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Publicaciones_fotoFindFirstOrThrowArgs} args - Arguments to find a Publicaciones_foto
     * @example
     * // Get one Publicaciones_foto
     * const publicaciones_foto = await prisma.publicaciones_foto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Publicaciones_fotoFindFirstOrThrowArgs>(args?: SelectSubset<T, Publicaciones_fotoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Publicaciones_fotoClient<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Publicaciones_fotos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Publicaciones_fotoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Publicaciones_fotos
     * const publicaciones_fotos = await prisma.publicaciones_foto.findMany()
     * 
     * // Get first 10 Publicaciones_fotos
     * const publicaciones_fotos = await prisma.publicaciones_foto.findMany({ take: 10 })
     * 
     * // Only select the `Id_publicaciones_foto`
     * const publicaciones_fotoWithId_publicaciones_fotoOnly = await prisma.publicaciones_foto.findMany({ select: { Id_publicaciones_foto: true } })
     * 
     */
    findMany<T extends Publicaciones_fotoFindManyArgs>(args?: SelectSubset<T, Publicaciones_fotoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Publicaciones_foto.
     * @param {Publicaciones_fotoCreateArgs} args - Arguments to create a Publicaciones_foto.
     * @example
     * // Create one Publicaciones_foto
     * const Publicaciones_foto = await prisma.publicaciones_foto.create({
     *   data: {
     *     // ... data to create a Publicaciones_foto
     *   }
     * })
     * 
     */
    create<T extends Publicaciones_fotoCreateArgs>(args: SelectSubset<T, Publicaciones_fotoCreateArgs<ExtArgs>>): Prisma__Publicaciones_fotoClient<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Publicaciones_fotos.
     * @param {Publicaciones_fotoCreateManyArgs} args - Arguments to create many Publicaciones_fotos.
     * @example
     * // Create many Publicaciones_fotos
     * const publicaciones_foto = await prisma.publicaciones_foto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Publicaciones_fotoCreateManyArgs>(args?: SelectSubset<T, Publicaciones_fotoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Publicaciones_fotos and returns the data saved in the database.
     * @param {Publicaciones_fotoCreateManyAndReturnArgs} args - Arguments to create many Publicaciones_fotos.
     * @example
     * // Create many Publicaciones_fotos
     * const publicaciones_foto = await prisma.publicaciones_foto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Publicaciones_fotos and only return the `Id_publicaciones_foto`
     * const publicaciones_fotoWithId_publicaciones_fotoOnly = await prisma.publicaciones_foto.createManyAndReturn({
     *   select: { Id_publicaciones_foto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Publicaciones_fotoCreateManyAndReturnArgs>(args?: SelectSubset<T, Publicaciones_fotoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Publicaciones_foto.
     * @param {Publicaciones_fotoDeleteArgs} args - Arguments to delete one Publicaciones_foto.
     * @example
     * // Delete one Publicaciones_foto
     * const Publicaciones_foto = await prisma.publicaciones_foto.delete({
     *   where: {
     *     // ... filter to delete one Publicaciones_foto
     *   }
     * })
     * 
     */
    delete<T extends Publicaciones_fotoDeleteArgs>(args: SelectSubset<T, Publicaciones_fotoDeleteArgs<ExtArgs>>): Prisma__Publicaciones_fotoClient<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Publicaciones_foto.
     * @param {Publicaciones_fotoUpdateArgs} args - Arguments to update one Publicaciones_foto.
     * @example
     * // Update one Publicaciones_foto
     * const publicaciones_foto = await prisma.publicaciones_foto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Publicaciones_fotoUpdateArgs>(args: SelectSubset<T, Publicaciones_fotoUpdateArgs<ExtArgs>>): Prisma__Publicaciones_fotoClient<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Publicaciones_fotos.
     * @param {Publicaciones_fotoDeleteManyArgs} args - Arguments to filter Publicaciones_fotos to delete.
     * @example
     * // Delete a few Publicaciones_fotos
     * const { count } = await prisma.publicaciones_foto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Publicaciones_fotoDeleteManyArgs>(args?: SelectSubset<T, Publicaciones_fotoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicaciones_fotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Publicaciones_fotoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Publicaciones_fotos
     * const publicaciones_foto = await prisma.publicaciones_foto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Publicaciones_fotoUpdateManyArgs>(args: SelectSubset<T, Publicaciones_fotoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicaciones_fotos and returns the data updated in the database.
     * @param {Publicaciones_fotoUpdateManyAndReturnArgs} args - Arguments to update many Publicaciones_fotos.
     * @example
     * // Update many Publicaciones_fotos
     * const publicaciones_foto = await prisma.publicaciones_foto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Publicaciones_fotos and only return the `Id_publicaciones_foto`
     * const publicaciones_fotoWithId_publicaciones_fotoOnly = await prisma.publicaciones_foto.updateManyAndReturn({
     *   select: { Id_publicaciones_foto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Publicaciones_fotoUpdateManyAndReturnArgs>(args: SelectSubset<T, Publicaciones_fotoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Publicaciones_foto.
     * @param {Publicaciones_fotoUpsertArgs} args - Arguments to update or create a Publicaciones_foto.
     * @example
     * // Update or create a Publicaciones_foto
     * const publicaciones_foto = await prisma.publicaciones_foto.upsert({
     *   create: {
     *     // ... data to create a Publicaciones_foto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Publicaciones_foto we want to update
     *   }
     * })
     */
    upsert<T extends Publicaciones_fotoUpsertArgs>(args: SelectSubset<T, Publicaciones_fotoUpsertArgs<ExtArgs>>): Prisma__Publicaciones_fotoClient<$Result.GetResult<Prisma.$Publicaciones_fotoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Publicaciones_fotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Publicaciones_fotoCountArgs} args - Arguments to filter Publicaciones_fotos to count.
     * @example
     * // Count the number of Publicaciones_fotos
     * const count = await prisma.publicaciones_foto.count({
     *   where: {
     *     // ... the filter for the Publicaciones_fotos we want to count
     *   }
     * })
    **/
    count<T extends Publicaciones_fotoCountArgs>(
      args?: Subset<T, Publicaciones_fotoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Publicaciones_fotoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Publicaciones_foto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Publicaciones_fotoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Publicaciones_fotoAggregateArgs>(args: Subset<T, Publicaciones_fotoAggregateArgs>): Prisma.PrismaPromise<GetPublicaciones_fotoAggregateType<T>>

    /**
     * Group by Publicaciones_foto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Publicaciones_fotoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Publicaciones_fotoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Publicaciones_fotoGroupByArgs['orderBy'] }
        : { orderBy?: Publicaciones_fotoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Publicaciones_fotoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublicaciones_fotoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Publicaciones_foto model
   */
  readonly fields: Publicaciones_fotoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Publicaciones_foto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Publicaciones_fotoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    publicaciones<T extends Publicaciones_foto$publicacionesArgs<ExtArgs> = {}>(args?: Subset<T, Publicaciones_foto$publicacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Publicaciones_foto model
   */
  interface Publicaciones_fotoFieldRefs {
    readonly Id_publicaciones_foto: FieldRef<"Publicaciones_foto", 'Int'>
    readonly foto: FieldRef<"Publicaciones_foto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Publicaciones_foto findUnique
   */
  export type Publicaciones_fotoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones_foto to fetch.
     */
    where: Publicaciones_fotoWhereUniqueInput
  }

  /**
   * Publicaciones_foto findUniqueOrThrow
   */
  export type Publicaciones_fotoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones_foto to fetch.
     */
    where: Publicaciones_fotoWhereUniqueInput
  }

  /**
   * Publicaciones_foto findFirst
   */
  export type Publicaciones_fotoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones_foto to fetch.
     */
    where?: Publicaciones_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones_fotos to fetch.
     */
    orderBy?: Publicaciones_fotoOrderByWithRelationInput | Publicaciones_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicaciones_fotos.
     */
    cursor?: Publicaciones_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones_fotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicaciones_fotos.
     */
    distinct?: Publicaciones_fotoScalarFieldEnum | Publicaciones_fotoScalarFieldEnum[]
  }

  /**
   * Publicaciones_foto findFirstOrThrow
   */
  export type Publicaciones_fotoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones_foto to fetch.
     */
    where?: Publicaciones_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones_fotos to fetch.
     */
    orderBy?: Publicaciones_fotoOrderByWithRelationInput | Publicaciones_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicaciones_fotos.
     */
    cursor?: Publicaciones_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones_fotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicaciones_fotos.
     */
    distinct?: Publicaciones_fotoScalarFieldEnum | Publicaciones_fotoScalarFieldEnum[]
  }

  /**
   * Publicaciones_foto findMany
   */
  export type Publicaciones_fotoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones_fotos to fetch.
     */
    where?: Publicaciones_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones_fotos to fetch.
     */
    orderBy?: Publicaciones_fotoOrderByWithRelationInput | Publicaciones_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Publicaciones_fotos.
     */
    cursor?: Publicaciones_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones_fotos.
     */
    skip?: number
    distinct?: Publicaciones_fotoScalarFieldEnum | Publicaciones_fotoScalarFieldEnum[]
  }

  /**
   * Publicaciones_foto create
   */
  export type Publicaciones_fotoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
    /**
     * The data needed to create a Publicaciones_foto.
     */
    data: XOR<Publicaciones_fotoCreateInput, Publicaciones_fotoUncheckedCreateInput>
  }

  /**
   * Publicaciones_foto createMany
   */
  export type Publicaciones_fotoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Publicaciones_fotos.
     */
    data: Publicaciones_fotoCreateManyInput | Publicaciones_fotoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Publicaciones_foto createManyAndReturn
   */
  export type Publicaciones_fotoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * The data used to create many Publicaciones_fotos.
     */
    data: Publicaciones_fotoCreateManyInput | Publicaciones_fotoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Publicaciones_foto update
   */
  export type Publicaciones_fotoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
    /**
     * The data needed to update a Publicaciones_foto.
     */
    data: XOR<Publicaciones_fotoUpdateInput, Publicaciones_fotoUncheckedUpdateInput>
    /**
     * Choose, which Publicaciones_foto to update.
     */
    where: Publicaciones_fotoWhereUniqueInput
  }

  /**
   * Publicaciones_foto updateMany
   */
  export type Publicaciones_fotoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Publicaciones_fotos.
     */
    data: XOR<Publicaciones_fotoUpdateManyMutationInput, Publicaciones_fotoUncheckedUpdateManyInput>
    /**
     * Filter which Publicaciones_fotos to update
     */
    where?: Publicaciones_fotoWhereInput
    /**
     * Limit how many Publicaciones_fotos to update.
     */
    limit?: number
  }

  /**
   * Publicaciones_foto updateManyAndReturn
   */
  export type Publicaciones_fotoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * The data used to update Publicaciones_fotos.
     */
    data: XOR<Publicaciones_fotoUpdateManyMutationInput, Publicaciones_fotoUncheckedUpdateManyInput>
    /**
     * Filter which Publicaciones_fotos to update
     */
    where?: Publicaciones_fotoWhereInput
    /**
     * Limit how many Publicaciones_fotos to update.
     */
    limit?: number
  }

  /**
   * Publicaciones_foto upsert
   */
  export type Publicaciones_fotoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
    /**
     * The filter to search for the Publicaciones_foto to update in case it exists.
     */
    where: Publicaciones_fotoWhereUniqueInput
    /**
     * In case the Publicaciones_foto found by the `where` argument doesn't exist, create a new Publicaciones_foto with this data.
     */
    create: XOR<Publicaciones_fotoCreateInput, Publicaciones_fotoUncheckedCreateInput>
    /**
     * In case the Publicaciones_foto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Publicaciones_fotoUpdateInput, Publicaciones_fotoUncheckedUpdateInput>
  }

  /**
   * Publicaciones_foto delete
   */
  export type Publicaciones_fotoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
    /**
     * Filter which Publicaciones_foto to delete.
     */
    where: Publicaciones_fotoWhereUniqueInput
  }

  /**
   * Publicaciones_foto deleteMany
   */
  export type Publicaciones_fotoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicaciones_fotos to delete
     */
    where?: Publicaciones_fotoWhereInput
    /**
     * Limit how many Publicaciones_fotos to delete.
     */
    limit?: number
  }

  /**
   * Publicaciones_foto.publicaciones
   */
  export type Publicaciones_foto$publicacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    where?: PublicacionesWhereInput
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    cursor?: PublicacionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionesScalarFieldEnum | PublicacionesScalarFieldEnum[]
  }

  /**
   * Publicaciones_foto without action
   */
  export type Publicaciones_fotoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones_foto
     */
    select?: Publicaciones_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones_foto
     */
    omit?: Publicaciones_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Publicaciones_fotoInclude<ExtArgs> | null
  }


  /**
   * Model Productos
   */

  export type AggregateProductos = {
    _count: ProductosCountAggregateOutputType | null
    _avg: ProductosAvgAggregateOutputType | null
    _sum: ProductosSumAggregateOutputType | null
    _min: ProductosMinAggregateOutputType | null
    _max: ProductosMaxAggregateOutputType | null
  }

  export type ProductosAvgAggregateOutputType = {
    foto: number | null
  }

  export type ProductosSumAggregateOutputType = {
    foto: number | null
  }

  export type ProductosMinAggregateOutputType = {
    nombre_producto: string | null
    pasos: string | null
    descripcion: string | null
    foto: number | null
  }

  export type ProductosMaxAggregateOutputType = {
    nombre_producto: string | null
    pasos: string | null
    descripcion: string | null
    foto: number | null
  }

  export type ProductosCountAggregateOutputType = {
    nombre_producto: number
    pasos: number
    descripcion: number
    foto: number
    _all: number
  }


  export type ProductosAvgAggregateInputType = {
    foto?: true
  }

  export type ProductosSumAggregateInputType = {
    foto?: true
  }

  export type ProductosMinAggregateInputType = {
    nombre_producto?: true
    pasos?: true
    descripcion?: true
    foto?: true
  }

  export type ProductosMaxAggregateInputType = {
    nombre_producto?: true
    pasos?: true
    descripcion?: true
    foto?: true
  }

  export type ProductosCountAggregateInputType = {
    nombre_producto?: true
    pasos?: true
    descripcion?: true
    foto?: true
    _all?: true
  }

  export type ProductosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to aggregate.
     */
    where?: ProductosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos
    **/
    _count?: true | ProductosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductosMaxAggregateInputType
  }

  export type GetProductosAggregateType<T extends ProductosAggregateArgs> = {
        [P in keyof T & keyof AggregateProductos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductos[P]>
      : GetScalarType<T[P], AggregateProductos[P]>
  }




  export type ProductosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductosWhereInput
    orderBy?: ProductosOrderByWithAggregationInput | ProductosOrderByWithAggregationInput[]
    by: ProductosScalarFieldEnum[] | ProductosScalarFieldEnum
    having?: ProductosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductosCountAggregateInputType | true
    _avg?: ProductosAvgAggregateInputType
    _sum?: ProductosSumAggregateInputType
    _min?: ProductosMinAggregateInputType
    _max?: ProductosMaxAggregateInputType
  }

  export type ProductosGroupByOutputType = {
    nombre_producto: string
    pasos: string
    descripcion: string
    foto: number
    _count: ProductosCountAggregateOutputType | null
    _avg: ProductosAvgAggregateOutputType | null
    _sum: ProductosSumAggregateOutputType | null
    _min: ProductosMinAggregateOutputType | null
    _max: ProductosMaxAggregateOutputType | null
  }

  type GetProductosGroupByPayload<T extends ProductosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductosGroupByOutputType[P]>
            : GetScalarType<T[P], ProductosGroupByOutputType[P]>
        }
      >
    >


  export type ProductosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nombre_producto?: boolean
    pasos?: boolean
    descripcion?: boolean
    foto?: boolean
    rela_foto_produ?: boolean | Productos_fotoDefaultArgs<ExtArgs>
    emprendimiento?: boolean | Productos$emprendimientoArgs<ExtArgs>
    materiales_producto?: boolean | Productos$materiales_productoArgs<ExtArgs>
    emprendimiento_productos?: boolean | Productos$emprendimiento_productosArgs<ExtArgs>
    _count?: boolean | ProductosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productos"]>

  export type ProductosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nombre_producto?: boolean
    pasos?: boolean
    descripcion?: boolean
    foto?: boolean
    rela_foto_produ?: boolean | Productos_fotoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productos"]>

  export type ProductosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nombre_producto?: boolean
    pasos?: boolean
    descripcion?: boolean
    foto?: boolean
    rela_foto_produ?: boolean | Productos_fotoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productos"]>

  export type ProductosSelectScalar = {
    nombre_producto?: boolean
    pasos?: boolean
    descripcion?: boolean
    foto?: boolean
  }

  export type ProductosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"nombre_producto" | "pasos" | "descripcion" | "foto", ExtArgs["result"]["productos"]>
  export type ProductosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_foto_produ?: boolean | Productos_fotoDefaultArgs<ExtArgs>
    emprendimiento?: boolean | Productos$emprendimientoArgs<ExtArgs>
    materiales_producto?: boolean | Productos$materiales_productoArgs<ExtArgs>
    emprendimiento_productos?: boolean | Productos$emprendimiento_productosArgs<ExtArgs>
    _count?: boolean | ProductosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_foto_produ?: boolean | Productos_fotoDefaultArgs<ExtArgs>
  }
  export type ProductosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_foto_produ?: boolean | Productos_fotoDefaultArgs<ExtArgs>
  }

  export type $ProductosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Productos"
    objects: {
      rela_foto_produ: Prisma.$Productos_fotoPayload<ExtArgs>
      emprendimiento: Prisma.$EmprendimientoPayload<ExtArgs>[]
      materiales_producto: Prisma.$Materiales_productoPayload<ExtArgs>[]
      emprendimiento_productos: Prisma.$Emprendimiento_productoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      nombre_producto: string
      pasos: string
      descripcion: string
      foto: number
    }, ExtArgs["result"]["productos"]>
    composites: {}
  }

  type ProductosGetPayload<S extends boolean | null | undefined | ProductosDefaultArgs> = $Result.GetResult<Prisma.$ProductosPayload, S>

  type ProductosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductosCountAggregateInputType | true
    }

  export interface ProductosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Productos'], meta: { name: 'Productos' } }
    /**
     * Find zero or one Productos that matches the filter.
     * @param {ProductosFindUniqueArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductosFindUniqueArgs>(args: SelectSubset<T, ProductosFindUniqueArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Productos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductosFindUniqueOrThrowArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductosFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosFindFirstArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductosFindFirstArgs>(args?: SelectSubset<T, ProductosFindFirstArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosFindFirstOrThrowArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductosFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductosFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.productos.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.productos.findMany({ take: 10 })
     * 
     * // Only select the `nombre_producto`
     * const productosWithNombre_productoOnly = await prisma.productos.findMany({ select: { nombre_producto: true } })
     * 
     */
    findMany<T extends ProductosFindManyArgs>(args?: SelectSubset<T, ProductosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Productos.
     * @param {ProductosCreateArgs} args - Arguments to create a Productos.
     * @example
     * // Create one Productos
     * const Productos = await prisma.productos.create({
     *   data: {
     *     // ... data to create a Productos
     *   }
     * })
     * 
     */
    create<T extends ProductosCreateArgs>(args: SelectSubset<T, ProductosCreateArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {ProductosCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const productos = await prisma.productos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductosCreateManyArgs>(args?: SelectSubset<T, ProductosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {ProductosCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const productos = await prisma.productos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `nombre_producto`
     * const productosWithNombre_productoOnly = await prisma.productos.createManyAndReturn({
     *   select: { nombre_producto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductosCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Productos.
     * @param {ProductosDeleteArgs} args - Arguments to delete one Productos.
     * @example
     * // Delete one Productos
     * const Productos = await prisma.productos.delete({
     *   where: {
     *     // ... filter to delete one Productos
     *   }
     * })
     * 
     */
    delete<T extends ProductosDeleteArgs>(args: SelectSubset<T, ProductosDeleteArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Productos.
     * @param {ProductosUpdateArgs} args - Arguments to update one Productos.
     * @example
     * // Update one Productos
     * const productos = await prisma.productos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductosUpdateArgs>(args: SelectSubset<T, ProductosUpdateArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {ProductosDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.productos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductosDeleteManyArgs>(args?: SelectSubset<T, ProductosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const productos = await prisma.productos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductosUpdateManyArgs>(args: SelectSubset<T, ProductosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {ProductosUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const productos = await prisma.productos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `nombre_producto`
     * const productosWithNombre_productoOnly = await prisma.productos.updateManyAndReturn({
     *   select: { nombre_producto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductosUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Productos.
     * @param {ProductosUpsertArgs} args - Arguments to update or create a Productos.
     * @example
     * // Update or create a Productos
     * const productos = await prisma.productos.upsert({
     *   create: {
     *     // ... data to create a Productos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Productos we want to update
     *   }
     * })
     */
    upsert<T extends ProductosUpsertArgs>(args: SelectSubset<T, ProductosUpsertArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.productos.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends ProductosCountArgs>(
      args?: Subset<T, ProductosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductosAggregateArgs>(args: Subset<T, ProductosAggregateArgs>): Prisma.PrismaPromise<GetProductosAggregateType<T>>

    /**
     * Group by Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductosGroupByArgs['orderBy'] }
        : { orderBy?: ProductosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Productos model
   */
  readonly fields: ProductosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Productos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rela_foto_produ<T extends Productos_fotoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Productos_fotoDefaultArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    emprendimiento<T extends Productos$emprendimientoArgs<ExtArgs> = {}>(args?: Subset<T, Productos$emprendimientoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    materiales_producto<T extends Productos$materiales_productoArgs<ExtArgs> = {}>(args?: Subset<T, Productos$materiales_productoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    emprendimiento_productos<T extends Productos$emprendimiento_productosArgs<ExtArgs> = {}>(args?: Subset<T, Productos$emprendimiento_productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Emprendimiento_productoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Productos model
   */
  interface ProductosFieldRefs {
    readonly nombre_producto: FieldRef<"Productos", 'String'>
    readonly pasos: FieldRef<"Productos", 'String'>
    readonly descripcion: FieldRef<"Productos", 'String'>
    readonly foto: FieldRef<"Productos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Productos findUnique
   */
  export type ProductosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where: ProductosWhereUniqueInput
  }

  /**
   * Productos findUniqueOrThrow
   */
  export type ProductosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where: ProductosWhereUniqueInput
  }

  /**
   * Productos findFirst
   */
  export type ProductosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * Productos findFirstOrThrow
   */
  export type ProductosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * Productos findMany
   */
  export type ProductosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos.
     */
    cursor?: ProductosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * Productos create
   */
  export type ProductosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * The data needed to create a Productos.
     */
    data: XOR<ProductosCreateInput, ProductosUncheckedCreateInput>
  }

  /**
   * Productos createMany
   */
  export type ProductosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos.
     */
    data: ProductosCreateManyInput | ProductosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Productos createManyAndReturn
   */
  export type ProductosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * The data used to create many Productos.
     */
    data: ProductosCreateManyInput | ProductosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Productos update
   */
  export type ProductosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * The data needed to update a Productos.
     */
    data: XOR<ProductosUpdateInput, ProductosUncheckedUpdateInput>
    /**
     * Choose, which Productos to update.
     */
    where: ProductosWhereUniqueInput
  }

  /**
   * Productos updateMany
   */
  export type ProductosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductosUpdateManyMutationInput, ProductosUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductosWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
  }

  /**
   * Productos updateManyAndReturn
   */
  export type ProductosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductosUpdateManyMutationInput, ProductosUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductosWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Productos upsert
   */
  export type ProductosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * The filter to search for the Productos to update in case it exists.
     */
    where: ProductosWhereUniqueInput
    /**
     * In case the Productos found by the `where` argument doesn't exist, create a new Productos with this data.
     */
    create: XOR<ProductosCreateInput, ProductosUncheckedCreateInput>
    /**
     * In case the Productos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductosUpdateInput, ProductosUncheckedUpdateInput>
  }

  /**
   * Productos delete
   */
  export type ProductosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter which Productos to delete.
     */
    where: ProductosWhereUniqueInput
  }

  /**
   * Productos deleteMany
   */
  export type ProductosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to delete
     */
    where?: ProductosWhereInput
    /**
     * Limit how many Productos to delete.
     */
    limit?: number
  }

  /**
   * Productos.emprendimiento
   */
  export type Productos$emprendimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    where?: EmprendimientoWhereInput
    orderBy?: EmprendimientoOrderByWithRelationInput | EmprendimientoOrderByWithRelationInput[]
    cursor?: EmprendimientoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmprendimientoScalarFieldEnum | EmprendimientoScalarFieldEnum[]
  }

  /**
   * Productos.materiales_producto
   */
  export type Productos$materiales_productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    where?: Materiales_productoWhereInput
    orderBy?: Materiales_productoOrderByWithRelationInput | Materiales_productoOrderByWithRelationInput[]
    cursor?: Materiales_productoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Materiales_productoScalarFieldEnum | Materiales_productoScalarFieldEnum[]
  }

  /**
   * Productos.emprendimiento_productos
   */
  export type Productos$emprendimiento_productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento_producto
     */
    select?: Emprendimiento_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento_producto
     */
    omit?: Emprendimiento_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Emprendimiento_productoInclude<ExtArgs> | null
    where?: Emprendimiento_productoWhereInput
    orderBy?: Emprendimiento_productoOrderByWithRelationInput | Emprendimiento_productoOrderByWithRelationInput[]
    cursor?: Emprendimiento_productoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Emprendimiento_productoScalarFieldEnum | Emprendimiento_productoScalarFieldEnum[]
  }

  /**
   * Productos without action
   */
  export type ProductosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
  }


  /**
   * Model Productos_foto
   */

  export type AggregateProductos_foto = {
    _count: Productos_fotoCountAggregateOutputType | null
    _avg: Productos_fotoAvgAggregateOutputType | null
    _sum: Productos_fotoSumAggregateOutputType | null
    _min: Productos_fotoMinAggregateOutputType | null
    _max: Productos_fotoMaxAggregateOutputType | null
  }

  export type Productos_fotoAvgAggregateOutputType = {
    Id_productos_foto: number | null
  }

  export type Productos_fotoSumAggregateOutputType = {
    Id_productos_foto: number | null
  }

  export type Productos_fotoMinAggregateOutputType = {
    Id_productos_foto: number | null
    foto: string | null
  }

  export type Productos_fotoMaxAggregateOutputType = {
    Id_productos_foto: number | null
    foto: string | null
  }

  export type Productos_fotoCountAggregateOutputType = {
    Id_productos_foto: number
    foto: number
    _all: number
  }


  export type Productos_fotoAvgAggregateInputType = {
    Id_productos_foto?: true
  }

  export type Productos_fotoSumAggregateInputType = {
    Id_productos_foto?: true
  }

  export type Productos_fotoMinAggregateInputType = {
    Id_productos_foto?: true
    foto?: true
  }

  export type Productos_fotoMaxAggregateInputType = {
    Id_productos_foto?: true
    foto?: true
  }

  export type Productos_fotoCountAggregateInputType = {
    Id_productos_foto?: true
    foto?: true
    _all?: true
  }

  export type Productos_fotoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos_foto to aggregate.
     */
    where?: Productos_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos_fotos to fetch.
     */
    orderBy?: Productos_fotoOrderByWithRelationInput | Productos_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Productos_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos_fotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos_fotos
    **/
    _count?: true | Productos_fotoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Productos_fotoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Productos_fotoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Productos_fotoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Productos_fotoMaxAggregateInputType
  }

  export type GetProductos_fotoAggregateType<T extends Productos_fotoAggregateArgs> = {
        [P in keyof T & keyof AggregateProductos_foto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductos_foto[P]>
      : GetScalarType<T[P], AggregateProductos_foto[P]>
  }




  export type Productos_fotoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Productos_fotoWhereInput
    orderBy?: Productos_fotoOrderByWithAggregationInput | Productos_fotoOrderByWithAggregationInput[]
    by: Productos_fotoScalarFieldEnum[] | Productos_fotoScalarFieldEnum
    having?: Productos_fotoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Productos_fotoCountAggregateInputType | true
    _avg?: Productos_fotoAvgAggregateInputType
    _sum?: Productos_fotoSumAggregateInputType
    _min?: Productos_fotoMinAggregateInputType
    _max?: Productos_fotoMaxAggregateInputType
  }

  export type Productos_fotoGroupByOutputType = {
    Id_productos_foto: number
    foto: string
    _count: Productos_fotoCountAggregateOutputType | null
    _avg: Productos_fotoAvgAggregateOutputType | null
    _sum: Productos_fotoSumAggregateOutputType | null
    _min: Productos_fotoMinAggregateOutputType | null
    _max: Productos_fotoMaxAggregateOutputType | null
  }

  type GetProductos_fotoGroupByPayload<T extends Productos_fotoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Productos_fotoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Productos_fotoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Productos_fotoGroupByOutputType[P]>
            : GetScalarType<T[P], Productos_fotoGroupByOutputType[P]>
        }
      >
    >


  export type Productos_fotoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_productos_foto?: boolean
    foto?: boolean
    productos?: boolean | Productos_foto$productosArgs<ExtArgs>
    emprendimiento_productofoto?: boolean | Productos_foto$emprendimiento_productofotoArgs<ExtArgs>
    _count?: boolean | Productos_fotoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productos_foto"]>

  export type Productos_fotoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_productos_foto?: boolean
    foto?: boolean
  }, ExtArgs["result"]["productos_foto"]>

  export type Productos_fotoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_productos_foto?: boolean
    foto?: boolean
  }, ExtArgs["result"]["productos_foto"]>

  export type Productos_fotoSelectScalar = {
    Id_productos_foto?: boolean
    foto?: boolean
  }

  export type Productos_fotoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_productos_foto" | "foto", ExtArgs["result"]["productos_foto"]>
  export type Productos_fotoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Productos_foto$productosArgs<ExtArgs>
    emprendimiento_productofoto?: boolean | Productos_foto$emprendimiento_productofotoArgs<ExtArgs>
    _count?: boolean | Productos_fotoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Productos_fotoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Productos_fotoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Productos_fotoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Productos_foto"
    objects: {
      productos: Prisma.$ProductosPayload<ExtArgs>[]
      emprendimiento_productofoto: Prisma.$EmprendimientoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_productos_foto: number
      foto: string
    }, ExtArgs["result"]["productos_foto"]>
    composites: {}
  }

  type Productos_fotoGetPayload<S extends boolean | null | undefined | Productos_fotoDefaultArgs> = $Result.GetResult<Prisma.$Productos_fotoPayload, S>

  type Productos_fotoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Productos_fotoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Productos_fotoCountAggregateInputType | true
    }

  export interface Productos_fotoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Productos_foto'], meta: { name: 'Productos_foto' } }
    /**
     * Find zero or one Productos_foto that matches the filter.
     * @param {Productos_fotoFindUniqueArgs} args - Arguments to find a Productos_foto
     * @example
     * // Get one Productos_foto
     * const productos_foto = await prisma.productos_foto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Productos_fotoFindUniqueArgs>(args: SelectSubset<T, Productos_fotoFindUniqueArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Productos_foto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Productos_fotoFindUniqueOrThrowArgs} args - Arguments to find a Productos_foto
     * @example
     * // Get one Productos_foto
     * const productos_foto = await prisma.productos_foto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Productos_fotoFindUniqueOrThrowArgs>(args: SelectSubset<T, Productos_fotoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos_foto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Productos_fotoFindFirstArgs} args - Arguments to find a Productos_foto
     * @example
     * // Get one Productos_foto
     * const productos_foto = await prisma.productos_foto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Productos_fotoFindFirstArgs>(args?: SelectSubset<T, Productos_fotoFindFirstArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos_foto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Productos_fotoFindFirstOrThrowArgs} args - Arguments to find a Productos_foto
     * @example
     * // Get one Productos_foto
     * const productos_foto = await prisma.productos_foto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Productos_fotoFindFirstOrThrowArgs>(args?: SelectSubset<T, Productos_fotoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos_fotos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Productos_fotoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos_fotos
     * const productos_fotos = await prisma.productos_foto.findMany()
     * 
     * // Get first 10 Productos_fotos
     * const productos_fotos = await prisma.productos_foto.findMany({ take: 10 })
     * 
     * // Only select the `Id_productos_foto`
     * const productos_fotoWithId_productos_fotoOnly = await prisma.productos_foto.findMany({ select: { Id_productos_foto: true } })
     * 
     */
    findMany<T extends Productos_fotoFindManyArgs>(args?: SelectSubset<T, Productos_fotoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Productos_foto.
     * @param {Productos_fotoCreateArgs} args - Arguments to create a Productos_foto.
     * @example
     * // Create one Productos_foto
     * const Productos_foto = await prisma.productos_foto.create({
     *   data: {
     *     // ... data to create a Productos_foto
     *   }
     * })
     * 
     */
    create<T extends Productos_fotoCreateArgs>(args: SelectSubset<T, Productos_fotoCreateArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos_fotos.
     * @param {Productos_fotoCreateManyArgs} args - Arguments to create many Productos_fotos.
     * @example
     * // Create many Productos_fotos
     * const productos_foto = await prisma.productos_foto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Productos_fotoCreateManyArgs>(args?: SelectSubset<T, Productos_fotoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos_fotos and returns the data saved in the database.
     * @param {Productos_fotoCreateManyAndReturnArgs} args - Arguments to create many Productos_fotos.
     * @example
     * // Create many Productos_fotos
     * const productos_foto = await prisma.productos_foto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos_fotos and only return the `Id_productos_foto`
     * const productos_fotoWithId_productos_fotoOnly = await prisma.productos_foto.createManyAndReturn({
     *   select: { Id_productos_foto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Productos_fotoCreateManyAndReturnArgs>(args?: SelectSubset<T, Productos_fotoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Productos_foto.
     * @param {Productos_fotoDeleteArgs} args - Arguments to delete one Productos_foto.
     * @example
     * // Delete one Productos_foto
     * const Productos_foto = await prisma.productos_foto.delete({
     *   where: {
     *     // ... filter to delete one Productos_foto
     *   }
     * })
     * 
     */
    delete<T extends Productos_fotoDeleteArgs>(args: SelectSubset<T, Productos_fotoDeleteArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Productos_foto.
     * @param {Productos_fotoUpdateArgs} args - Arguments to update one Productos_foto.
     * @example
     * // Update one Productos_foto
     * const productos_foto = await prisma.productos_foto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Productos_fotoUpdateArgs>(args: SelectSubset<T, Productos_fotoUpdateArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos_fotos.
     * @param {Productos_fotoDeleteManyArgs} args - Arguments to filter Productos_fotos to delete.
     * @example
     * // Delete a few Productos_fotos
     * const { count } = await prisma.productos_foto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Productos_fotoDeleteManyArgs>(args?: SelectSubset<T, Productos_fotoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos_fotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Productos_fotoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos_fotos
     * const productos_foto = await prisma.productos_foto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Productos_fotoUpdateManyArgs>(args: SelectSubset<T, Productos_fotoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos_fotos and returns the data updated in the database.
     * @param {Productos_fotoUpdateManyAndReturnArgs} args - Arguments to update many Productos_fotos.
     * @example
     * // Update many Productos_fotos
     * const productos_foto = await prisma.productos_foto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos_fotos and only return the `Id_productos_foto`
     * const productos_fotoWithId_productos_fotoOnly = await prisma.productos_foto.updateManyAndReturn({
     *   select: { Id_productos_foto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Productos_fotoUpdateManyAndReturnArgs>(args: SelectSubset<T, Productos_fotoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Productos_foto.
     * @param {Productos_fotoUpsertArgs} args - Arguments to update or create a Productos_foto.
     * @example
     * // Update or create a Productos_foto
     * const productos_foto = await prisma.productos_foto.upsert({
     *   create: {
     *     // ... data to create a Productos_foto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Productos_foto we want to update
     *   }
     * })
     */
    upsert<T extends Productos_fotoUpsertArgs>(args: SelectSubset<T, Productos_fotoUpsertArgs<ExtArgs>>): Prisma__Productos_fotoClient<$Result.GetResult<Prisma.$Productos_fotoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos_fotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Productos_fotoCountArgs} args - Arguments to filter Productos_fotos to count.
     * @example
     * // Count the number of Productos_fotos
     * const count = await prisma.productos_foto.count({
     *   where: {
     *     // ... the filter for the Productos_fotos we want to count
     *   }
     * })
    **/
    count<T extends Productos_fotoCountArgs>(
      args?: Subset<T, Productos_fotoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Productos_fotoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Productos_foto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Productos_fotoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Productos_fotoAggregateArgs>(args: Subset<T, Productos_fotoAggregateArgs>): Prisma.PrismaPromise<GetProductos_fotoAggregateType<T>>

    /**
     * Group by Productos_foto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Productos_fotoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Productos_fotoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Productos_fotoGroupByArgs['orderBy'] }
        : { orderBy?: Productos_fotoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Productos_fotoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductos_fotoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Productos_foto model
   */
  readonly fields: Productos_fotoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Productos_foto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Productos_fotoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends Productos_foto$productosArgs<ExtArgs> = {}>(args?: Subset<T, Productos_foto$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    emprendimiento_productofoto<T extends Productos_foto$emprendimiento_productofotoArgs<ExtArgs> = {}>(args?: Subset<T, Productos_foto$emprendimiento_productofotoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmprendimientoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Productos_foto model
   */
  interface Productos_fotoFieldRefs {
    readonly Id_productos_foto: FieldRef<"Productos_foto", 'Int'>
    readonly foto: FieldRef<"Productos_foto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Productos_foto findUnique
   */
  export type Productos_fotoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Productos_foto to fetch.
     */
    where: Productos_fotoWhereUniqueInput
  }

  /**
   * Productos_foto findUniqueOrThrow
   */
  export type Productos_fotoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Productos_foto to fetch.
     */
    where: Productos_fotoWhereUniqueInput
  }

  /**
   * Productos_foto findFirst
   */
  export type Productos_fotoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Productos_foto to fetch.
     */
    where?: Productos_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos_fotos to fetch.
     */
    orderBy?: Productos_fotoOrderByWithRelationInput | Productos_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos_fotos.
     */
    cursor?: Productos_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos_fotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos_fotos.
     */
    distinct?: Productos_fotoScalarFieldEnum | Productos_fotoScalarFieldEnum[]
  }

  /**
   * Productos_foto findFirstOrThrow
   */
  export type Productos_fotoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Productos_foto to fetch.
     */
    where?: Productos_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos_fotos to fetch.
     */
    orderBy?: Productos_fotoOrderByWithRelationInput | Productos_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos_fotos.
     */
    cursor?: Productos_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos_fotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos_fotos.
     */
    distinct?: Productos_fotoScalarFieldEnum | Productos_fotoScalarFieldEnum[]
  }

  /**
   * Productos_foto findMany
   */
  export type Productos_fotoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Productos_fotos to fetch.
     */
    where?: Productos_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos_fotos to fetch.
     */
    orderBy?: Productos_fotoOrderByWithRelationInput | Productos_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos_fotos.
     */
    cursor?: Productos_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos_fotos.
     */
    skip?: number
    distinct?: Productos_fotoScalarFieldEnum | Productos_fotoScalarFieldEnum[]
  }

  /**
   * Productos_foto create
   */
  export type Productos_fotoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
    /**
     * The data needed to create a Productos_foto.
     */
    data: XOR<Productos_fotoCreateInput, Productos_fotoUncheckedCreateInput>
  }

  /**
   * Productos_foto createMany
   */
  export type Productos_fotoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos_fotos.
     */
    data: Productos_fotoCreateManyInput | Productos_fotoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Productos_foto createManyAndReturn
   */
  export type Productos_fotoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * The data used to create many Productos_fotos.
     */
    data: Productos_fotoCreateManyInput | Productos_fotoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Productos_foto update
   */
  export type Productos_fotoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
    /**
     * The data needed to update a Productos_foto.
     */
    data: XOR<Productos_fotoUpdateInput, Productos_fotoUncheckedUpdateInput>
    /**
     * Choose, which Productos_foto to update.
     */
    where: Productos_fotoWhereUniqueInput
  }

  /**
   * Productos_foto updateMany
   */
  export type Productos_fotoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos_fotos.
     */
    data: XOR<Productos_fotoUpdateManyMutationInput, Productos_fotoUncheckedUpdateManyInput>
    /**
     * Filter which Productos_fotos to update
     */
    where?: Productos_fotoWhereInput
    /**
     * Limit how many Productos_fotos to update.
     */
    limit?: number
  }

  /**
   * Productos_foto updateManyAndReturn
   */
  export type Productos_fotoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * The data used to update Productos_fotos.
     */
    data: XOR<Productos_fotoUpdateManyMutationInput, Productos_fotoUncheckedUpdateManyInput>
    /**
     * Filter which Productos_fotos to update
     */
    where?: Productos_fotoWhereInput
    /**
     * Limit how many Productos_fotos to update.
     */
    limit?: number
  }

  /**
   * Productos_foto upsert
   */
  export type Productos_fotoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
    /**
     * The filter to search for the Productos_foto to update in case it exists.
     */
    where: Productos_fotoWhereUniqueInput
    /**
     * In case the Productos_foto found by the `where` argument doesn't exist, create a new Productos_foto with this data.
     */
    create: XOR<Productos_fotoCreateInput, Productos_fotoUncheckedCreateInput>
    /**
     * In case the Productos_foto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Productos_fotoUpdateInput, Productos_fotoUncheckedUpdateInput>
  }

  /**
   * Productos_foto delete
   */
  export type Productos_fotoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
    /**
     * Filter which Productos_foto to delete.
     */
    where: Productos_fotoWhereUniqueInput
  }

  /**
   * Productos_foto deleteMany
   */
  export type Productos_fotoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos_fotos to delete
     */
    where?: Productos_fotoWhereInput
    /**
     * Limit how many Productos_fotos to delete.
     */
    limit?: number
  }

  /**
   * Productos_foto.productos
   */
  export type Productos_foto$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    where?: ProductosWhereInput
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    cursor?: ProductosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * Productos_foto.emprendimiento_productofoto
   */
  export type Productos_foto$emprendimiento_productofotoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Emprendimiento
     */
    select?: EmprendimientoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Emprendimiento
     */
    omit?: EmprendimientoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmprendimientoInclude<ExtArgs> | null
    where?: EmprendimientoWhereInput
    orderBy?: EmprendimientoOrderByWithRelationInput | EmprendimientoOrderByWithRelationInput[]
    cursor?: EmprendimientoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmprendimientoScalarFieldEnum | EmprendimientoScalarFieldEnum[]
  }

  /**
   * Productos_foto without action
   */
  export type Productos_fotoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos_foto
     */
    select?: Productos_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos_foto
     */
    omit?: Productos_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Productos_fotoInclude<ExtArgs> | null
  }


  /**
   * Model Materiales_producto
   */

  export type AggregateMateriales_producto = {
    _count: Materiales_productoCountAggregateOutputType | null
    _avg: Materiales_productoAvgAggregateOutputType | null
    _sum: Materiales_productoSumAggregateOutputType | null
    _min: Materiales_productoMinAggregateOutputType | null
    _max: Materiales_productoMaxAggregateOutputType | null
  }

  export type Materiales_productoAvgAggregateOutputType = {
    Id_materiales_producto: number | null
    costo: number | null
    stock: number | null
  }

  export type Materiales_productoSumAggregateOutputType = {
    Id_materiales_producto: number | null
    costo: number | null
    stock: number | null
  }

  export type Materiales_productoMinAggregateOutputType = {
    Id_materiales_producto: number | null
    costo: number | null
    stock: number | null
    nom_prod: string | null
    nom_mat: string | null
  }

  export type Materiales_productoMaxAggregateOutputType = {
    Id_materiales_producto: number | null
    costo: number | null
    stock: number | null
    nom_prod: string | null
    nom_mat: string | null
  }

  export type Materiales_productoCountAggregateOutputType = {
    Id_materiales_producto: number
    costo: number
    stock: number
    nom_prod: number
    nom_mat: number
    _all: number
  }


  export type Materiales_productoAvgAggregateInputType = {
    Id_materiales_producto?: true
    costo?: true
    stock?: true
  }

  export type Materiales_productoSumAggregateInputType = {
    Id_materiales_producto?: true
    costo?: true
    stock?: true
  }

  export type Materiales_productoMinAggregateInputType = {
    Id_materiales_producto?: true
    costo?: true
    stock?: true
    nom_prod?: true
    nom_mat?: true
  }

  export type Materiales_productoMaxAggregateInputType = {
    Id_materiales_producto?: true
    costo?: true
    stock?: true
    nom_prod?: true
    nom_mat?: true
  }

  export type Materiales_productoCountAggregateInputType = {
    Id_materiales_producto?: true
    costo?: true
    stock?: true
    nom_prod?: true
    nom_mat?: true
    _all?: true
  }

  export type Materiales_productoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materiales_producto to aggregate.
     */
    where?: Materiales_productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales_productos to fetch.
     */
    orderBy?: Materiales_productoOrderByWithRelationInput | Materiales_productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Materiales_productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales_productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales_productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Materiales_productos
    **/
    _count?: true | Materiales_productoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Materiales_productoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Materiales_productoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Materiales_productoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Materiales_productoMaxAggregateInputType
  }

  export type GetMateriales_productoAggregateType<T extends Materiales_productoAggregateArgs> = {
        [P in keyof T & keyof AggregateMateriales_producto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMateriales_producto[P]>
      : GetScalarType<T[P], AggregateMateriales_producto[P]>
  }




  export type Materiales_productoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Materiales_productoWhereInput
    orderBy?: Materiales_productoOrderByWithAggregationInput | Materiales_productoOrderByWithAggregationInput[]
    by: Materiales_productoScalarFieldEnum[] | Materiales_productoScalarFieldEnum
    having?: Materiales_productoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Materiales_productoCountAggregateInputType | true
    _avg?: Materiales_productoAvgAggregateInputType
    _sum?: Materiales_productoSumAggregateInputType
    _min?: Materiales_productoMinAggregateInputType
    _max?: Materiales_productoMaxAggregateInputType
  }

  export type Materiales_productoGroupByOutputType = {
    Id_materiales_producto: number
    costo: number
    stock: number
    nom_prod: string
    nom_mat: string
    _count: Materiales_productoCountAggregateOutputType | null
    _avg: Materiales_productoAvgAggregateOutputType | null
    _sum: Materiales_productoSumAggregateOutputType | null
    _min: Materiales_productoMinAggregateOutputType | null
    _max: Materiales_productoMaxAggregateOutputType | null
  }

  type GetMateriales_productoGroupByPayload<T extends Materiales_productoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Materiales_productoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Materiales_productoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Materiales_productoGroupByOutputType[P]>
            : GetScalarType<T[P], Materiales_productoGroupByOutputType[P]>
        }
      >
    >


  export type Materiales_productoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_materiales_producto?: boolean
    costo?: boolean
    stock?: boolean
    nom_prod?: boolean
    nom_mat?: boolean
    rela_prod_mate?: boolean | ProductosDefaultArgs<ExtArgs>
    rela_mate_produ?: boolean | MaterialesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiales_producto"]>

  export type Materiales_productoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_materiales_producto?: boolean
    costo?: boolean
    stock?: boolean
    nom_prod?: boolean
    nom_mat?: boolean
    rela_prod_mate?: boolean | ProductosDefaultArgs<ExtArgs>
    rela_mate_produ?: boolean | MaterialesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiales_producto"]>

  export type Materiales_productoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_materiales_producto?: boolean
    costo?: boolean
    stock?: boolean
    nom_prod?: boolean
    nom_mat?: boolean
    rela_prod_mate?: boolean | ProductosDefaultArgs<ExtArgs>
    rela_mate_produ?: boolean | MaterialesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiales_producto"]>

  export type Materiales_productoSelectScalar = {
    Id_materiales_producto?: boolean
    costo?: boolean
    stock?: boolean
    nom_prod?: boolean
    nom_mat?: boolean
  }

  export type Materiales_productoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_materiales_producto" | "costo" | "stock" | "nom_prod" | "nom_mat", ExtArgs["result"]["materiales_producto"]>
  export type Materiales_productoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_prod_mate?: boolean | ProductosDefaultArgs<ExtArgs>
    rela_mate_produ?: boolean | MaterialesDefaultArgs<ExtArgs>
  }
  export type Materiales_productoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_prod_mate?: boolean | ProductosDefaultArgs<ExtArgs>
    rela_mate_produ?: boolean | MaterialesDefaultArgs<ExtArgs>
  }
  export type Materiales_productoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_prod_mate?: boolean | ProductosDefaultArgs<ExtArgs>
    rela_mate_produ?: boolean | MaterialesDefaultArgs<ExtArgs>
  }

  export type $Materiales_productoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Materiales_producto"
    objects: {
      rela_prod_mate: Prisma.$ProductosPayload<ExtArgs>
      rela_mate_produ: Prisma.$MaterialesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_materiales_producto: number
      costo: number
      stock: number
      nom_prod: string
      nom_mat: string
    }, ExtArgs["result"]["materiales_producto"]>
    composites: {}
  }

  type Materiales_productoGetPayload<S extends boolean | null | undefined | Materiales_productoDefaultArgs> = $Result.GetResult<Prisma.$Materiales_productoPayload, S>

  type Materiales_productoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Materiales_productoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Materiales_productoCountAggregateInputType | true
    }

  export interface Materiales_productoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Materiales_producto'], meta: { name: 'Materiales_producto' } }
    /**
     * Find zero or one Materiales_producto that matches the filter.
     * @param {Materiales_productoFindUniqueArgs} args - Arguments to find a Materiales_producto
     * @example
     * // Get one Materiales_producto
     * const materiales_producto = await prisma.materiales_producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Materiales_productoFindUniqueArgs>(args: SelectSubset<T, Materiales_productoFindUniqueArgs<ExtArgs>>): Prisma__Materiales_productoClient<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Materiales_producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Materiales_productoFindUniqueOrThrowArgs} args - Arguments to find a Materiales_producto
     * @example
     * // Get one Materiales_producto
     * const materiales_producto = await prisma.materiales_producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Materiales_productoFindUniqueOrThrowArgs>(args: SelectSubset<T, Materiales_productoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Materiales_productoClient<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materiales_producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_productoFindFirstArgs} args - Arguments to find a Materiales_producto
     * @example
     * // Get one Materiales_producto
     * const materiales_producto = await prisma.materiales_producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Materiales_productoFindFirstArgs>(args?: SelectSubset<T, Materiales_productoFindFirstArgs<ExtArgs>>): Prisma__Materiales_productoClient<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materiales_producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_productoFindFirstOrThrowArgs} args - Arguments to find a Materiales_producto
     * @example
     * // Get one Materiales_producto
     * const materiales_producto = await prisma.materiales_producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Materiales_productoFindFirstOrThrowArgs>(args?: SelectSubset<T, Materiales_productoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Materiales_productoClient<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Materiales_productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_productoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Materiales_productos
     * const materiales_productos = await prisma.materiales_producto.findMany()
     * 
     * // Get first 10 Materiales_productos
     * const materiales_productos = await prisma.materiales_producto.findMany({ take: 10 })
     * 
     * // Only select the `Id_materiales_producto`
     * const materiales_productoWithId_materiales_productoOnly = await prisma.materiales_producto.findMany({ select: { Id_materiales_producto: true } })
     * 
     */
    findMany<T extends Materiales_productoFindManyArgs>(args?: SelectSubset<T, Materiales_productoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Materiales_producto.
     * @param {Materiales_productoCreateArgs} args - Arguments to create a Materiales_producto.
     * @example
     * // Create one Materiales_producto
     * const Materiales_producto = await prisma.materiales_producto.create({
     *   data: {
     *     // ... data to create a Materiales_producto
     *   }
     * })
     * 
     */
    create<T extends Materiales_productoCreateArgs>(args: SelectSubset<T, Materiales_productoCreateArgs<ExtArgs>>): Prisma__Materiales_productoClient<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Materiales_productos.
     * @param {Materiales_productoCreateManyArgs} args - Arguments to create many Materiales_productos.
     * @example
     * // Create many Materiales_productos
     * const materiales_producto = await prisma.materiales_producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Materiales_productoCreateManyArgs>(args?: SelectSubset<T, Materiales_productoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Materiales_productos and returns the data saved in the database.
     * @param {Materiales_productoCreateManyAndReturnArgs} args - Arguments to create many Materiales_productos.
     * @example
     * // Create many Materiales_productos
     * const materiales_producto = await prisma.materiales_producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Materiales_productos and only return the `Id_materiales_producto`
     * const materiales_productoWithId_materiales_productoOnly = await prisma.materiales_producto.createManyAndReturn({
     *   select: { Id_materiales_producto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Materiales_productoCreateManyAndReturnArgs>(args?: SelectSubset<T, Materiales_productoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Materiales_producto.
     * @param {Materiales_productoDeleteArgs} args - Arguments to delete one Materiales_producto.
     * @example
     * // Delete one Materiales_producto
     * const Materiales_producto = await prisma.materiales_producto.delete({
     *   where: {
     *     // ... filter to delete one Materiales_producto
     *   }
     * })
     * 
     */
    delete<T extends Materiales_productoDeleteArgs>(args: SelectSubset<T, Materiales_productoDeleteArgs<ExtArgs>>): Prisma__Materiales_productoClient<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Materiales_producto.
     * @param {Materiales_productoUpdateArgs} args - Arguments to update one Materiales_producto.
     * @example
     * // Update one Materiales_producto
     * const materiales_producto = await prisma.materiales_producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Materiales_productoUpdateArgs>(args: SelectSubset<T, Materiales_productoUpdateArgs<ExtArgs>>): Prisma__Materiales_productoClient<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Materiales_productos.
     * @param {Materiales_productoDeleteManyArgs} args - Arguments to filter Materiales_productos to delete.
     * @example
     * // Delete a few Materiales_productos
     * const { count } = await prisma.materiales_producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Materiales_productoDeleteManyArgs>(args?: SelectSubset<T, Materiales_productoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materiales_productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_productoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Materiales_productos
     * const materiales_producto = await prisma.materiales_producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Materiales_productoUpdateManyArgs>(args: SelectSubset<T, Materiales_productoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materiales_productos and returns the data updated in the database.
     * @param {Materiales_productoUpdateManyAndReturnArgs} args - Arguments to update many Materiales_productos.
     * @example
     * // Update many Materiales_productos
     * const materiales_producto = await prisma.materiales_producto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Materiales_productos and only return the `Id_materiales_producto`
     * const materiales_productoWithId_materiales_productoOnly = await prisma.materiales_producto.updateManyAndReturn({
     *   select: { Id_materiales_producto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Materiales_productoUpdateManyAndReturnArgs>(args: SelectSubset<T, Materiales_productoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Materiales_producto.
     * @param {Materiales_productoUpsertArgs} args - Arguments to update or create a Materiales_producto.
     * @example
     * // Update or create a Materiales_producto
     * const materiales_producto = await prisma.materiales_producto.upsert({
     *   create: {
     *     // ... data to create a Materiales_producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Materiales_producto we want to update
     *   }
     * })
     */
    upsert<T extends Materiales_productoUpsertArgs>(args: SelectSubset<T, Materiales_productoUpsertArgs<ExtArgs>>): Prisma__Materiales_productoClient<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Materiales_productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_productoCountArgs} args - Arguments to filter Materiales_productos to count.
     * @example
     * // Count the number of Materiales_productos
     * const count = await prisma.materiales_producto.count({
     *   where: {
     *     // ... the filter for the Materiales_productos we want to count
     *   }
     * })
    **/
    count<T extends Materiales_productoCountArgs>(
      args?: Subset<T, Materiales_productoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Materiales_productoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Materiales_producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_productoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Materiales_productoAggregateArgs>(args: Subset<T, Materiales_productoAggregateArgs>): Prisma.PrismaPromise<GetMateriales_productoAggregateType<T>>

    /**
     * Group by Materiales_producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_productoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Materiales_productoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Materiales_productoGroupByArgs['orderBy'] }
        : { orderBy?: Materiales_productoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Materiales_productoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMateriales_productoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Materiales_producto model
   */
  readonly fields: Materiales_productoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Materiales_producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Materiales_productoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rela_prod_mate<T extends ProductosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductosDefaultArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    rela_mate_produ<T extends MaterialesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MaterialesDefaultArgs<ExtArgs>>): Prisma__MaterialesClient<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Materiales_producto model
   */
  interface Materiales_productoFieldRefs {
    readonly Id_materiales_producto: FieldRef<"Materiales_producto", 'Int'>
    readonly costo: FieldRef<"Materiales_producto", 'Float'>
    readonly stock: FieldRef<"Materiales_producto", 'Int'>
    readonly nom_prod: FieldRef<"Materiales_producto", 'String'>
    readonly nom_mat: FieldRef<"Materiales_producto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Materiales_producto findUnique
   */
  export type Materiales_productoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_producto to fetch.
     */
    where: Materiales_productoWhereUniqueInput
  }

  /**
   * Materiales_producto findUniqueOrThrow
   */
  export type Materiales_productoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_producto to fetch.
     */
    where: Materiales_productoWhereUniqueInput
  }

  /**
   * Materiales_producto findFirst
   */
  export type Materiales_productoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_producto to fetch.
     */
    where?: Materiales_productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales_productos to fetch.
     */
    orderBy?: Materiales_productoOrderByWithRelationInput | Materiales_productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materiales_productos.
     */
    cursor?: Materiales_productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales_productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales_productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materiales_productos.
     */
    distinct?: Materiales_productoScalarFieldEnum | Materiales_productoScalarFieldEnum[]
  }

  /**
   * Materiales_producto findFirstOrThrow
   */
  export type Materiales_productoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_producto to fetch.
     */
    where?: Materiales_productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales_productos to fetch.
     */
    orderBy?: Materiales_productoOrderByWithRelationInput | Materiales_productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materiales_productos.
     */
    cursor?: Materiales_productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales_productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales_productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materiales_productos.
     */
    distinct?: Materiales_productoScalarFieldEnum | Materiales_productoScalarFieldEnum[]
  }

  /**
   * Materiales_producto findMany
   */
  export type Materiales_productoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_productos to fetch.
     */
    where?: Materiales_productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales_productos to fetch.
     */
    orderBy?: Materiales_productoOrderByWithRelationInput | Materiales_productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Materiales_productos.
     */
    cursor?: Materiales_productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales_productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales_productos.
     */
    skip?: number
    distinct?: Materiales_productoScalarFieldEnum | Materiales_productoScalarFieldEnum[]
  }

  /**
   * Materiales_producto create
   */
  export type Materiales_productoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    /**
     * The data needed to create a Materiales_producto.
     */
    data: XOR<Materiales_productoCreateInput, Materiales_productoUncheckedCreateInput>
  }

  /**
   * Materiales_producto createMany
   */
  export type Materiales_productoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Materiales_productos.
     */
    data: Materiales_productoCreateManyInput | Materiales_productoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Materiales_producto createManyAndReturn
   */
  export type Materiales_productoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * The data used to create many Materiales_productos.
     */
    data: Materiales_productoCreateManyInput | Materiales_productoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Materiales_producto update
   */
  export type Materiales_productoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    /**
     * The data needed to update a Materiales_producto.
     */
    data: XOR<Materiales_productoUpdateInput, Materiales_productoUncheckedUpdateInput>
    /**
     * Choose, which Materiales_producto to update.
     */
    where: Materiales_productoWhereUniqueInput
  }

  /**
   * Materiales_producto updateMany
   */
  export type Materiales_productoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Materiales_productos.
     */
    data: XOR<Materiales_productoUpdateManyMutationInput, Materiales_productoUncheckedUpdateManyInput>
    /**
     * Filter which Materiales_productos to update
     */
    where?: Materiales_productoWhereInput
    /**
     * Limit how many Materiales_productos to update.
     */
    limit?: number
  }

  /**
   * Materiales_producto updateManyAndReturn
   */
  export type Materiales_productoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * The data used to update Materiales_productos.
     */
    data: XOR<Materiales_productoUpdateManyMutationInput, Materiales_productoUncheckedUpdateManyInput>
    /**
     * Filter which Materiales_productos to update
     */
    where?: Materiales_productoWhereInput
    /**
     * Limit how many Materiales_productos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Materiales_producto upsert
   */
  export type Materiales_productoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    /**
     * The filter to search for the Materiales_producto to update in case it exists.
     */
    where: Materiales_productoWhereUniqueInput
    /**
     * In case the Materiales_producto found by the `where` argument doesn't exist, create a new Materiales_producto with this data.
     */
    create: XOR<Materiales_productoCreateInput, Materiales_productoUncheckedCreateInput>
    /**
     * In case the Materiales_producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Materiales_productoUpdateInput, Materiales_productoUncheckedUpdateInput>
  }

  /**
   * Materiales_producto delete
   */
  export type Materiales_productoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    /**
     * Filter which Materiales_producto to delete.
     */
    where: Materiales_productoWhereUniqueInput
  }

  /**
   * Materiales_producto deleteMany
   */
  export type Materiales_productoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materiales_productos to delete
     */
    where?: Materiales_productoWhereInput
    /**
     * Limit how many Materiales_productos to delete.
     */
    limit?: number
  }

  /**
   * Materiales_producto without action
   */
  export type Materiales_productoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
  }


  /**
   * Model Materiales
   */

  export type AggregateMateriales = {
    _count: MaterialesCountAggregateOutputType | null
    _avg: MaterialesAvgAggregateOutputType | null
    _sum: MaterialesSumAggregateOutputType | null
    _min: MaterialesMinAggregateOutputType | null
    _max: MaterialesMaxAggregateOutputType | null
  }

  export type MaterialesAvgAggregateOutputType = {
    foto_materiales: number | null
  }

  export type MaterialesSumAggregateOutputType = {
    foto_materiales: number | null
  }

  export type MaterialesMinAggregateOutputType = {
    nombre: string | null
    foto_materiales: number | null
  }

  export type MaterialesMaxAggregateOutputType = {
    nombre: string | null
    foto_materiales: number | null
  }

  export type MaterialesCountAggregateOutputType = {
    nombre: number
    foto_materiales: number
    _all: number
  }


  export type MaterialesAvgAggregateInputType = {
    foto_materiales?: true
  }

  export type MaterialesSumAggregateInputType = {
    foto_materiales?: true
  }

  export type MaterialesMinAggregateInputType = {
    nombre?: true
    foto_materiales?: true
  }

  export type MaterialesMaxAggregateInputType = {
    nombre?: true
    foto_materiales?: true
  }

  export type MaterialesCountAggregateInputType = {
    nombre?: true
    foto_materiales?: true
    _all?: true
  }

  export type MaterialesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materiales to aggregate.
     */
    where?: MaterialesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales to fetch.
     */
    orderBy?: MaterialesOrderByWithRelationInput | MaterialesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaterialesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Materiales
    **/
    _count?: true | MaterialesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaterialesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaterialesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaterialesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaterialesMaxAggregateInputType
  }

  export type GetMaterialesAggregateType<T extends MaterialesAggregateArgs> = {
        [P in keyof T & keyof AggregateMateriales]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMateriales[P]>
      : GetScalarType<T[P], AggregateMateriales[P]>
  }




  export type MaterialesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialesWhereInput
    orderBy?: MaterialesOrderByWithAggregationInput | MaterialesOrderByWithAggregationInput[]
    by: MaterialesScalarFieldEnum[] | MaterialesScalarFieldEnum
    having?: MaterialesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaterialesCountAggregateInputType | true
    _avg?: MaterialesAvgAggregateInputType
    _sum?: MaterialesSumAggregateInputType
    _min?: MaterialesMinAggregateInputType
    _max?: MaterialesMaxAggregateInputType
  }

  export type MaterialesGroupByOutputType = {
    nombre: string
    foto_materiales: number
    _count: MaterialesCountAggregateOutputType | null
    _avg: MaterialesAvgAggregateOutputType | null
    _sum: MaterialesSumAggregateOutputType | null
    _min: MaterialesMinAggregateOutputType | null
    _max: MaterialesMaxAggregateOutputType | null
  }

  type GetMaterialesGroupByPayload<T extends MaterialesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaterialesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaterialesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaterialesGroupByOutputType[P]>
            : GetScalarType<T[P], MaterialesGroupByOutputType[P]>
        }
      >
    >


  export type MaterialesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nombre?: boolean
    foto_materiales?: boolean
    rela_foto_mate?: boolean | Materiales_fotoDefaultArgs<ExtArgs>
    materiales_producto?: boolean | Materiales$materiales_productoArgs<ExtArgs>
    _count?: boolean | MaterialesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiales"]>

  export type MaterialesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nombre?: boolean
    foto_materiales?: boolean
    rela_foto_mate?: boolean | Materiales_fotoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiales"]>

  export type MaterialesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nombre?: boolean
    foto_materiales?: boolean
    rela_foto_mate?: boolean | Materiales_fotoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiales"]>

  export type MaterialesSelectScalar = {
    nombre?: boolean
    foto_materiales?: boolean
  }

  export type MaterialesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"nombre" | "foto_materiales", ExtArgs["result"]["materiales"]>
  export type MaterialesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_foto_mate?: boolean | Materiales_fotoDefaultArgs<ExtArgs>
    materiales_producto?: boolean | Materiales$materiales_productoArgs<ExtArgs>
    _count?: boolean | MaterialesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MaterialesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_foto_mate?: boolean | Materiales_fotoDefaultArgs<ExtArgs>
  }
  export type MaterialesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rela_foto_mate?: boolean | Materiales_fotoDefaultArgs<ExtArgs>
  }

  export type $MaterialesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Materiales"
    objects: {
      rela_foto_mate: Prisma.$Materiales_fotoPayload<ExtArgs>
      materiales_producto: Prisma.$Materiales_productoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      nombre: string
      foto_materiales: number
    }, ExtArgs["result"]["materiales"]>
    composites: {}
  }

  type MaterialesGetPayload<S extends boolean | null | undefined | MaterialesDefaultArgs> = $Result.GetResult<Prisma.$MaterialesPayload, S>

  type MaterialesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MaterialesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MaterialesCountAggregateInputType | true
    }

  export interface MaterialesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Materiales'], meta: { name: 'Materiales' } }
    /**
     * Find zero or one Materiales that matches the filter.
     * @param {MaterialesFindUniqueArgs} args - Arguments to find a Materiales
     * @example
     * // Get one Materiales
     * const materiales = await prisma.materiales.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaterialesFindUniqueArgs>(args: SelectSubset<T, MaterialesFindUniqueArgs<ExtArgs>>): Prisma__MaterialesClient<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Materiales that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MaterialesFindUniqueOrThrowArgs} args - Arguments to find a Materiales
     * @example
     * // Get one Materiales
     * const materiales = await prisma.materiales.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaterialesFindUniqueOrThrowArgs>(args: SelectSubset<T, MaterialesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaterialesClient<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materiales that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialesFindFirstArgs} args - Arguments to find a Materiales
     * @example
     * // Get one Materiales
     * const materiales = await prisma.materiales.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaterialesFindFirstArgs>(args?: SelectSubset<T, MaterialesFindFirstArgs<ExtArgs>>): Prisma__MaterialesClient<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materiales that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialesFindFirstOrThrowArgs} args - Arguments to find a Materiales
     * @example
     * // Get one Materiales
     * const materiales = await prisma.materiales.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaterialesFindFirstOrThrowArgs>(args?: SelectSubset<T, MaterialesFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaterialesClient<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Materiales that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Materiales
     * const materiales = await prisma.materiales.findMany()
     * 
     * // Get first 10 Materiales
     * const materiales = await prisma.materiales.findMany({ take: 10 })
     * 
     * // Only select the `nombre`
     * const materialesWithNombreOnly = await prisma.materiales.findMany({ select: { nombre: true } })
     * 
     */
    findMany<T extends MaterialesFindManyArgs>(args?: SelectSubset<T, MaterialesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Materiales.
     * @param {MaterialesCreateArgs} args - Arguments to create a Materiales.
     * @example
     * // Create one Materiales
     * const Materiales = await prisma.materiales.create({
     *   data: {
     *     // ... data to create a Materiales
     *   }
     * })
     * 
     */
    create<T extends MaterialesCreateArgs>(args: SelectSubset<T, MaterialesCreateArgs<ExtArgs>>): Prisma__MaterialesClient<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Materiales.
     * @param {MaterialesCreateManyArgs} args - Arguments to create many Materiales.
     * @example
     * // Create many Materiales
     * const materiales = await prisma.materiales.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaterialesCreateManyArgs>(args?: SelectSubset<T, MaterialesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Materiales and returns the data saved in the database.
     * @param {MaterialesCreateManyAndReturnArgs} args - Arguments to create many Materiales.
     * @example
     * // Create many Materiales
     * const materiales = await prisma.materiales.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Materiales and only return the `nombre`
     * const materialesWithNombreOnly = await prisma.materiales.createManyAndReturn({
     *   select: { nombre: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MaterialesCreateManyAndReturnArgs>(args?: SelectSubset<T, MaterialesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Materiales.
     * @param {MaterialesDeleteArgs} args - Arguments to delete one Materiales.
     * @example
     * // Delete one Materiales
     * const Materiales = await prisma.materiales.delete({
     *   where: {
     *     // ... filter to delete one Materiales
     *   }
     * })
     * 
     */
    delete<T extends MaterialesDeleteArgs>(args: SelectSubset<T, MaterialesDeleteArgs<ExtArgs>>): Prisma__MaterialesClient<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Materiales.
     * @param {MaterialesUpdateArgs} args - Arguments to update one Materiales.
     * @example
     * // Update one Materiales
     * const materiales = await prisma.materiales.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaterialesUpdateArgs>(args: SelectSubset<T, MaterialesUpdateArgs<ExtArgs>>): Prisma__MaterialesClient<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Materiales.
     * @param {MaterialesDeleteManyArgs} args - Arguments to filter Materiales to delete.
     * @example
     * // Delete a few Materiales
     * const { count } = await prisma.materiales.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaterialesDeleteManyArgs>(args?: SelectSubset<T, MaterialesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materiales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Materiales
     * const materiales = await prisma.materiales.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaterialesUpdateManyArgs>(args: SelectSubset<T, MaterialesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materiales and returns the data updated in the database.
     * @param {MaterialesUpdateManyAndReturnArgs} args - Arguments to update many Materiales.
     * @example
     * // Update many Materiales
     * const materiales = await prisma.materiales.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Materiales and only return the `nombre`
     * const materialesWithNombreOnly = await prisma.materiales.updateManyAndReturn({
     *   select: { nombre: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MaterialesUpdateManyAndReturnArgs>(args: SelectSubset<T, MaterialesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Materiales.
     * @param {MaterialesUpsertArgs} args - Arguments to update or create a Materiales.
     * @example
     * // Update or create a Materiales
     * const materiales = await prisma.materiales.upsert({
     *   create: {
     *     // ... data to create a Materiales
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Materiales we want to update
     *   }
     * })
     */
    upsert<T extends MaterialesUpsertArgs>(args: SelectSubset<T, MaterialesUpsertArgs<ExtArgs>>): Prisma__MaterialesClient<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Materiales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialesCountArgs} args - Arguments to filter Materiales to count.
     * @example
     * // Count the number of Materiales
     * const count = await prisma.materiales.count({
     *   where: {
     *     // ... the filter for the Materiales we want to count
     *   }
     * })
    **/
    count<T extends MaterialesCountArgs>(
      args?: Subset<T, MaterialesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaterialesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Materiales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaterialesAggregateArgs>(args: Subset<T, MaterialesAggregateArgs>): Prisma.PrismaPromise<GetMaterialesAggregateType<T>>

    /**
     * Group by Materiales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaterialesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaterialesGroupByArgs['orderBy'] }
        : { orderBy?: MaterialesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaterialesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaterialesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Materiales model
   */
  readonly fields: MaterialesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Materiales.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaterialesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rela_foto_mate<T extends Materiales_fotoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Materiales_fotoDefaultArgs<ExtArgs>>): Prisma__Materiales_fotoClient<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    materiales_producto<T extends Materiales$materiales_productoArgs<ExtArgs> = {}>(args?: Subset<T, Materiales$materiales_productoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Materiales_productoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Materiales model
   */
  interface MaterialesFieldRefs {
    readonly nombre: FieldRef<"Materiales", 'String'>
    readonly foto_materiales: FieldRef<"Materiales", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Materiales findUnique
   */
  export type MaterialesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    /**
     * Filter, which Materiales to fetch.
     */
    where: MaterialesWhereUniqueInput
  }

  /**
   * Materiales findUniqueOrThrow
   */
  export type MaterialesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    /**
     * Filter, which Materiales to fetch.
     */
    where: MaterialesWhereUniqueInput
  }

  /**
   * Materiales findFirst
   */
  export type MaterialesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    /**
     * Filter, which Materiales to fetch.
     */
    where?: MaterialesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales to fetch.
     */
    orderBy?: MaterialesOrderByWithRelationInput | MaterialesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materiales.
     */
    cursor?: MaterialesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materiales.
     */
    distinct?: MaterialesScalarFieldEnum | MaterialesScalarFieldEnum[]
  }

  /**
   * Materiales findFirstOrThrow
   */
  export type MaterialesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    /**
     * Filter, which Materiales to fetch.
     */
    where?: MaterialesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales to fetch.
     */
    orderBy?: MaterialesOrderByWithRelationInput | MaterialesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materiales.
     */
    cursor?: MaterialesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materiales.
     */
    distinct?: MaterialesScalarFieldEnum | MaterialesScalarFieldEnum[]
  }

  /**
   * Materiales findMany
   */
  export type MaterialesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    /**
     * Filter, which Materiales to fetch.
     */
    where?: MaterialesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales to fetch.
     */
    orderBy?: MaterialesOrderByWithRelationInput | MaterialesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Materiales.
     */
    cursor?: MaterialesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales.
     */
    skip?: number
    distinct?: MaterialesScalarFieldEnum | MaterialesScalarFieldEnum[]
  }

  /**
   * Materiales create
   */
  export type MaterialesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    /**
     * The data needed to create a Materiales.
     */
    data: XOR<MaterialesCreateInput, MaterialesUncheckedCreateInput>
  }

  /**
   * Materiales createMany
   */
  export type MaterialesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Materiales.
     */
    data: MaterialesCreateManyInput | MaterialesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Materiales createManyAndReturn
   */
  export type MaterialesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * The data used to create many Materiales.
     */
    data: MaterialesCreateManyInput | MaterialesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Materiales update
   */
  export type MaterialesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    /**
     * The data needed to update a Materiales.
     */
    data: XOR<MaterialesUpdateInput, MaterialesUncheckedUpdateInput>
    /**
     * Choose, which Materiales to update.
     */
    where: MaterialesWhereUniqueInput
  }

  /**
   * Materiales updateMany
   */
  export type MaterialesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Materiales.
     */
    data: XOR<MaterialesUpdateManyMutationInput, MaterialesUncheckedUpdateManyInput>
    /**
     * Filter which Materiales to update
     */
    where?: MaterialesWhereInput
    /**
     * Limit how many Materiales to update.
     */
    limit?: number
  }

  /**
   * Materiales updateManyAndReturn
   */
  export type MaterialesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * The data used to update Materiales.
     */
    data: XOR<MaterialesUpdateManyMutationInput, MaterialesUncheckedUpdateManyInput>
    /**
     * Filter which Materiales to update
     */
    where?: MaterialesWhereInput
    /**
     * Limit how many Materiales to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Materiales upsert
   */
  export type MaterialesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    /**
     * The filter to search for the Materiales to update in case it exists.
     */
    where: MaterialesWhereUniqueInput
    /**
     * In case the Materiales found by the `where` argument doesn't exist, create a new Materiales with this data.
     */
    create: XOR<MaterialesCreateInput, MaterialesUncheckedCreateInput>
    /**
     * In case the Materiales was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaterialesUpdateInput, MaterialesUncheckedUpdateInput>
  }

  /**
   * Materiales delete
   */
  export type MaterialesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    /**
     * Filter which Materiales to delete.
     */
    where: MaterialesWhereUniqueInput
  }

  /**
   * Materiales deleteMany
   */
  export type MaterialesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materiales to delete
     */
    where?: MaterialesWhereInput
    /**
     * Limit how many Materiales to delete.
     */
    limit?: number
  }

  /**
   * Materiales.materiales_producto
   */
  export type Materiales$materiales_productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_producto
     */
    select?: Materiales_productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_producto
     */
    omit?: Materiales_productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_productoInclude<ExtArgs> | null
    where?: Materiales_productoWhereInput
    orderBy?: Materiales_productoOrderByWithRelationInput | Materiales_productoOrderByWithRelationInput[]
    cursor?: Materiales_productoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Materiales_productoScalarFieldEnum | Materiales_productoScalarFieldEnum[]
  }

  /**
   * Materiales without action
   */
  export type MaterialesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
  }


  /**
   * Model Materiales_foto
   */

  export type AggregateMateriales_foto = {
    _count: Materiales_fotoCountAggregateOutputType | null
    _avg: Materiales_fotoAvgAggregateOutputType | null
    _sum: Materiales_fotoSumAggregateOutputType | null
    _min: Materiales_fotoMinAggregateOutputType | null
    _max: Materiales_fotoMaxAggregateOutputType | null
  }

  export type Materiales_fotoAvgAggregateOutputType = {
    Id_materiales_foto: number | null
  }

  export type Materiales_fotoSumAggregateOutputType = {
    Id_materiales_foto: number | null
  }

  export type Materiales_fotoMinAggregateOutputType = {
    Id_materiales_foto: number | null
    foto: string | null
  }

  export type Materiales_fotoMaxAggregateOutputType = {
    Id_materiales_foto: number | null
    foto: string | null
  }

  export type Materiales_fotoCountAggregateOutputType = {
    Id_materiales_foto: number
    foto: number
    _all: number
  }


  export type Materiales_fotoAvgAggregateInputType = {
    Id_materiales_foto?: true
  }

  export type Materiales_fotoSumAggregateInputType = {
    Id_materiales_foto?: true
  }

  export type Materiales_fotoMinAggregateInputType = {
    Id_materiales_foto?: true
    foto?: true
  }

  export type Materiales_fotoMaxAggregateInputType = {
    Id_materiales_foto?: true
    foto?: true
  }

  export type Materiales_fotoCountAggregateInputType = {
    Id_materiales_foto?: true
    foto?: true
    _all?: true
  }

  export type Materiales_fotoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materiales_foto to aggregate.
     */
    where?: Materiales_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales_fotos to fetch.
     */
    orderBy?: Materiales_fotoOrderByWithRelationInput | Materiales_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Materiales_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales_fotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Materiales_fotos
    **/
    _count?: true | Materiales_fotoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Materiales_fotoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Materiales_fotoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Materiales_fotoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Materiales_fotoMaxAggregateInputType
  }

  export type GetMateriales_fotoAggregateType<T extends Materiales_fotoAggregateArgs> = {
        [P in keyof T & keyof AggregateMateriales_foto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMateriales_foto[P]>
      : GetScalarType<T[P], AggregateMateriales_foto[P]>
  }




  export type Materiales_fotoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Materiales_fotoWhereInput
    orderBy?: Materiales_fotoOrderByWithAggregationInput | Materiales_fotoOrderByWithAggregationInput[]
    by: Materiales_fotoScalarFieldEnum[] | Materiales_fotoScalarFieldEnum
    having?: Materiales_fotoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Materiales_fotoCountAggregateInputType | true
    _avg?: Materiales_fotoAvgAggregateInputType
    _sum?: Materiales_fotoSumAggregateInputType
    _min?: Materiales_fotoMinAggregateInputType
    _max?: Materiales_fotoMaxAggregateInputType
  }

  export type Materiales_fotoGroupByOutputType = {
    Id_materiales_foto: number
    foto: string
    _count: Materiales_fotoCountAggregateOutputType | null
    _avg: Materiales_fotoAvgAggregateOutputType | null
    _sum: Materiales_fotoSumAggregateOutputType | null
    _min: Materiales_fotoMinAggregateOutputType | null
    _max: Materiales_fotoMaxAggregateOutputType | null
  }

  type GetMateriales_fotoGroupByPayload<T extends Materiales_fotoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Materiales_fotoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Materiales_fotoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Materiales_fotoGroupByOutputType[P]>
            : GetScalarType<T[P], Materiales_fotoGroupByOutputType[P]>
        }
      >
    >


  export type Materiales_fotoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_materiales_foto?: boolean
    foto?: boolean
    materiales?: boolean | Materiales_foto$materialesArgs<ExtArgs>
    _count?: boolean | Materiales_fotoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materiales_foto"]>

  export type Materiales_fotoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_materiales_foto?: boolean
    foto?: boolean
  }, ExtArgs["result"]["materiales_foto"]>

  export type Materiales_fotoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id_materiales_foto?: boolean
    foto?: boolean
  }, ExtArgs["result"]["materiales_foto"]>

  export type Materiales_fotoSelectScalar = {
    Id_materiales_foto?: boolean
    foto?: boolean
  }

  export type Materiales_fotoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id_materiales_foto" | "foto", ExtArgs["result"]["materiales_foto"]>
  export type Materiales_fotoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiales?: boolean | Materiales_foto$materialesArgs<ExtArgs>
    _count?: boolean | Materiales_fotoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Materiales_fotoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Materiales_fotoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Materiales_fotoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Materiales_foto"
    objects: {
      materiales: Prisma.$MaterialesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id_materiales_foto: number
      foto: string
    }, ExtArgs["result"]["materiales_foto"]>
    composites: {}
  }

  type Materiales_fotoGetPayload<S extends boolean | null | undefined | Materiales_fotoDefaultArgs> = $Result.GetResult<Prisma.$Materiales_fotoPayload, S>

  type Materiales_fotoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Materiales_fotoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Materiales_fotoCountAggregateInputType | true
    }

  export interface Materiales_fotoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Materiales_foto'], meta: { name: 'Materiales_foto' } }
    /**
     * Find zero or one Materiales_foto that matches the filter.
     * @param {Materiales_fotoFindUniqueArgs} args - Arguments to find a Materiales_foto
     * @example
     * // Get one Materiales_foto
     * const materiales_foto = await prisma.materiales_foto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Materiales_fotoFindUniqueArgs>(args: SelectSubset<T, Materiales_fotoFindUniqueArgs<ExtArgs>>): Prisma__Materiales_fotoClient<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Materiales_foto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Materiales_fotoFindUniqueOrThrowArgs} args - Arguments to find a Materiales_foto
     * @example
     * // Get one Materiales_foto
     * const materiales_foto = await prisma.materiales_foto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Materiales_fotoFindUniqueOrThrowArgs>(args: SelectSubset<T, Materiales_fotoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Materiales_fotoClient<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materiales_foto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_fotoFindFirstArgs} args - Arguments to find a Materiales_foto
     * @example
     * // Get one Materiales_foto
     * const materiales_foto = await prisma.materiales_foto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Materiales_fotoFindFirstArgs>(args?: SelectSubset<T, Materiales_fotoFindFirstArgs<ExtArgs>>): Prisma__Materiales_fotoClient<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materiales_foto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_fotoFindFirstOrThrowArgs} args - Arguments to find a Materiales_foto
     * @example
     * // Get one Materiales_foto
     * const materiales_foto = await prisma.materiales_foto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Materiales_fotoFindFirstOrThrowArgs>(args?: SelectSubset<T, Materiales_fotoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Materiales_fotoClient<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Materiales_fotos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_fotoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Materiales_fotos
     * const materiales_fotos = await prisma.materiales_foto.findMany()
     * 
     * // Get first 10 Materiales_fotos
     * const materiales_fotos = await prisma.materiales_foto.findMany({ take: 10 })
     * 
     * // Only select the `Id_materiales_foto`
     * const materiales_fotoWithId_materiales_fotoOnly = await prisma.materiales_foto.findMany({ select: { Id_materiales_foto: true } })
     * 
     */
    findMany<T extends Materiales_fotoFindManyArgs>(args?: SelectSubset<T, Materiales_fotoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Materiales_foto.
     * @param {Materiales_fotoCreateArgs} args - Arguments to create a Materiales_foto.
     * @example
     * // Create one Materiales_foto
     * const Materiales_foto = await prisma.materiales_foto.create({
     *   data: {
     *     // ... data to create a Materiales_foto
     *   }
     * })
     * 
     */
    create<T extends Materiales_fotoCreateArgs>(args: SelectSubset<T, Materiales_fotoCreateArgs<ExtArgs>>): Prisma__Materiales_fotoClient<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Materiales_fotos.
     * @param {Materiales_fotoCreateManyArgs} args - Arguments to create many Materiales_fotos.
     * @example
     * // Create many Materiales_fotos
     * const materiales_foto = await prisma.materiales_foto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Materiales_fotoCreateManyArgs>(args?: SelectSubset<T, Materiales_fotoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Materiales_fotos and returns the data saved in the database.
     * @param {Materiales_fotoCreateManyAndReturnArgs} args - Arguments to create many Materiales_fotos.
     * @example
     * // Create many Materiales_fotos
     * const materiales_foto = await prisma.materiales_foto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Materiales_fotos and only return the `Id_materiales_foto`
     * const materiales_fotoWithId_materiales_fotoOnly = await prisma.materiales_foto.createManyAndReturn({
     *   select: { Id_materiales_foto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Materiales_fotoCreateManyAndReturnArgs>(args?: SelectSubset<T, Materiales_fotoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Materiales_foto.
     * @param {Materiales_fotoDeleteArgs} args - Arguments to delete one Materiales_foto.
     * @example
     * // Delete one Materiales_foto
     * const Materiales_foto = await prisma.materiales_foto.delete({
     *   where: {
     *     // ... filter to delete one Materiales_foto
     *   }
     * })
     * 
     */
    delete<T extends Materiales_fotoDeleteArgs>(args: SelectSubset<T, Materiales_fotoDeleteArgs<ExtArgs>>): Prisma__Materiales_fotoClient<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Materiales_foto.
     * @param {Materiales_fotoUpdateArgs} args - Arguments to update one Materiales_foto.
     * @example
     * // Update one Materiales_foto
     * const materiales_foto = await prisma.materiales_foto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Materiales_fotoUpdateArgs>(args: SelectSubset<T, Materiales_fotoUpdateArgs<ExtArgs>>): Prisma__Materiales_fotoClient<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Materiales_fotos.
     * @param {Materiales_fotoDeleteManyArgs} args - Arguments to filter Materiales_fotos to delete.
     * @example
     * // Delete a few Materiales_fotos
     * const { count } = await prisma.materiales_foto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Materiales_fotoDeleteManyArgs>(args?: SelectSubset<T, Materiales_fotoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materiales_fotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_fotoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Materiales_fotos
     * const materiales_foto = await prisma.materiales_foto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Materiales_fotoUpdateManyArgs>(args: SelectSubset<T, Materiales_fotoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materiales_fotos and returns the data updated in the database.
     * @param {Materiales_fotoUpdateManyAndReturnArgs} args - Arguments to update many Materiales_fotos.
     * @example
     * // Update many Materiales_fotos
     * const materiales_foto = await prisma.materiales_foto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Materiales_fotos and only return the `Id_materiales_foto`
     * const materiales_fotoWithId_materiales_fotoOnly = await prisma.materiales_foto.updateManyAndReturn({
     *   select: { Id_materiales_foto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Materiales_fotoUpdateManyAndReturnArgs>(args: SelectSubset<T, Materiales_fotoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Materiales_foto.
     * @param {Materiales_fotoUpsertArgs} args - Arguments to update or create a Materiales_foto.
     * @example
     * // Update or create a Materiales_foto
     * const materiales_foto = await prisma.materiales_foto.upsert({
     *   create: {
     *     // ... data to create a Materiales_foto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Materiales_foto we want to update
     *   }
     * })
     */
    upsert<T extends Materiales_fotoUpsertArgs>(args: SelectSubset<T, Materiales_fotoUpsertArgs<ExtArgs>>): Prisma__Materiales_fotoClient<$Result.GetResult<Prisma.$Materiales_fotoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Materiales_fotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_fotoCountArgs} args - Arguments to filter Materiales_fotos to count.
     * @example
     * // Count the number of Materiales_fotos
     * const count = await prisma.materiales_foto.count({
     *   where: {
     *     // ... the filter for the Materiales_fotos we want to count
     *   }
     * })
    **/
    count<T extends Materiales_fotoCountArgs>(
      args?: Subset<T, Materiales_fotoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Materiales_fotoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Materiales_foto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_fotoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Materiales_fotoAggregateArgs>(args: Subset<T, Materiales_fotoAggregateArgs>): Prisma.PrismaPromise<GetMateriales_fotoAggregateType<T>>

    /**
     * Group by Materiales_foto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Materiales_fotoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Materiales_fotoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Materiales_fotoGroupByArgs['orderBy'] }
        : { orderBy?: Materiales_fotoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Materiales_fotoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMateriales_fotoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Materiales_foto model
   */
  readonly fields: Materiales_fotoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Materiales_foto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Materiales_fotoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    materiales<T extends Materiales_foto$materialesArgs<ExtArgs> = {}>(args?: Subset<T, Materiales_foto$materialesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Materiales_foto model
   */
  interface Materiales_fotoFieldRefs {
    readonly Id_materiales_foto: FieldRef<"Materiales_foto", 'Int'>
    readonly foto: FieldRef<"Materiales_foto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Materiales_foto findUnique
   */
  export type Materiales_fotoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_foto to fetch.
     */
    where: Materiales_fotoWhereUniqueInput
  }

  /**
   * Materiales_foto findUniqueOrThrow
   */
  export type Materiales_fotoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_foto to fetch.
     */
    where: Materiales_fotoWhereUniqueInput
  }

  /**
   * Materiales_foto findFirst
   */
  export type Materiales_fotoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_foto to fetch.
     */
    where?: Materiales_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales_fotos to fetch.
     */
    orderBy?: Materiales_fotoOrderByWithRelationInput | Materiales_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materiales_fotos.
     */
    cursor?: Materiales_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales_fotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materiales_fotos.
     */
    distinct?: Materiales_fotoScalarFieldEnum | Materiales_fotoScalarFieldEnum[]
  }

  /**
   * Materiales_foto findFirstOrThrow
   */
  export type Materiales_fotoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_foto to fetch.
     */
    where?: Materiales_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales_fotos to fetch.
     */
    orderBy?: Materiales_fotoOrderByWithRelationInput | Materiales_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materiales_fotos.
     */
    cursor?: Materiales_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales_fotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materiales_fotos.
     */
    distinct?: Materiales_fotoScalarFieldEnum | Materiales_fotoScalarFieldEnum[]
  }

  /**
   * Materiales_foto findMany
   */
  export type Materiales_fotoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
    /**
     * Filter, which Materiales_fotos to fetch.
     */
    where?: Materiales_fotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materiales_fotos to fetch.
     */
    orderBy?: Materiales_fotoOrderByWithRelationInput | Materiales_fotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Materiales_fotos.
     */
    cursor?: Materiales_fotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materiales_fotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materiales_fotos.
     */
    skip?: number
    distinct?: Materiales_fotoScalarFieldEnum | Materiales_fotoScalarFieldEnum[]
  }

  /**
   * Materiales_foto create
   */
  export type Materiales_fotoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
    /**
     * The data needed to create a Materiales_foto.
     */
    data: XOR<Materiales_fotoCreateInput, Materiales_fotoUncheckedCreateInput>
  }

  /**
   * Materiales_foto createMany
   */
  export type Materiales_fotoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Materiales_fotos.
     */
    data: Materiales_fotoCreateManyInput | Materiales_fotoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Materiales_foto createManyAndReturn
   */
  export type Materiales_fotoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * The data used to create many Materiales_fotos.
     */
    data: Materiales_fotoCreateManyInput | Materiales_fotoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Materiales_foto update
   */
  export type Materiales_fotoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
    /**
     * The data needed to update a Materiales_foto.
     */
    data: XOR<Materiales_fotoUpdateInput, Materiales_fotoUncheckedUpdateInput>
    /**
     * Choose, which Materiales_foto to update.
     */
    where: Materiales_fotoWhereUniqueInput
  }

  /**
   * Materiales_foto updateMany
   */
  export type Materiales_fotoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Materiales_fotos.
     */
    data: XOR<Materiales_fotoUpdateManyMutationInput, Materiales_fotoUncheckedUpdateManyInput>
    /**
     * Filter which Materiales_fotos to update
     */
    where?: Materiales_fotoWhereInput
    /**
     * Limit how many Materiales_fotos to update.
     */
    limit?: number
  }

  /**
   * Materiales_foto updateManyAndReturn
   */
  export type Materiales_fotoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * The data used to update Materiales_fotos.
     */
    data: XOR<Materiales_fotoUpdateManyMutationInput, Materiales_fotoUncheckedUpdateManyInput>
    /**
     * Filter which Materiales_fotos to update
     */
    where?: Materiales_fotoWhereInput
    /**
     * Limit how many Materiales_fotos to update.
     */
    limit?: number
  }

  /**
   * Materiales_foto upsert
   */
  export type Materiales_fotoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
    /**
     * The filter to search for the Materiales_foto to update in case it exists.
     */
    where: Materiales_fotoWhereUniqueInput
    /**
     * In case the Materiales_foto found by the `where` argument doesn't exist, create a new Materiales_foto with this data.
     */
    create: XOR<Materiales_fotoCreateInput, Materiales_fotoUncheckedCreateInput>
    /**
     * In case the Materiales_foto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Materiales_fotoUpdateInput, Materiales_fotoUncheckedUpdateInput>
  }

  /**
   * Materiales_foto delete
   */
  export type Materiales_fotoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
    /**
     * Filter which Materiales_foto to delete.
     */
    where: Materiales_fotoWhereUniqueInput
  }

  /**
   * Materiales_foto deleteMany
   */
  export type Materiales_fotoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materiales_fotos to delete
     */
    where?: Materiales_fotoWhereInput
    /**
     * Limit how many Materiales_fotos to delete.
     */
    limit?: number
  }

  /**
   * Materiales_foto.materiales
   */
  export type Materiales_foto$materialesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales
     */
    select?: MaterialesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales
     */
    omit?: MaterialesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialesInclude<ExtArgs> | null
    where?: MaterialesWhereInput
    orderBy?: MaterialesOrderByWithRelationInput | MaterialesOrderByWithRelationInput[]
    cursor?: MaterialesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialesScalarFieldEnum | MaterialesScalarFieldEnum[]
  }

  /**
   * Materiales_foto without action
   */
  export type Materiales_fotoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Materiales_foto
     */
    select?: Materiales_fotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Materiales_foto
     */
    omit?: Materiales_fotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Materiales_fotoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    email: 'email',
    contra: 'contra',
    nombre: 'nombre',
    foto_perfil: 'foto_perfil',
    typo_id: 'typo_id',
    contacto: 'contacto'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const Usuario_EmprendimientoScalarFieldEnum: {
    Id_usu_emp: 'Id_usu_emp',
    nom_color: 'nom_color',
    email: 'email',
    typo: 'typo'
  };

  export type Usuario_EmprendimientoScalarFieldEnum = (typeof Usuario_EmprendimientoScalarFieldEnum)[keyof typeof Usuario_EmprendimientoScalarFieldEnum]


  export const Foto_UsuarioScalarFieldEnum: {
    Id_fotousu: 'Id_fotousu',
    foto_perfil: 'foto_perfil'
  };

  export type Foto_UsuarioScalarFieldEnum = (typeof Foto_UsuarioScalarFieldEnum)[keyof typeof Foto_UsuarioScalarFieldEnum]


  export const ContactosScalarFieldEnum: {
    Id_contactos: 'Id_contactos',
    telefono: 'telefono',
    nombre: 'nombre',
    redes_soc: 'redes_soc',
    notas_perz: 'notas_perz',
    email_contactos: 'email_contactos',
    foto_contacto: 'foto_contacto'
  };

  export type ContactosScalarFieldEnum = (typeof ContactosScalarFieldEnum)[keyof typeof ContactosScalarFieldEnum]


  export const EmprendimientoScalarFieldEnum: {
    typo: 'typo',
    descripcion: 'descripcion',
    producto_foto: 'producto_foto',
    producto: 'producto'
  };

  export type EmprendimientoScalarFieldEnum = (typeof EmprendimientoScalarFieldEnum)[keyof typeof EmprendimientoScalarFieldEnum]


  export const Emprendimiento_productoScalarFieldEnum: {
    Id_emp_prod: 'Id_emp_prod',
    costo: 'costo',
    stock: 'stock',
    emp_prod: 'emp_prod',
    prod_emp: 'prod_emp'
  };

  export type Emprendimiento_productoScalarFieldEnum = (typeof Emprendimiento_productoScalarFieldEnum)[keyof typeof Emprendimiento_productoScalarFieldEnum]


  export const Colores_marcaScalarFieldEnum: {
    nom_colores: 'nom_colores',
    foto: 'foto'
  };

  export type Colores_marcaScalarFieldEnum = (typeof Colores_marcaScalarFieldEnum)[keyof typeof Colores_marcaScalarFieldEnum]


  export const Marketing_emprendimientoScalarFieldEnum: {
    Id_marketing_emprendimiento: 'Id_marketing_emprendimiento',
    typo_emp: 'typo_emp',
    Id_mark: 'Id_mark'
  };

  export type Marketing_emprendimientoScalarFieldEnum = (typeof Marketing_emprendimientoScalarFieldEnum)[keyof typeof Marketing_emprendimientoScalarFieldEnum]


  export const MarketingScalarFieldEnum: {
    Id_marketing: 'Id_marketing',
    publicacion: 'publicacion'
  };

  export type MarketingScalarFieldEnum = (typeof MarketingScalarFieldEnum)[keyof typeof MarketingScalarFieldEnum]


  export const PublicacionesScalarFieldEnum: {
    link_plantilla: 'link_plantilla',
    desc: 'desc',
    nombre: 'nombre',
    foto: 'foto'
  };

  export type PublicacionesScalarFieldEnum = (typeof PublicacionesScalarFieldEnum)[keyof typeof PublicacionesScalarFieldEnum]


  export const Publicaciones_fotoScalarFieldEnum: {
    Id_publicaciones_foto: 'Id_publicaciones_foto',
    foto: 'foto'
  };

  export type Publicaciones_fotoScalarFieldEnum = (typeof Publicaciones_fotoScalarFieldEnum)[keyof typeof Publicaciones_fotoScalarFieldEnum]


  export const ProductosScalarFieldEnum: {
    nombre_producto: 'nombre_producto',
    pasos: 'pasos',
    descripcion: 'descripcion',
    foto: 'foto'
  };

  export type ProductosScalarFieldEnum = (typeof ProductosScalarFieldEnum)[keyof typeof ProductosScalarFieldEnum]


  export const Productos_fotoScalarFieldEnum: {
    Id_productos_foto: 'Id_productos_foto',
    foto: 'foto'
  };

  export type Productos_fotoScalarFieldEnum = (typeof Productos_fotoScalarFieldEnum)[keyof typeof Productos_fotoScalarFieldEnum]


  export const Materiales_productoScalarFieldEnum: {
    Id_materiales_producto: 'Id_materiales_producto',
    costo: 'costo',
    stock: 'stock',
    nom_prod: 'nom_prod',
    nom_mat: 'nom_mat'
  };

  export type Materiales_productoScalarFieldEnum = (typeof Materiales_productoScalarFieldEnum)[keyof typeof Materiales_productoScalarFieldEnum]


  export const MaterialesScalarFieldEnum: {
    nombre: 'nombre',
    foto_materiales: 'foto_materiales'
  };

  export type MaterialesScalarFieldEnum = (typeof MaterialesScalarFieldEnum)[keyof typeof MaterialesScalarFieldEnum]


  export const Materiales_fotoScalarFieldEnum: {
    Id_materiales_foto: 'Id_materiales_foto',
    foto: 'foto'
  };

  export type Materiales_fotoScalarFieldEnum = (typeof Materiales_fotoScalarFieldEnum)[keyof typeof Materiales_fotoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    email?: StringFilter<"Usuario"> | string
    contra?: StringFilter<"Usuario"> | string
    nombre?: StringFilter<"Usuario"> | string
    foto_perfil?: IntFilter<"Usuario"> | number
    typo_id?: StringFilter<"Usuario"> | string
    contacto?: IntFilter<"Usuario"> | number
    foto?: XOR<Foto_UsuarioScalarRelationFilter, Foto_UsuarioWhereInput>
    typo_emprendimiento?: XOR<EmprendimientoScalarRelationFilter, EmprendimientoWhereInput>
    Id_contactos?: XOR<ContactosScalarRelationFilter, ContactosWhereInput>
    usuario_emprendimiento?: Usuario_EmprendimientoListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    email?: SortOrder
    contra?: SortOrder
    nombre?: SortOrder
    foto_perfil?: SortOrder
    typo_id?: SortOrder
    contacto?: SortOrder
    foto?: Foto_UsuarioOrderByWithRelationInput
    typo_emprendimiento?: EmprendimientoOrderByWithRelationInput
    Id_contactos?: ContactosOrderByWithRelationInput
    usuario_emprendimiento?: Usuario_EmprendimientoOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    contra?: StringFilter<"Usuario"> | string
    nombre?: StringFilter<"Usuario"> | string
    foto_perfil?: IntFilter<"Usuario"> | number
    typo_id?: StringFilter<"Usuario"> | string
    contacto?: IntFilter<"Usuario"> | number
    foto?: XOR<Foto_UsuarioScalarRelationFilter, Foto_UsuarioWhereInput>
    typo_emprendimiento?: XOR<EmprendimientoScalarRelationFilter, EmprendimientoWhereInput>
    Id_contactos?: XOR<ContactosScalarRelationFilter, ContactosWhereInput>
    usuario_emprendimiento?: Usuario_EmprendimientoListRelationFilter
  }, "email">

  export type UsuarioOrderByWithAggregationInput = {
    email?: SortOrder
    contra?: SortOrder
    nombre?: SortOrder
    foto_perfil?: SortOrder
    typo_id?: SortOrder
    contacto?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    email?: StringWithAggregatesFilter<"Usuario"> | string
    contra?: StringWithAggregatesFilter<"Usuario"> | string
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    foto_perfil?: IntWithAggregatesFilter<"Usuario"> | number
    typo_id?: StringWithAggregatesFilter<"Usuario"> | string
    contacto?: IntWithAggregatesFilter<"Usuario"> | number
  }

  export type Usuario_EmprendimientoWhereInput = {
    AND?: Usuario_EmprendimientoWhereInput | Usuario_EmprendimientoWhereInput[]
    OR?: Usuario_EmprendimientoWhereInput[]
    NOT?: Usuario_EmprendimientoWhereInput | Usuario_EmprendimientoWhereInput[]
    Id_usu_emp?: IntFilter<"Usuario_Emprendimiento"> | number
    nom_color?: StringFilter<"Usuario_Emprendimiento"> | string
    email?: StringFilter<"Usuario_Emprendimiento"> | string
    typo?: StringFilter<"Usuario_Emprendimiento"> | string
    rela_colo_usuemp?: XOR<Colores_marcaScalarRelationFilter, Colores_marcaWhereInput>
    rela_usu_usuemp?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    rela_emp_usuemp?: XOR<EmprendimientoScalarRelationFilter, EmprendimientoWhereInput>
  }

  export type Usuario_EmprendimientoOrderByWithRelationInput = {
    Id_usu_emp?: SortOrder
    nom_color?: SortOrder
    email?: SortOrder
    typo?: SortOrder
    rela_colo_usuemp?: Colores_marcaOrderByWithRelationInput
    rela_usu_usuemp?: UsuarioOrderByWithRelationInput
    rela_emp_usuemp?: EmprendimientoOrderByWithRelationInput
  }

  export type Usuario_EmprendimientoWhereUniqueInput = Prisma.AtLeast<{
    Id_usu_emp?: number
    AND?: Usuario_EmprendimientoWhereInput | Usuario_EmprendimientoWhereInput[]
    OR?: Usuario_EmprendimientoWhereInput[]
    NOT?: Usuario_EmprendimientoWhereInput | Usuario_EmprendimientoWhereInput[]
    nom_color?: StringFilter<"Usuario_Emprendimiento"> | string
    email?: StringFilter<"Usuario_Emprendimiento"> | string
    typo?: StringFilter<"Usuario_Emprendimiento"> | string
    rela_colo_usuemp?: XOR<Colores_marcaScalarRelationFilter, Colores_marcaWhereInput>
    rela_usu_usuemp?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    rela_emp_usuemp?: XOR<EmprendimientoScalarRelationFilter, EmprendimientoWhereInput>
  }, "Id_usu_emp">

  export type Usuario_EmprendimientoOrderByWithAggregationInput = {
    Id_usu_emp?: SortOrder
    nom_color?: SortOrder
    email?: SortOrder
    typo?: SortOrder
    _count?: Usuario_EmprendimientoCountOrderByAggregateInput
    _avg?: Usuario_EmprendimientoAvgOrderByAggregateInput
    _max?: Usuario_EmprendimientoMaxOrderByAggregateInput
    _min?: Usuario_EmprendimientoMinOrderByAggregateInput
    _sum?: Usuario_EmprendimientoSumOrderByAggregateInput
  }

  export type Usuario_EmprendimientoScalarWhereWithAggregatesInput = {
    AND?: Usuario_EmprendimientoScalarWhereWithAggregatesInput | Usuario_EmprendimientoScalarWhereWithAggregatesInput[]
    OR?: Usuario_EmprendimientoScalarWhereWithAggregatesInput[]
    NOT?: Usuario_EmprendimientoScalarWhereWithAggregatesInput | Usuario_EmprendimientoScalarWhereWithAggregatesInput[]
    Id_usu_emp?: IntWithAggregatesFilter<"Usuario_Emprendimiento"> | number
    nom_color?: StringWithAggregatesFilter<"Usuario_Emprendimiento"> | string
    email?: StringWithAggregatesFilter<"Usuario_Emprendimiento"> | string
    typo?: StringWithAggregatesFilter<"Usuario_Emprendimiento"> | string
  }

  export type Foto_UsuarioWhereInput = {
    AND?: Foto_UsuarioWhereInput | Foto_UsuarioWhereInput[]
    OR?: Foto_UsuarioWhereInput[]
    NOT?: Foto_UsuarioWhereInput | Foto_UsuarioWhereInput[]
    Id_fotousu?: IntFilter<"Foto_Usuario"> | number
    foto_perfil?: StringFilter<"Foto_Usuario"> | string
    usuarios?: UsuarioListRelationFilter
    foto_contacto?: ContactosListRelationFilter
  }

  export type Foto_UsuarioOrderByWithRelationInput = {
    Id_fotousu?: SortOrder
    foto_perfil?: SortOrder
    usuarios?: UsuarioOrderByRelationAggregateInput
    foto_contacto?: ContactosOrderByRelationAggregateInput
  }

  export type Foto_UsuarioWhereUniqueInput = Prisma.AtLeast<{
    Id_fotousu?: number
    AND?: Foto_UsuarioWhereInput | Foto_UsuarioWhereInput[]
    OR?: Foto_UsuarioWhereInput[]
    NOT?: Foto_UsuarioWhereInput | Foto_UsuarioWhereInput[]
    foto_perfil?: StringFilter<"Foto_Usuario"> | string
    usuarios?: UsuarioListRelationFilter
    foto_contacto?: ContactosListRelationFilter
  }, "Id_fotousu">

  export type Foto_UsuarioOrderByWithAggregationInput = {
    Id_fotousu?: SortOrder
    foto_perfil?: SortOrder
    _count?: Foto_UsuarioCountOrderByAggregateInput
    _avg?: Foto_UsuarioAvgOrderByAggregateInput
    _max?: Foto_UsuarioMaxOrderByAggregateInput
    _min?: Foto_UsuarioMinOrderByAggregateInput
    _sum?: Foto_UsuarioSumOrderByAggregateInput
  }

  export type Foto_UsuarioScalarWhereWithAggregatesInput = {
    AND?: Foto_UsuarioScalarWhereWithAggregatesInput | Foto_UsuarioScalarWhereWithAggregatesInput[]
    OR?: Foto_UsuarioScalarWhereWithAggregatesInput[]
    NOT?: Foto_UsuarioScalarWhereWithAggregatesInput | Foto_UsuarioScalarWhereWithAggregatesInput[]
    Id_fotousu?: IntWithAggregatesFilter<"Foto_Usuario"> | number
    foto_perfil?: StringWithAggregatesFilter<"Foto_Usuario"> | string
  }

  export type ContactosWhereInput = {
    AND?: ContactosWhereInput | ContactosWhereInput[]
    OR?: ContactosWhereInput[]
    NOT?: ContactosWhereInput | ContactosWhereInput[]
    Id_contactos?: IntFilter<"Contactos"> | number
    telefono?: IntFilter<"Contactos"> | number
    nombre?: StringFilter<"Contactos"> | string
    redes_soc?: StringFilter<"Contactos"> | string
    notas_perz?: StringFilter<"Contactos"> | string
    email_contactos?: StringFilter<"Contactos"> | string
    foto_contacto?: IntFilter<"Contactos"> | number
    foto?: XOR<Foto_UsuarioScalarRelationFilter, Foto_UsuarioWhereInput>
    usuario?: UsuarioListRelationFilter
  }

  export type ContactosOrderByWithRelationInput = {
    Id_contactos?: SortOrder
    telefono?: SortOrder
    nombre?: SortOrder
    redes_soc?: SortOrder
    notas_perz?: SortOrder
    email_contactos?: SortOrder
    foto_contacto?: SortOrder
    foto?: Foto_UsuarioOrderByWithRelationInput
    usuario?: UsuarioOrderByRelationAggregateInput
  }

  export type ContactosWhereUniqueInput = Prisma.AtLeast<{
    Id_contactos?: number
    AND?: ContactosWhereInput | ContactosWhereInput[]
    OR?: ContactosWhereInput[]
    NOT?: ContactosWhereInput | ContactosWhereInput[]
    telefono?: IntFilter<"Contactos"> | number
    nombre?: StringFilter<"Contactos"> | string
    redes_soc?: StringFilter<"Contactos"> | string
    notas_perz?: StringFilter<"Contactos"> | string
    email_contactos?: StringFilter<"Contactos"> | string
    foto_contacto?: IntFilter<"Contactos"> | number
    foto?: XOR<Foto_UsuarioScalarRelationFilter, Foto_UsuarioWhereInput>
    usuario?: UsuarioListRelationFilter
  }, "Id_contactos">

  export type ContactosOrderByWithAggregationInput = {
    Id_contactos?: SortOrder
    telefono?: SortOrder
    nombre?: SortOrder
    redes_soc?: SortOrder
    notas_perz?: SortOrder
    email_contactos?: SortOrder
    foto_contacto?: SortOrder
    _count?: ContactosCountOrderByAggregateInput
    _avg?: ContactosAvgOrderByAggregateInput
    _max?: ContactosMaxOrderByAggregateInput
    _min?: ContactosMinOrderByAggregateInput
    _sum?: ContactosSumOrderByAggregateInput
  }

  export type ContactosScalarWhereWithAggregatesInput = {
    AND?: ContactosScalarWhereWithAggregatesInput | ContactosScalarWhereWithAggregatesInput[]
    OR?: ContactosScalarWhereWithAggregatesInput[]
    NOT?: ContactosScalarWhereWithAggregatesInput | ContactosScalarWhereWithAggregatesInput[]
    Id_contactos?: IntWithAggregatesFilter<"Contactos"> | number
    telefono?: IntWithAggregatesFilter<"Contactos"> | number
    nombre?: StringWithAggregatesFilter<"Contactos"> | string
    redes_soc?: StringWithAggregatesFilter<"Contactos"> | string
    notas_perz?: StringWithAggregatesFilter<"Contactos"> | string
    email_contactos?: StringWithAggregatesFilter<"Contactos"> | string
    foto_contacto?: IntWithAggregatesFilter<"Contactos"> | number
  }

  export type EmprendimientoWhereInput = {
    AND?: EmprendimientoWhereInput | EmprendimientoWhereInput[]
    OR?: EmprendimientoWhereInput[]
    NOT?: EmprendimientoWhereInput | EmprendimientoWhereInput[]
    typo?: StringFilter<"Emprendimiento"> | string
    descripcion?: StringFilter<"Emprendimiento"> | string
    producto_foto?: IntFilter<"Emprendimiento"> | number
    producto?: StringFilter<"Emprendimiento"> | string
    rela_emp_prodfoto?: XOR<Productos_fotoScalarRelationFilter, Productos_fotoWhereInput>
    rela_produ_emp?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
    usuario?: UsuarioListRelationFilter
    marketing_emprendimiento?: Marketing_emprendimientoListRelationFilter
    emprendimiento_producto?: Emprendimiento_productoListRelationFilter
    usuario_emprendimiento?: Usuario_EmprendimientoListRelationFilter
  }

  export type EmprendimientoOrderByWithRelationInput = {
    typo?: SortOrder
    descripcion?: SortOrder
    producto_foto?: SortOrder
    producto?: SortOrder
    rela_emp_prodfoto?: Productos_fotoOrderByWithRelationInput
    rela_produ_emp?: ProductosOrderByWithRelationInput
    usuario?: UsuarioOrderByRelationAggregateInput
    marketing_emprendimiento?: Marketing_emprendimientoOrderByRelationAggregateInput
    emprendimiento_producto?: Emprendimiento_productoOrderByRelationAggregateInput
    usuario_emprendimiento?: Usuario_EmprendimientoOrderByRelationAggregateInput
  }

  export type EmprendimientoWhereUniqueInput = Prisma.AtLeast<{
    typo?: string
    AND?: EmprendimientoWhereInput | EmprendimientoWhereInput[]
    OR?: EmprendimientoWhereInput[]
    NOT?: EmprendimientoWhereInput | EmprendimientoWhereInput[]
    descripcion?: StringFilter<"Emprendimiento"> | string
    producto_foto?: IntFilter<"Emprendimiento"> | number
    producto?: StringFilter<"Emprendimiento"> | string
    rela_emp_prodfoto?: XOR<Productos_fotoScalarRelationFilter, Productos_fotoWhereInput>
    rela_produ_emp?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
    usuario?: UsuarioListRelationFilter
    marketing_emprendimiento?: Marketing_emprendimientoListRelationFilter
    emprendimiento_producto?: Emprendimiento_productoListRelationFilter
    usuario_emprendimiento?: Usuario_EmprendimientoListRelationFilter
  }, "typo">

  export type EmprendimientoOrderByWithAggregationInput = {
    typo?: SortOrder
    descripcion?: SortOrder
    producto_foto?: SortOrder
    producto?: SortOrder
    _count?: EmprendimientoCountOrderByAggregateInput
    _avg?: EmprendimientoAvgOrderByAggregateInput
    _max?: EmprendimientoMaxOrderByAggregateInput
    _min?: EmprendimientoMinOrderByAggregateInput
    _sum?: EmprendimientoSumOrderByAggregateInput
  }

  export type EmprendimientoScalarWhereWithAggregatesInput = {
    AND?: EmprendimientoScalarWhereWithAggregatesInput | EmprendimientoScalarWhereWithAggregatesInput[]
    OR?: EmprendimientoScalarWhereWithAggregatesInput[]
    NOT?: EmprendimientoScalarWhereWithAggregatesInput | EmprendimientoScalarWhereWithAggregatesInput[]
    typo?: StringWithAggregatesFilter<"Emprendimiento"> | string
    descripcion?: StringWithAggregatesFilter<"Emprendimiento"> | string
    producto_foto?: IntWithAggregatesFilter<"Emprendimiento"> | number
    producto?: StringWithAggregatesFilter<"Emprendimiento"> | string
  }

  export type Emprendimiento_productoWhereInput = {
    AND?: Emprendimiento_productoWhereInput | Emprendimiento_productoWhereInput[]
    OR?: Emprendimiento_productoWhereInput[]
    NOT?: Emprendimiento_productoWhereInput | Emprendimiento_productoWhereInput[]
    Id_emp_prod?: IntFilter<"Emprendimiento_producto"> | number
    costo?: FloatFilter<"Emprendimiento_producto"> | number
    stock?: IntFilter<"Emprendimiento_producto"> | number
    emp_prod?: StringFilter<"Emprendimiento_producto"> | string
    prod_emp?: StringFilter<"Emprendimiento_producto"> | string
    rela_emp_prod?: XOR<EmprendimientoScalarRelationFilter, EmprendimientoWhereInput>
    rela_prod_emp?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
  }

  export type Emprendimiento_productoOrderByWithRelationInput = {
    Id_emp_prod?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    emp_prod?: SortOrder
    prod_emp?: SortOrder
    rela_emp_prod?: EmprendimientoOrderByWithRelationInput
    rela_prod_emp?: ProductosOrderByWithRelationInput
  }

  export type Emprendimiento_productoWhereUniqueInput = Prisma.AtLeast<{
    Id_emp_prod?: number
    AND?: Emprendimiento_productoWhereInput | Emprendimiento_productoWhereInput[]
    OR?: Emprendimiento_productoWhereInput[]
    NOT?: Emprendimiento_productoWhereInput | Emprendimiento_productoWhereInput[]
    costo?: FloatFilter<"Emprendimiento_producto"> | number
    stock?: IntFilter<"Emprendimiento_producto"> | number
    emp_prod?: StringFilter<"Emprendimiento_producto"> | string
    prod_emp?: StringFilter<"Emprendimiento_producto"> | string
    rela_emp_prod?: XOR<EmprendimientoScalarRelationFilter, EmprendimientoWhereInput>
    rela_prod_emp?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
  }, "Id_emp_prod">

  export type Emprendimiento_productoOrderByWithAggregationInput = {
    Id_emp_prod?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    emp_prod?: SortOrder
    prod_emp?: SortOrder
    _count?: Emprendimiento_productoCountOrderByAggregateInput
    _avg?: Emprendimiento_productoAvgOrderByAggregateInput
    _max?: Emprendimiento_productoMaxOrderByAggregateInput
    _min?: Emprendimiento_productoMinOrderByAggregateInput
    _sum?: Emprendimiento_productoSumOrderByAggregateInput
  }

  export type Emprendimiento_productoScalarWhereWithAggregatesInput = {
    AND?: Emprendimiento_productoScalarWhereWithAggregatesInput | Emprendimiento_productoScalarWhereWithAggregatesInput[]
    OR?: Emprendimiento_productoScalarWhereWithAggregatesInput[]
    NOT?: Emprendimiento_productoScalarWhereWithAggregatesInput | Emprendimiento_productoScalarWhereWithAggregatesInput[]
    Id_emp_prod?: IntWithAggregatesFilter<"Emprendimiento_producto"> | number
    costo?: FloatWithAggregatesFilter<"Emprendimiento_producto"> | number
    stock?: IntWithAggregatesFilter<"Emprendimiento_producto"> | number
    emp_prod?: StringWithAggregatesFilter<"Emprendimiento_producto"> | string
    prod_emp?: StringWithAggregatesFilter<"Emprendimiento_producto"> | string
  }

  export type Colores_marcaWhereInput = {
    AND?: Colores_marcaWhereInput | Colores_marcaWhereInput[]
    OR?: Colores_marcaWhereInput[]
    NOT?: Colores_marcaWhereInput | Colores_marcaWhereInput[]
    nom_colores?: StringFilter<"Colores_marca"> | string
    foto?: StringFilter<"Colores_marca"> | string
    usuario_emprendimiento?: Usuario_EmprendimientoListRelationFilter
  }

  export type Colores_marcaOrderByWithRelationInput = {
    nom_colores?: SortOrder
    foto?: SortOrder
    usuario_emprendimiento?: Usuario_EmprendimientoOrderByRelationAggregateInput
  }

  export type Colores_marcaWhereUniqueInput = Prisma.AtLeast<{
    nom_colores?: string
    AND?: Colores_marcaWhereInput | Colores_marcaWhereInput[]
    OR?: Colores_marcaWhereInput[]
    NOT?: Colores_marcaWhereInput | Colores_marcaWhereInput[]
    foto?: StringFilter<"Colores_marca"> | string
    usuario_emprendimiento?: Usuario_EmprendimientoListRelationFilter
  }, "nom_colores">

  export type Colores_marcaOrderByWithAggregationInput = {
    nom_colores?: SortOrder
    foto?: SortOrder
    _count?: Colores_marcaCountOrderByAggregateInput
    _max?: Colores_marcaMaxOrderByAggregateInput
    _min?: Colores_marcaMinOrderByAggregateInput
  }

  export type Colores_marcaScalarWhereWithAggregatesInput = {
    AND?: Colores_marcaScalarWhereWithAggregatesInput | Colores_marcaScalarWhereWithAggregatesInput[]
    OR?: Colores_marcaScalarWhereWithAggregatesInput[]
    NOT?: Colores_marcaScalarWhereWithAggregatesInput | Colores_marcaScalarWhereWithAggregatesInput[]
    nom_colores?: StringWithAggregatesFilter<"Colores_marca"> | string
    foto?: StringWithAggregatesFilter<"Colores_marca"> | string
  }

  export type Marketing_emprendimientoWhereInput = {
    AND?: Marketing_emprendimientoWhereInput | Marketing_emprendimientoWhereInput[]
    OR?: Marketing_emprendimientoWhereInput[]
    NOT?: Marketing_emprendimientoWhereInput | Marketing_emprendimientoWhereInput[]
    Id_marketing_emprendimiento?: IntFilter<"Marketing_emprendimiento"> | number
    typo_emp?: StringFilter<"Marketing_emprendimiento"> | string
    Id_mark?: IntFilter<"Marketing_emprendimiento"> | number
    rela_emp_mark?: XOR<EmprendimientoScalarRelationFilter, EmprendimientoWhereInput>
    rela_mark_emp?: XOR<MarketingScalarRelationFilter, MarketingWhereInput>
  }

  export type Marketing_emprendimientoOrderByWithRelationInput = {
    Id_marketing_emprendimiento?: SortOrder
    typo_emp?: SortOrder
    Id_mark?: SortOrder
    rela_emp_mark?: EmprendimientoOrderByWithRelationInput
    rela_mark_emp?: MarketingOrderByWithRelationInput
  }

  export type Marketing_emprendimientoWhereUniqueInput = Prisma.AtLeast<{
    Id_marketing_emprendimiento?: number
    AND?: Marketing_emprendimientoWhereInput | Marketing_emprendimientoWhereInput[]
    OR?: Marketing_emprendimientoWhereInput[]
    NOT?: Marketing_emprendimientoWhereInput | Marketing_emprendimientoWhereInput[]
    typo_emp?: StringFilter<"Marketing_emprendimiento"> | string
    Id_mark?: IntFilter<"Marketing_emprendimiento"> | number
    rela_emp_mark?: XOR<EmprendimientoScalarRelationFilter, EmprendimientoWhereInput>
    rela_mark_emp?: XOR<MarketingScalarRelationFilter, MarketingWhereInput>
  }, "Id_marketing_emprendimiento">

  export type Marketing_emprendimientoOrderByWithAggregationInput = {
    Id_marketing_emprendimiento?: SortOrder
    typo_emp?: SortOrder
    Id_mark?: SortOrder
    _count?: Marketing_emprendimientoCountOrderByAggregateInput
    _avg?: Marketing_emprendimientoAvgOrderByAggregateInput
    _max?: Marketing_emprendimientoMaxOrderByAggregateInput
    _min?: Marketing_emprendimientoMinOrderByAggregateInput
    _sum?: Marketing_emprendimientoSumOrderByAggregateInput
  }

  export type Marketing_emprendimientoScalarWhereWithAggregatesInput = {
    AND?: Marketing_emprendimientoScalarWhereWithAggregatesInput | Marketing_emprendimientoScalarWhereWithAggregatesInput[]
    OR?: Marketing_emprendimientoScalarWhereWithAggregatesInput[]
    NOT?: Marketing_emprendimientoScalarWhereWithAggregatesInput | Marketing_emprendimientoScalarWhereWithAggregatesInput[]
    Id_marketing_emprendimiento?: IntWithAggregatesFilter<"Marketing_emprendimiento"> | number
    typo_emp?: StringWithAggregatesFilter<"Marketing_emprendimiento"> | string
    Id_mark?: IntWithAggregatesFilter<"Marketing_emprendimiento"> | number
  }

  export type MarketingWhereInput = {
    AND?: MarketingWhereInput | MarketingWhereInput[]
    OR?: MarketingWhereInput[]
    NOT?: MarketingWhereInput | MarketingWhereInput[]
    Id_marketing?: IntFilter<"Marketing"> | number
    publicacion?: StringFilter<"Marketing"> | string
    rela_publi_mark?: XOR<PublicacionesScalarRelationFilter, PublicacionesWhereInput>
    marketing_emprendimiento?: Marketing_emprendimientoListRelationFilter
  }

  export type MarketingOrderByWithRelationInput = {
    Id_marketing?: SortOrder
    publicacion?: SortOrder
    rela_publi_mark?: PublicacionesOrderByWithRelationInput
    marketing_emprendimiento?: Marketing_emprendimientoOrderByRelationAggregateInput
  }

  export type MarketingWhereUniqueInput = Prisma.AtLeast<{
    Id_marketing?: number
    AND?: MarketingWhereInput | MarketingWhereInput[]
    OR?: MarketingWhereInput[]
    NOT?: MarketingWhereInput | MarketingWhereInput[]
    publicacion?: StringFilter<"Marketing"> | string
    rela_publi_mark?: XOR<PublicacionesScalarRelationFilter, PublicacionesWhereInput>
    marketing_emprendimiento?: Marketing_emprendimientoListRelationFilter
  }, "Id_marketing">

  export type MarketingOrderByWithAggregationInput = {
    Id_marketing?: SortOrder
    publicacion?: SortOrder
    _count?: MarketingCountOrderByAggregateInput
    _avg?: MarketingAvgOrderByAggregateInput
    _max?: MarketingMaxOrderByAggregateInput
    _min?: MarketingMinOrderByAggregateInput
    _sum?: MarketingSumOrderByAggregateInput
  }

  export type MarketingScalarWhereWithAggregatesInput = {
    AND?: MarketingScalarWhereWithAggregatesInput | MarketingScalarWhereWithAggregatesInput[]
    OR?: MarketingScalarWhereWithAggregatesInput[]
    NOT?: MarketingScalarWhereWithAggregatesInput | MarketingScalarWhereWithAggregatesInput[]
    Id_marketing?: IntWithAggregatesFilter<"Marketing"> | number
    publicacion?: StringWithAggregatesFilter<"Marketing"> | string
  }

  export type PublicacionesWhereInput = {
    AND?: PublicacionesWhereInput | PublicacionesWhereInput[]
    OR?: PublicacionesWhereInput[]
    NOT?: PublicacionesWhereInput | PublicacionesWhereInput[]
    link_plantilla?: StringFilter<"Publicaciones"> | string
    desc?: StringFilter<"Publicaciones"> | string
    nombre?: StringFilter<"Publicaciones"> | string
    foto?: IntFilter<"Publicaciones"> | number
    rela_foto_publi?: XOR<Publicaciones_fotoScalarRelationFilter, Publicaciones_fotoWhereInput>
    marketing?: MarketingListRelationFilter
  }

  export type PublicacionesOrderByWithRelationInput = {
    link_plantilla?: SortOrder
    desc?: SortOrder
    nombre?: SortOrder
    foto?: SortOrder
    rela_foto_publi?: Publicaciones_fotoOrderByWithRelationInput
    marketing?: MarketingOrderByRelationAggregateInput
  }

  export type PublicacionesWhereUniqueInput = Prisma.AtLeast<{
    link_plantilla?: string
    AND?: PublicacionesWhereInput | PublicacionesWhereInput[]
    OR?: PublicacionesWhereInput[]
    NOT?: PublicacionesWhereInput | PublicacionesWhereInput[]
    desc?: StringFilter<"Publicaciones"> | string
    nombre?: StringFilter<"Publicaciones"> | string
    foto?: IntFilter<"Publicaciones"> | number
    rela_foto_publi?: XOR<Publicaciones_fotoScalarRelationFilter, Publicaciones_fotoWhereInput>
    marketing?: MarketingListRelationFilter
  }, "link_plantilla">

  export type PublicacionesOrderByWithAggregationInput = {
    link_plantilla?: SortOrder
    desc?: SortOrder
    nombre?: SortOrder
    foto?: SortOrder
    _count?: PublicacionesCountOrderByAggregateInput
    _avg?: PublicacionesAvgOrderByAggregateInput
    _max?: PublicacionesMaxOrderByAggregateInput
    _min?: PublicacionesMinOrderByAggregateInput
    _sum?: PublicacionesSumOrderByAggregateInput
  }

  export type PublicacionesScalarWhereWithAggregatesInput = {
    AND?: PublicacionesScalarWhereWithAggregatesInput | PublicacionesScalarWhereWithAggregatesInput[]
    OR?: PublicacionesScalarWhereWithAggregatesInput[]
    NOT?: PublicacionesScalarWhereWithAggregatesInput | PublicacionesScalarWhereWithAggregatesInput[]
    link_plantilla?: StringWithAggregatesFilter<"Publicaciones"> | string
    desc?: StringWithAggregatesFilter<"Publicaciones"> | string
    nombre?: StringWithAggregatesFilter<"Publicaciones"> | string
    foto?: IntWithAggregatesFilter<"Publicaciones"> | number
  }

  export type Publicaciones_fotoWhereInput = {
    AND?: Publicaciones_fotoWhereInput | Publicaciones_fotoWhereInput[]
    OR?: Publicaciones_fotoWhereInput[]
    NOT?: Publicaciones_fotoWhereInput | Publicaciones_fotoWhereInput[]
    Id_publicaciones_foto?: IntFilter<"Publicaciones_foto"> | number
    foto?: StringFilter<"Publicaciones_foto"> | string
    publicaciones?: PublicacionesListRelationFilter
  }

  export type Publicaciones_fotoOrderByWithRelationInput = {
    Id_publicaciones_foto?: SortOrder
    foto?: SortOrder
    publicaciones?: PublicacionesOrderByRelationAggregateInput
  }

  export type Publicaciones_fotoWhereUniqueInput = Prisma.AtLeast<{
    Id_publicaciones_foto?: number
    AND?: Publicaciones_fotoWhereInput | Publicaciones_fotoWhereInput[]
    OR?: Publicaciones_fotoWhereInput[]
    NOT?: Publicaciones_fotoWhereInput | Publicaciones_fotoWhereInput[]
    foto?: StringFilter<"Publicaciones_foto"> | string
    publicaciones?: PublicacionesListRelationFilter
  }, "Id_publicaciones_foto">

  export type Publicaciones_fotoOrderByWithAggregationInput = {
    Id_publicaciones_foto?: SortOrder
    foto?: SortOrder
    _count?: Publicaciones_fotoCountOrderByAggregateInput
    _avg?: Publicaciones_fotoAvgOrderByAggregateInput
    _max?: Publicaciones_fotoMaxOrderByAggregateInput
    _min?: Publicaciones_fotoMinOrderByAggregateInput
    _sum?: Publicaciones_fotoSumOrderByAggregateInput
  }

  export type Publicaciones_fotoScalarWhereWithAggregatesInput = {
    AND?: Publicaciones_fotoScalarWhereWithAggregatesInput | Publicaciones_fotoScalarWhereWithAggregatesInput[]
    OR?: Publicaciones_fotoScalarWhereWithAggregatesInput[]
    NOT?: Publicaciones_fotoScalarWhereWithAggregatesInput | Publicaciones_fotoScalarWhereWithAggregatesInput[]
    Id_publicaciones_foto?: IntWithAggregatesFilter<"Publicaciones_foto"> | number
    foto?: StringWithAggregatesFilter<"Publicaciones_foto"> | string
  }

  export type ProductosWhereInput = {
    AND?: ProductosWhereInput | ProductosWhereInput[]
    OR?: ProductosWhereInput[]
    NOT?: ProductosWhereInput | ProductosWhereInput[]
    nombre_producto?: StringFilter<"Productos"> | string
    pasos?: StringFilter<"Productos"> | string
    descripcion?: StringFilter<"Productos"> | string
    foto?: IntFilter<"Productos"> | number
    rela_foto_produ?: XOR<Productos_fotoScalarRelationFilter, Productos_fotoWhereInput>
    emprendimiento?: EmprendimientoListRelationFilter
    materiales_producto?: Materiales_productoListRelationFilter
    emprendimiento_productos?: Emprendimiento_productoListRelationFilter
  }

  export type ProductosOrderByWithRelationInput = {
    nombre_producto?: SortOrder
    pasos?: SortOrder
    descripcion?: SortOrder
    foto?: SortOrder
    rela_foto_produ?: Productos_fotoOrderByWithRelationInput
    emprendimiento?: EmprendimientoOrderByRelationAggregateInput
    materiales_producto?: Materiales_productoOrderByRelationAggregateInput
    emprendimiento_productos?: Emprendimiento_productoOrderByRelationAggregateInput
  }

  export type ProductosWhereUniqueInput = Prisma.AtLeast<{
    nombre_producto?: string
    AND?: ProductosWhereInput | ProductosWhereInput[]
    OR?: ProductosWhereInput[]
    NOT?: ProductosWhereInput | ProductosWhereInput[]
    pasos?: StringFilter<"Productos"> | string
    descripcion?: StringFilter<"Productos"> | string
    foto?: IntFilter<"Productos"> | number
    rela_foto_produ?: XOR<Productos_fotoScalarRelationFilter, Productos_fotoWhereInput>
    emprendimiento?: EmprendimientoListRelationFilter
    materiales_producto?: Materiales_productoListRelationFilter
    emprendimiento_productos?: Emprendimiento_productoListRelationFilter
  }, "nombre_producto">

  export type ProductosOrderByWithAggregationInput = {
    nombre_producto?: SortOrder
    pasos?: SortOrder
    descripcion?: SortOrder
    foto?: SortOrder
    _count?: ProductosCountOrderByAggregateInput
    _avg?: ProductosAvgOrderByAggregateInput
    _max?: ProductosMaxOrderByAggregateInput
    _min?: ProductosMinOrderByAggregateInput
    _sum?: ProductosSumOrderByAggregateInput
  }

  export type ProductosScalarWhereWithAggregatesInput = {
    AND?: ProductosScalarWhereWithAggregatesInput | ProductosScalarWhereWithAggregatesInput[]
    OR?: ProductosScalarWhereWithAggregatesInput[]
    NOT?: ProductosScalarWhereWithAggregatesInput | ProductosScalarWhereWithAggregatesInput[]
    nombre_producto?: StringWithAggregatesFilter<"Productos"> | string
    pasos?: StringWithAggregatesFilter<"Productos"> | string
    descripcion?: StringWithAggregatesFilter<"Productos"> | string
    foto?: IntWithAggregatesFilter<"Productos"> | number
  }

  export type Productos_fotoWhereInput = {
    AND?: Productos_fotoWhereInput | Productos_fotoWhereInput[]
    OR?: Productos_fotoWhereInput[]
    NOT?: Productos_fotoWhereInput | Productos_fotoWhereInput[]
    Id_productos_foto?: IntFilter<"Productos_foto"> | number
    foto?: StringFilter<"Productos_foto"> | string
    productos?: ProductosListRelationFilter
    emprendimiento_productofoto?: EmprendimientoListRelationFilter
  }

  export type Productos_fotoOrderByWithRelationInput = {
    Id_productos_foto?: SortOrder
    foto?: SortOrder
    productos?: ProductosOrderByRelationAggregateInput
    emprendimiento_productofoto?: EmprendimientoOrderByRelationAggregateInput
  }

  export type Productos_fotoWhereUniqueInput = Prisma.AtLeast<{
    Id_productos_foto?: number
    AND?: Productos_fotoWhereInput | Productos_fotoWhereInput[]
    OR?: Productos_fotoWhereInput[]
    NOT?: Productos_fotoWhereInput | Productos_fotoWhereInput[]
    foto?: StringFilter<"Productos_foto"> | string
    productos?: ProductosListRelationFilter
    emprendimiento_productofoto?: EmprendimientoListRelationFilter
  }, "Id_productos_foto">

  export type Productos_fotoOrderByWithAggregationInput = {
    Id_productos_foto?: SortOrder
    foto?: SortOrder
    _count?: Productos_fotoCountOrderByAggregateInput
    _avg?: Productos_fotoAvgOrderByAggregateInput
    _max?: Productos_fotoMaxOrderByAggregateInput
    _min?: Productos_fotoMinOrderByAggregateInput
    _sum?: Productos_fotoSumOrderByAggregateInput
  }

  export type Productos_fotoScalarWhereWithAggregatesInput = {
    AND?: Productos_fotoScalarWhereWithAggregatesInput | Productos_fotoScalarWhereWithAggregatesInput[]
    OR?: Productos_fotoScalarWhereWithAggregatesInput[]
    NOT?: Productos_fotoScalarWhereWithAggregatesInput | Productos_fotoScalarWhereWithAggregatesInput[]
    Id_productos_foto?: IntWithAggregatesFilter<"Productos_foto"> | number
    foto?: StringWithAggregatesFilter<"Productos_foto"> | string
  }

  export type Materiales_productoWhereInput = {
    AND?: Materiales_productoWhereInput | Materiales_productoWhereInput[]
    OR?: Materiales_productoWhereInput[]
    NOT?: Materiales_productoWhereInput | Materiales_productoWhereInput[]
    Id_materiales_producto?: IntFilter<"Materiales_producto"> | number
    costo?: FloatFilter<"Materiales_producto"> | number
    stock?: IntFilter<"Materiales_producto"> | number
    nom_prod?: StringFilter<"Materiales_producto"> | string
    nom_mat?: StringFilter<"Materiales_producto"> | string
    rela_prod_mate?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
    rela_mate_produ?: XOR<MaterialesScalarRelationFilter, MaterialesWhereInput>
  }

  export type Materiales_productoOrderByWithRelationInput = {
    Id_materiales_producto?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    nom_prod?: SortOrder
    nom_mat?: SortOrder
    rela_prod_mate?: ProductosOrderByWithRelationInput
    rela_mate_produ?: MaterialesOrderByWithRelationInput
  }

  export type Materiales_productoWhereUniqueInput = Prisma.AtLeast<{
    Id_materiales_producto?: number
    AND?: Materiales_productoWhereInput | Materiales_productoWhereInput[]
    OR?: Materiales_productoWhereInput[]
    NOT?: Materiales_productoWhereInput | Materiales_productoWhereInput[]
    costo?: FloatFilter<"Materiales_producto"> | number
    stock?: IntFilter<"Materiales_producto"> | number
    nom_prod?: StringFilter<"Materiales_producto"> | string
    nom_mat?: StringFilter<"Materiales_producto"> | string
    rela_prod_mate?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
    rela_mate_produ?: XOR<MaterialesScalarRelationFilter, MaterialesWhereInput>
  }, "Id_materiales_producto">

  export type Materiales_productoOrderByWithAggregationInput = {
    Id_materiales_producto?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    nom_prod?: SortOrder
    nom_mat?: SortOrder
    _count?: Materiales_productoCountOrderByAggregateInput
    _avg?: Materiales_productoAvgOrderByAggregateInput
    _max?: Materiales_productoMaxOrderByAggregateInput
    _min?: Materiales_productoMinOrderByAggregateInput
    _sum?: Materiales_productoSumOrderByAggregateInput
  }

  export type Materiales_productoScalarWhereWithAggregatesInput = {
    AND?: Materiales_productoScalarWhereWithAggregatesInput | Materiales_productoScalarWhereWithAggregatesInput[]
    OR?: Materiales_productoScalarWhereWithAggregatesInput[]
    NOT?: Materiales_productoScalarWhereWithAggregatesInput | Materiales_productoScalarWhereWithAggregatesInput[]
    Id_materiales_producto?: IntWithAggregatesFilter<"Materiales_producto"> | number
    costo?: FloatWithAggregatesFilter<"Materiales_producto"> | number
    stock?: IntWithAggregatesFilter<"Materiales_producto"> | number
    nom_prod?: StringWithAggregatesFilter<"Materiales_producto"> | string
    nom_mat?: StringWithAggregatesFilter<"Materiales_producto"> | string
  }

  export type MaterialesWhereInput = {
    AND?: MaterialesWhereInput | MaterialesWhereInput[]
    OR?: MaterialesWhereInput[]
    NOT?: MaterialesWhereInput | MaterialesWhereInput[]
    nombre?: StringFilter<"Materiales"> | string
    foto_materiales?: IntFilter<"Materiales"> | number
    rela_foto_mate?: XOR<Materiales_fotoScalarRelationFilter, Materiales_fotoWhereInput>
    materiales_producto?: Materiales_productoListRelationFilter
  }

  export type MaterialesOrderByWithRelationInput = {
    nombre?: SortOrder
    foto_materiales?: SortOrder
    rela_foto_mate?: Materiales_fotoOrderByWithRelationInput
    materiales_producto?: Materiales_productoOrderByRelationAggregateInput
  }

  export type MaterialesWhereUniqueInput = Prisma.AtLeast<{
    nombre?: string
    AND?: MaterialesWhereInput | MaterialesWhereInput[]
    OR?: MaterialesWhereInput[]
    NOT?: MaterialesWhereInput | MaterialesWhereInput[]
    foto_materiales?: IntFilter<"Materiales"> | number
    rela_foto_mate?: XOR<Materiales_fotoScalarRelationFilter, Materiales_fotoWhereInput>
    materiales_producto?: Materiales_productoListRelationFilter
  }, "nombre">

  export type MaterialesOrderByWithAggregationInput = {
    nombre?: SortOrder
    foto_materiales?: SortOrder
    _count?: MaterialesCountOrderByAggregateInput
    _avg?: MaterialesAvgOrderByAggregateInput
    _max?: MaterialesMaxOrderByAggregateInput
    _min?: MaterialesMinOrderByAggregateInput
    _sum?: MaterialesSumOrderByAggregateInput
  }

  export type MaterialesScalarWhereWithAggregatesInput = {
    AND?: MaterialesScalarWhereWithAggregatesInput | MaterialesScalarWhereWithAggregatesInput[]
    OR?: MaterialesScalarWhereWithAggregatesInput[]
    NOT?: MaterialesScalarWhereWithAggregatesInput | MaterialesScalarWhereWithAggregatesInput[]
    nombre?: StringWithAggregatesFilter<"Materiales"> | string
    foto_materiales?: IntWithAggregatesFilter<"Materiales"> | number
  }

  export type Materiales_fotoWhereInput = {
    AND?: Materiales_fotoWhereInput | Materiales_fotoWhereInput[]
    OR?: Materiales_fotoWhereInput[]
    NOT?: Materiales_fotoWhereInput | Materiales_fotoWhereInput[]
    Id_materiales_foto?: IntFilter<"Materiales_foto"> | number
    foto?: StringFilter<"Materiales_foto"> | string
    materiales?: MaterialesListRelationFilter
  }

  export type Materiales_fotoOrderByWithRelationInput = {
    Id_materiales_foto?: SortOrder
    foto?: SortOrder
    materiales?: MaterialesOrderByRelationAggregateInput
  }

  export type Materiales_fotoWhereUniqueInput = Prisma.AtLeast<{
    Id_materiales_foto?: number
    AND?: Materiales_fotoWhereInput | Materiales_fotoWhereInput[]
    OR?: Materiales_fotoWhereInput[]
    NOT?: Materiales_fotoWhereInput | Materiales_fotoWhereInput[]
    foto?: StringFilter<"Materiales_foto"> | string
    materiales?: MaterialesListRelationFilter
  }, "Id_materiales_foto">

  export type Materiales_fotoOrderByWithAggregationInput = {
    Id_materiales_foto?: SortOrder
    foto?: SortOrder
    _count?: Materiales_fotoCountOrderByAggregateInput
    _avg?: Materiales_fotoAvgOrderByAggregateInput
    _max?: Materiales_fotoMaxOrderByAggregateInput
    _min?: Materiales_fotoMinOrderByAggregateInput
    _sum?: Materiales_fotoSumOrderByAggregateInput
  }

  export type Materiales_fotoScalarWhereWithAggregatesInput = {
    AND?: Materiales_fotoScalarWhereWithAggregatesInput | Materiales_fotoScalarWhereWithAggregatesInput[]
    OR?: Materiales_fotoScalarWhereWithAggregatesInput[]
    NOT?: Materiales_fotoScalarWhereWithAggregatesInput | Materiales_fotoScalarWhereWithAggregatesInput[]
    Id_materiales_foto?: IntWithAggregatesFilter<"Materiales_foto"> | number
    foto?: StringWithAggregatesFilter<"Materiales_foto"> | string
  }

  export type UsuarioCreateInput = {
    email: string
    contra: string
    nombre: string
    foto: Foto_UsuarioCreateNestedOneWithoutUsuariosInput
    typo_emprendimiento: EmprendimientoCreateNestedOneWithoutUsuarioInput
    Id_contactos: ContactosCreateNestedOneWithoutUsuarioInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_usu_usuempInput
  }

  export type UsuarioUncheckedCreateInput = {
    email: string
    contra: string
    nombre: string
    foto_perfil: number
    typo_id: string
    contacto: number
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_usu_usuempInput
  }

  export type UsuarioUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto?: Foto_UsuarioUpdateOneRequiredWithoutUsuariosNestedInput
    typo_emprendimiento?: EmprendimientoUpdateOneRequiredWithoutUsuarioNestedInput
    Id_contactos?: ContactosUpdateOneRequiredWithoutUsuarioNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_usu_usuempNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto_perfil?: IntFieldUpdateOperationsInput | number
    typo_id?: StringFieldUpdateOperationsInput | string
    contacto?: IntFieldUpdateOperationsInput | number
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_usu_usuempNestedInput
  }

  export type UsuarioCreateManyInput = {
    email: string
    contra: string
    nombre: string
    foto_perfil: number
    typo_id: string
    contacto: number
  }

  export type UsuarioUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto_perfil?: IntFieldUpdateOperationsInput | number
    typo_id?: StringFieldUpdateOperationsInput | string
    contacto?: IntFieldUpdateOperationsInput | number
  }

  export type Usuario_EmprendimientoCreateInput = {
    rela_colo_usuemp: Colores_marcaCreateNestedOneWithoutUsuario_emprendimientoInput
    rela_usu_usuemp: UsuarioCreateNestedOneWithoutUsuario_emprendimientoInput
    rela_emp_usuemp: EmprendimientoCreateNestedOneWithoutUsuario_emprendimientoInput
  }

  export type Usuario_EmprendimientoUncheckedCreateInput = {
    Id_usu_emp?: number
    nom_color: string
    email: string
    typo: string
  }

  export type Usuario_EmprendimientoUpdateInput = {
    rela_colo_usuemp?: Colores_marcaUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput
    rela_usu_usuemp?: UsuarioUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput
    rela_emp_usuemp?: EmprendimientoUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput
  }

  export type Usuario_EmprendimientoUncheckedUpdateInput = {
    Id_usu_emp?: IntFieldUpdateOperationsInput | number
    nom_color?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    typo?: StringFieldUpdateOperationsInput | string
  }

  export type Usuario_EmprendimientoCreateManyInput = {
    Id_usu_emp?: number
    nom_color: string
    email: string
    typo: string
  }

  export type Usuario_EmprendimientoUpdateManyMutationInput = {

  }

  export type Usuario_EmprendimientoUncheckedUpdateManyInput = {
    Id_usu_emp?: IntFieldUpdateOperationsInput | number
    nom_color?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    typo?: StringFieldUpdateOperationsInput | string
  }

  export type Foto_UsuarioCreateInput = {
    foto_perfil: string
    usuarios?: UsuarioCreateNestedManyWithoutFotoInput
    foto_contacto?: ContactosCreateNestedManyWithoutFotoInput
  }

  export type Foto_UsuarioUncheckedCreateInput = {
    Id_fotousu?: number
    foto_perfil: string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutFotoInput
    foto_contacto?: ContactosUncheckedCreateNestedManyWithoutFotoInput
  }

  export type Foto_UsuarioUpdateInput = {
    foto_perfil?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioUpdateManyWithoutFotoNestedInput
    foto_contacto?: ContactosUpdateManyWithoutFotoNestedInput
  }

  export type Foto_UsuarioUncheckedUpdateInput = {
    Id_fotousu?: IntFieldUpdateOperationsInput | number
    foto_perfil?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutFotoNestedInput
    foto_contacto?: ContactosUncheckedUpdateManyWithoutFotoNestedInput
  }

  export type Foto_UsuarioCreateManyInput = {
    Id_fotousu?: number
    foto_perfil: string
  }

  export type Foto_UsuarioUpdateManyMutationInput = {
    foto_perfil?: StringFieldUpdateOperationsInput | string
  }

  export type Foto_UsuarioUncheckedUpdateManyInput = {
    Id_fotousu?: IntFieldUpdateOperationsInput | number
    foto_perfil?: StringFieldUpdateOperationsInput | string
  }

  export type ContactosCreateInput = {
    telefono: number
    nombre: string
    redes_soc: string
    notas_perz: string
    email_contactos: string
    foto: Foto_UsuarioCreateNestedOneWithoutFoto_contactoInput
    usuario?: UsuarioCreateNestedManyWithoutId_contactosInput
  }

  export type ContactosUncheckedCreateInput = {
    Id_contactos?: number
    telefono: number
    nombre: string
    redes_soc: string
    notas_perz: string
    email_contactos: string
    foto_contacto: number
    usuario?: UsuarioUncheckedCreateNestedManyWithoutId_contactosInput
  }

  export type ContactosUpdateInput = {
    telefono?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    redes_soc?: StringFieldUpdateOperationsInput | string
    notas_perz?: StringFieldUpdateOperationsInput | string
    email_contactos?: StringFieldUpdateOperationsInput | string
    foto?: Foto_UsuarioUpdateOneRequiredWithoutFoto_contactoNestedInput
    usuario?: UsuarioUpdateManyWithoutId_contactosNestedInput
  }

  export type ContactosUncheckedUpdateInput = {
    Id_contactos?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    redes_soc?: StringFieldUpdateOperationsInput | string
    notas_perz?: StringFieldUpdateOperationsInput | string
    email_contactos?: StringFieldUpdateOperationsInput | string
    foto_contacto?: IntFieldUpdateOperationsInput | number
    usuario?: UsuarioUncheckedUpdateManyWithoutId_contactosNestedInput
  }

  export type ContactosCreateManyInput = {
    Id_contactos?: number
    telefono: number
    nombre: string
    redes_soc: string
    notas_perz: string
    email_contactos: string
    foto_contacto: number
  }

  export type ContactosUpdateManyMutationInput = {
    telefono?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    redes_soc?: StringFieldUpdateOperationsInput | string
    notas_perz?: StringFieldUpdateOperationsInput | string
    email_contactos?: StringFieldUpdateOperationsInput | string
  }

  export type ContactosUncheckedUpdateManyInput = {
    Id_contactos?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    redes_soc?: StringFieldUpdateOperationsInput | string
    notas_perz?: StringFieldUpdateOperationsInput | string
    email_contactos?: StringFieldUpdateOperationsInput | string
    foto_contacto?: IntFieldUpdateOperationsInput | number
  }

  export type EmprendimientoCreateInput = {
    typo: string
    descripcion: string
    rela_emp_prodfoto: Productos_fotoCreateNestedOneWithoutEmprendimiento_productofotoInput
    rela_produ_emp: ProductosCreateNestedOneWithoutEmprendimientoInput
    usuario?: UsuarioCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoUncheckedCreateInput = {
    typo: string
    descripcion: string
    producto_foto: number
    producto: string
    usuario?: UsuarioUncheckedCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoUpdateInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_emp_prodfoto?: Productos_fotoUpdateOneRequiredWithoutEmprendimiento_productofotoNestedInput
    rela_produ_emp?: ProductosUpdateOneRequiredWithoutEmprendimientoNestedInput
    usuario?: UsuarioUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type EmprendimientoUncheckedUpdateInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto_foto?: IntFieldUpdateOperationsInput | number
    producto?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUncheckedUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type EmprendimientoCreateManyInput = {
    typo: string
    descripcion: string
    producto_foto: number
    producto: string
  }

  export type EmprendimientoUpdateManyMutationInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type EmprendimientoUncheckedUpdateManyInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto_foto?: IntFieldUpdateOperationsInput | number
    producto?: StringFieldUpdateOperationsInput | string
  }

  export type Emprendimiento_productoCreateInput = {
    costo: number
    stock: number
    rela_emp_prod: EmprendimientoCreateNestedOneWithoutEmprendimiento_productoInput
    rela_prod_emp: ProductosCreateNestedOneWithoutEmprendimiento_productosInput
  }

  export type Emprendimiento_productoUncheckedCreateInput = {
    Id_emp_prod?: number
    costo: number
    stock: number
    emp_prod: string
    prod_emp: string
  }

  export type Emprendimiento_productoUpdateInput = {
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    rela_emp_prod?: EmprendimientoUpdateOneRequiredWithoutEmprendimiento_productoNestedInput
    rela_prod_emp?: ProductosUpdateOneRequiredWithoutEmprendimiento_productosNestedInput
  }

  export type Emprendimiento_productoUncheckedUpdateInput = {
    Id_emp_prod?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    emp_prod?: StringFieldUpdateOperationsInput | string
    prod_emp?: StringFieldUpdateOperationsInput | string
  }

  export type Emprendimiento_productoCreateManyInput = {
    Id_emp_prod?: number
    costo: number
    stock: number
    emp_prod: string
    prod_emp: string
  }

  export type Emprendimiento_productoUpdateManyMutationInput = {
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
  }

  export type Emprendimiento_productoUncheckedUpdateManyInput = {
    Id_emp_prod?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    emp_prod?: StringFieldUpdateOperationsInput | string
    prod_emp?: StringFieldUpdateOperationsInput | string
  }

  export type Colores_marcaCreateInput = {
    nom_colores: string
    foto: string
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_colo_usuempInput
  }

  export type Colores_marcaUncheckedCreateInput = {
    nom_colores: string
    foto: string
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_colo_usuempInput
  }

  export type Colores_marcaUpdateInput = {
    nom_colores?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_colo_usuempNestedInput
  }

  export type Colores_marcaUncheckedUpdateInput = {
    nom_colores?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_colo_usuempNestedInput
  }

  export type Colores_marcaCreateManyInput = {
    nom_colores: string
    foto: string
  }

  export type Colores_marcaUpdateManyMutationInput = {
    nom_colores?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Colores_marcaUncheckedUpdateManyInput = {
    nom_colores?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Marketing_emprendimientoCreateInput = {
    rela_emp_mark: EmprendimientoCreateNestedOneWithoutMarketing_emprendimientoInput
    rela_mark_emp: MarketingCreateNestedOneWithoutMarketing_emprendimientoInput
  }

  export type Marketing_emprendimientoUncheckedCreateInput = {
    Id_marketing_emprendimiento?: number
    typo_emp: string
    Id_mark: number
  }

  export type Marketing_emprendimientoUpdateInput = {
    rela_emp_mark?: EmprendimientoUpdateOneRequiredWithoutMarketing_emprendimientoNestedInput
    rela_mark_emp?: MarketingUpdateOneRequiredWithoutMarketing_emprendimientoNestedInput
  }

  export type Marketing_emprendimientoUncheckedUpdateInput = {
    Id_marketing_emprendimiento?: IntFieldUpdateOperationsInput | number
    typo_emp?: StringFieldUpdateOperationsInput | string
    Id_mark?: IntFieldUpdateOperationsInput | number
  }

  export type Marketing_emprendimientoCreateManyInput = {
    Id_marketing_emprendimiento?: number
    typo_emp: string
    Id_mark: number
  }

  export type Marketing_emprendimientoUpdateManyMutationInput = {

  }

  export type Marketing_emprendimientoUncheckedUpdateManyInput = {
    Id_marketing_emprendimiento?: IntFieldUpdateOperationsInput | number
    typo_emp?: StringFieldUpdateOperationsInput | string
    Id_mark?: IntFieldUpdateOperationsInput | number
  }

  export type MarketingCreateInput = {
    rela_publi_mark: PublicacionesCreateNestedOneWithoutMarketingInput
    marketing_emprendimiento?: Marketing_emprendimientoCreateNestedManyWithoutRela_mark_empInput
  }

  export type MarketingUncheckedCreateInput = {
    Id_marketing?: number
    publicacion: string
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_mark_empInput
  }

  export type MarketingUpdateInput = {
    rela_publi_mark?: PublicacionesUpdateOneRequiredWithoutMarketingNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUpdateManyWithoutRela_mark_empNestedInput
  }

  export type MarketingUncheckedUpdateInput = {
    Id_marketing?: IntFieldUpdateOperationsInput | number
    publicacion?: StringFieldUpdateOperationsInput | string
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedUpdateManyWithoutRela_mark_empNestedInput
  }

  export type MarketingCreateManyInput = {
    Id_marketing?: number
    publicacion: string
  }

  export type MarketingUpdateManyMutationInput = {

  }

  export type MarketingUncheckedUpdateManyInput = {
    Id_marketing?: IntFieldUpdateOperationsInput | number
    publicacion?: StringFieldUpdateOperationsInput | string
  }

  export type PublicacionesCreateInput = {
    link_plantilla: string
    desc: string
    nombre: string
    rela_foto_publi: Publicaciones_fotoCreateNestedOneWithoutPublicacionesInput
    marketing?: MarketingCreateNestedManyWithoutRela_publi_markInput
  }

  export type PublicacionesUncheckedCreateInput = {
    link_plantilla: string
    desc: string
    nombre: string
    foto: number
    marketing?: MarketingUncheckedCreateNestedManyWithoutRela_publi_markInput
  }

  export type PublicacionesUpdateInput = {
    link_plantilla?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    rela_foto_publi?: Publicaciones_fotoUpdateOneRequiredWithoutPublicacionesNestedInput
    marketing?: MarketingUpdateManyWithoutRela_publi_markNestedInput
  }

  export type PublicacionesUncheckedUpdateInput = {
    link_plantilla?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto?: IntFieldUpdateOperationsInput | number
    marketing?: MarketingUncheckedUpdateManyWithoutRela_publi_markNestedInput
  }

  export type PublicacionesCreateManyInput = {
    link_plantilla: string
    desc: string
    nombre: string
    foto: number
  }

  export type PublicacionesUpdateManyMutationInput = {
    link_plantilla?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type PublicacionesUncheckedUpdateManyInput = {
    link_plantilla?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto?: IntFieldUpdateOperationsInput | number
  }

  export type Publicaciones_fotoCreateInput = {
    foto: string
    publicaciones?: PublicacionesCreateNestedManyWithoutRela_foto_publiInput
  }

  export type Publicaciones_fotoUncheckedCreateInput = {
    Id_publicaciones_foto?: number
    foto: string
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutRela_foto_publiInput
  }

  export type Publicaciones_fotoUpdateInput = {
    foto?: StringFieldUpdateOperationsInput | string
    publicaciones?: PublicacionesUpdateManyWithoutRela_foto_publiNestedInput
  }

  export type Publicaciones_fotoUncheckedUpdateInput = {
    Id_publicaciones_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutRela_foto_publiNestedInput
  }

  export type Publicaciones_fotoCreateManyInput = {
    Id_publicaciones_foto?: number
    foto: string
  }

  export type Publicaciones_fotoUpdateManyMutationInput = {
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Publicaciones_fotoUncheckedUpdateManyInput = {
    Id_publicaciones_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type ProductosCreateInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    rela_foto_produ: Productos_fotoCreateNestedOneWithoutProductosInput
    emprendimiento?: EmprendimientoCreateNestedManyWithoutRela_produ_empInput
    materiales_producto?: Materiales_productoCreateNestedManyWithoutRela_prod_mateInput
    emprendimiento_productos?: Emprendimiento_productoCreateNestedManyWithoutRela_prod_empInput
  }

  export type ProductosUncheckedCreateInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    foto: number
    emprendimiento?: EmprendimientoUncheckedCreateNestedManyWithoutRela_produ_empInput
    materiales_producto?: Materiales_productoUncheckedCreateNestedManyWithoutRela_prod_mateInput
    emprendimiento_productos?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_prod_empInput
  }

  export type ProductosUpdateInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_foto_produ?: Productos_fotoUpdateOneRequiredWithoutProductosNestedInput
    emprendimiento?: EmprendimientoUpdateManyWithoutRela_produ_empNestedInput
    materiales_producto?: Materiales_productoUpdateManyWithoutRela_prod_mateNestedInput
    emprendimiento_productos?: Emprendimiento_productoUpdateManyWithoutRela_prod_empNestedInput
  }

  export type ProductosUncheckedUpdateInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    foto?: IntFieldUpdateOperationsInput | number
    emprendimiento?: EmprendimientoUncheckedUpdateManyWithoutRela_produ_empNestedInput
    materiales_producto?: Materiales_productoUncheckedUpdateManyWithoutRela_prod_mateNestedInput
    emprendimiento_productos?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_prod_empNestedInput
  }

  export type ProductosCreateManyInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    foto: number
  }

  export type ProductosUpdateManyMutationInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type ProductosUncheckedUpdateManyInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    foto?: IntFieldUpdateOperationsInput | number
  }

  export type Productos_fotoCreateInput = {
    foto: string
    productos?: ProductosCreateNestedManyWithoutRela_foto_produInput
    emprendimiento_productofoto?: EmprendimientoCreateNestedManyWithoutRela_emp_prodfotoInput
  }

  export type Productos_fotoUncheckedCreateInput = {
    Id_productos_foto?: number
    foto: string
    productos?: ProductosUncheckedCreateNestedManyWithoutRela_foto_produInput
    emprendimiento_productofoto?: EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_prodfotoInput
  }

  export type Productos_fotoUpdateInput = {
    foto?: StringFieldUpdateOperationsInput | string
    productos?: ProductosUpdateManyWithoutRela_foto_produNestedInput
    emprendimiento_productofoto?: EmprendimientoUpdateManyWithoutRela_emp_prodfotoNestedInput
  }

  export type Productos_fotoUncheckedUpdateInput = {
    Id_productos_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    productos?: ProductosUncheckedUpdateManyWithoutRela_foto_produNestedInput
    emprendimiento_productofoto?: EmprendimientoUncheckedUpdateManyWithoutRela_emp_prodfotoNestedInput
  }

  export type Productos_fotoCreateManyInput = {
    Id_productos_foto?: number
    foto: string
  }

  export type Productos_fotoUpdateManyMutationInput = {
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Productos_fotoUncheckedUpdateManyInput = {
    Id_productos_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Materiales_productoCreateInput = {
    costo: number
    stock: number
    rela_prod_mate: ProductosCreateNestedOneWithoutMateriales_productoInput
    rela_mate_produ: MaterialesCreateNestedOneWithoutMateriales_productoInput
  }

  export type Materiales_productoUncheckedCreateInput = {
    Id_materiales_producto?: number
    costo: number
    stock: number
    nom_prod: string
    nom_mat: string
  }

  export type Materiales_productoUpdateInput = {
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    rela_prod_mate?: ProductosUpdateOneRequiredWithoutMateriales_productoNestedInput
    rela_mate_produ?: MaterialesUpdateOneRequiredWithoutMateriales_productoNestedInput
  }

  export type Materiales_productoUncheckedUpdateInput = {
    Id_materiales_producto?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    nom_prod?: StringFieldUpdateOperationsInput | string
    nom_mat?: StringFieldUpdateOperationsInput | string
  }

  export type Materiales_productoCreateManyInput = {
    Id_materiales_producto?: number
    costo: number
    stock: number
    nom_prod: string
    nom_mat: string
  }

  export type Materiales_productoUpdateManyMutationInput = {
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
  }

  export type Materiales_productoUncheckedUpdateManyInput = {
    Id_materiales_producto?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    nom_prod?: StringFieldUpdateOperationsInput | string
    nom_mat?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialesCreateInput = {
    nombre: string
    rela_foto_mate: Materiales_fotoCreateNestedOneWithoutMaterialesInput
    materiales_producto?: Materiales_productoCreateNestedManyWithoutRela_mate_produInput
  }

  export type MaterialesUncheckedCreateInput = {
    nombre: string
    foto_materiales: number
    materiales_producto?: Materiales_productoUncheckedCreateNestedManyWithoutRela_mate_produInput
  }

  export type MaterialesUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rela_foto_mate?: Materiales_fotoUpdateOneRequiredWithoutMaterialesNestedInput
    materiales_producto?: Materiales_productoUpdateManyWithoutRela_mate_produNestedInput
  }

  export type MaterialesUncheckedUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    foto_materiales?: IntFieldUpdateOperationsInput | number
    materiales_producto?: Materiales_productoUncheckedUpdateManyWithoutRela_mate_produNestedInput
  }

  export type MaterialesCreateManyInput = {
    nombre: string
    foto_materiales: number
  }

  export type MaterialesUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialesUncheckedUpdateManyInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    foto_materiales?: IntFieldUpdateOperationsInput | number
  }

  export type Materiales_fotoCreateInput = {
    foto: string
    materiales?: MaterialesCreateNestedManyWithoutRela_foto_mateInput
  }

  export type Materiales_fotoUncheckedCreateInput = {
    Id_materiales_foto?: number
    foto: string
    materiales?: MaterialesUncheckedCreateNestedManyWithoutRela_foto_mateInput
  }

  export type Materiales_fotoUpdateInput = {
    foto?: StringFieldUpdateOperationsInput | string
    materiales?: MaterialesUpdateManyWithoutRela_foto_mateNestedInput
  }

  export type Materiales_fotoUncheckedUpdateInput = {
    Id_materiales_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    materiales?: MaterialesUncheckedUpdateManyWithoutRela_foto_mateNestedInput
  }

  export type Materiales_fotoCreateManyInput = {
    Id_materiales_foto?: number
    foto: string
  }

  export type Materiales_fotoUpdateManyMutationInput = {
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Materiales_fotoUncheckedUpdateManyInput = {
    Id_materiales_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type Foto_UsuarioScalarRelationFilter = {
    is?: Foto_UsuarioWhereInput
    isNot?: Foto_UsuarioWhereInput
  }

  export type EmprendimientoScalarRelationFilter = {
    is?: EmprendimientoWhereInput
    isNot?: EmprendimientoWhereInput
  }

  export type ContactosScalarRelationFilter = {
    is?: ContactosWhereInput
    isNot?: ContactosWhereInput
  }

  export type Usuario_EmprendimientoListRelationFilter = {
    every?: Usuario_EmprendimientoWhereInput
    some?: Usuario_EmprendimientoWhereInput
    none?: Usuario_EmprendimientoWhereInput
  }

  export type Usuario_EmprendimientoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    email?: SortOrder
    contra?: SortOrder
    nombre?: SortOrder
    foto_perfil?: SortOrder
    typo_id?: SortOrder
    contacto?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    foto_perfil?: SortOrder
    contacto?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    email?: SortOrder
    contra?: SortOrder
    nombre?: SortOrder
    foto_perfil?: SortOrder
    typo_id?: SortOrder
    contacto?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    email?: SortOrder
    contra?: SortOrder
    nombre?: SortOrder
    foto_perfil?: SortOrder
    typo_id?: SortOrder
    contacto?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    foto_perfil?: SortOrder
    contacto?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type Colores_marcaScalarRelationFilter = {
    is?: Colores_marcaWhereInput
    isNot?: Colores_marcaWhereInput
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type Usuario_EmprendimientoCountOrderByAggregateInput = {
    Id_usu_emp?: SortOrder
    nom_color?: SortOrder
    email?: SortOrder
    typo?: SortOrder
  }

  export type Usuario_EmprendimientoAvgOrderByAggregateInput = {
    Id_usu_emp?: SortOrder
  }

  export type Usuario_EmprendimientoMaxOrderByAggregateInput = {
    Id_usu_emp?: SortOrder
    nom_color?: SortOrder
    email?: SortOrder
    typo?: SortOrder
  }

  export type Usuario_EmprendimientoMinOrderByAggregateInput = {
    Id_usu_emp?: SortOrder
    nom_color?: SortOrder
    email?: SortOrder
    typo?: SortOrder
  }

  export type Usuario_EmprendimientoSumOrderByAggregateInput = {
    Id_usu_emp?: SortOrder
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type ContactosListRelationFilter = {
    every?: ContactosWhereInput
    some?: ContactosWhereInput
    none?: ContactosWhereInput
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ContactosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Foto_UsuarioCountOrderByAggregateInput = {
    Id_fotousu?: SortOrder
    foto_perfil?: SortOrder
  }

  export type Foto_UsuarioAvgOrderByAggregateInput = {
    Id_fotousu?: SortOrder
  }

  export type Foto_UsuarioMaxOrderByAggregateInput = {
    Id_fotousu?: SortOrder
    foto_perfil?: SortOrder
  }

  export type Foto_UsuarioMinOrderByAggregateInput = {
    Id_fotousu?: SortOrder
    foto_perfil?: SortOrder
  }

  export type Foto_UsuarioSumOrderByAggregateInput = {
    Id_fotousu?: SortOrder
  }

  export type ContactosCountOrderByAggregateInput = {
    Id_contactos?: SortOrder
    telefono?: SortOrder
    nombre?: SortOrder
    redes_soc?: SortOrder
    notas_perz?: SortOrder
    email_contactos?: SortOrder
    foto_contacto?: SortOrder
  }

  export type ContactosAvgOrderByAggregateInput = {
    Id_contactos?: SortOrder
    telefono?: SortOrder
    foto_contacto?: SortOrder
  }

  export type ContactosMaxOrderByAggregateInput = {
    Id_contactos?: SortOrder
    telefono?: SortOrder
    nombre?: SortOrder
    redes_soc?: SortOrder
    notas_perz?: SortOrder
    email_contactos?: SortOrder
    foto_contacto?: SortOrder
  }

  export type ContactosMinOrderByAggregateInput = {
    Id_contactos?: SortOrder
    telefono?: SortOrder
    nombre?: SortOrder
    redes_soc?: SortOrder
    notas_perz?: SortOrder
    email_contactos?: SortOrder
    foto_contacto?: SortOrder
  }

  export type ContactosSumOrderByAggregateInput = {
    Id_contactos?: SortOrder
    telefono?: SortOrder
    foto_contacto?: SortOrder
  }

  export type Productos_fotoScalarRelationFilter = {
    is?: Productos_fotoWhereInput
    isNot?: Productos_fotoWhereInput
  }

  export type ProductosScalarRelationFilter = {
    is?: ProductosWhereInput
    isNot?: ProductosWhereInput
  }

  export type Marketing_emprendimientoListRelationFilter = {
    every?: Marketing_emprendimientoWhereInput
    some?: Marketing_emprendimientoWhereInput
    none?: Marketing_emprendimientoWhereInput
  }

  export type Emprendimiento_productoListRelationFilter = {
    every?: Emprendimiento_productoWhereInput
    some?: Emprendimiento_productoWhereInput
    none?: Emprendimiento_productoWhereInput
  }

  export type Marketing_emprendimientoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Emprendimiento_productoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EmprendimientoCountOrderByAggregateInput = {
    typo?: SortOrder
    descripcion?: SortOrder
    producto_foto?: SortOrder
    producto?: SortOrder
  }

  export type EmprendimientoAvgOrderByAggregateInput = {
    producto_foto?: SortOrder
  }

  export type EmprendimientoMaxOrderByAggregateInput = {
    typo?: SortOrder
    descripcion?: SortOrder
    producto_foto?: SortOrder
    producto?: SortOrder
  }

  export type EmprendimientoMinOrderByAggregateInput = {
    typo?: SortOrder
    descripcion?: SortOrder
    producto_foto?: SortOrder
    producto?: SortOrder
  }

  export type EmprendimientoSumOrderByAggregateInput = {
    producto_foto?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type Emprendimiento_productoCountOrderByAggregateInput = {
    Id_emp_prod?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    emp_prod?: SortOrder
    prod_emp?: SortOrder
  }

  export type Emprendimiento_productoAvgOrderByAggregateInput = {
    Id_emp_prod?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
  }

  export type Emprendimiento_productoMaxOrderByAggregateInput = {
    Id_emp_prod?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    emp_prod?: SortOrder
    prod_emp?: SortOrder
  }

  export type Emprendimiento_productoMinOrderByAggregateInput = {
    Id_emp_prod?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    emp_prod?: SortOrder
    prod_emp?: SortOrder
  }

  export type Emprendimiento_productoSumOrderByAggregateInput = {
    Id_emp_prod?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type Colores_marcaCountOrderByAggregateInput = {
    nom_colores?: SortOrder
    foto?: SortOrder
  }

  export type Colores_marcaMaxOrderByAggregateInput = {
    nom_colores?: SortOrder
    foto?: SortOrder
  }

  export type Colores_marcaMinOrderByAggregateInput = {
    nom_colores?: SortOrder
    foto?: SortOrder
  }

  export type MarketingScalarRelationFilter = {
    is?: MarketingWhereInput
    isNot?: MarketingWhereInput
  }

  export type Marketing_emprendimientoCountOrderByAggregateInput = {
    Id_marketing_emprendimiento?: SortOrder
    typo_emp?: SortOrder
    Id_mark?: SortOrder
  }

  export type Marketing_emprendimientoAvgOrderByAggregateInput = {
    Id_marketing_emprendimiento?: SortOrder
    Id_mark?: SortOrder
  }

  export type Marketing_emprendimientoMaxOrderByAggregateInput = {
    Id_marketing_emprendimiento?: SortOrder
    typo_emp?: SortOrder
    Id_mark?: SortOrder
  }

  export type Marketing_emprendimientoMinOrderByAggregateInput = {
    Id_marketing_emprendimiento?: SortOrder
    typo_emp?: SortOrder
    Id_mark?: SortOrder
  }

  export type Marketing_emprendimientoSumOrderByAggregateInput = {
    Id_marketing_emprendimiento?: SortOrder
    Id_mark?: SortOrder
  }

  export type PublicacionesScalarRelationFilter = {
    is?: PublicacionesWhereInput
    isNot?: PublicacionesWhereInput
  }

  export type MarketingCountOrderByAggregateInput = {
    Id_marketing?: SortOrder
    publicacion?: SortOrder
  }

  export type MarketingAvgOrderByAggregateInput = {
    Id_marketing?: SortOrder
  }

  export type MarketingMaxOrderByAggregateInput = {
    Id_marketing?: SortOrder
    publicacion?: SortOrder
  }

  export type MarketingMinOrderByAggregateInput = {
    Id_marketing?: SortOrder
    publicacion?: SortOrder
  }

  export type MarketingSumOrderByAggregateInput = {
    Id_marketing?: SortOrder
  }

  export type Publicaciones_fotoScalarRelationFilter = {
    is?: Publicaciones_fotoWhereInput
    isNot?: Publicaciones_fotoWhereInput
  }

  export type MarketingListRelationFilter = {
    every?: MarketingWhereInput
    some?: MarketingWhereInput
    none?: MarketingWhereInput
  }

  export type MarketingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PublicacionesCountOrderByAggregateInput = {
    link_plantilla?: SortOrder
    desc?: SortOrder
    nombre?: SortOrder
    foto?: SortOrder
  }

  export type PublicacionesAvgOrderByAggregateInput = {
    foto?: SortOrder
  }

  export type PublicacionesMaxOrderByAggregateInput = {
    link_plantilla?: SortOrder
    desc?: SortOrder
    nombre?: SortOrder
    foto?: SortOrder
  }

  export type PublicacionesMinOrderByAggregateInput = {
    link_plantilla?: SortOrder
    desc?: SortOrder
    nombre?: SortOrder
    foto?: SortOrder
  }

  export type PublicacionesSumOrderByAggregateInput = {
    foto?: SortOrder
  }

  export type PublicacionesListRelationFilter = {
    every?: PublicacionesWhereInput
    some?: PublicacionesWhereInput
    none?: PublicacionesWhereInput
  }

  export type PublicacionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Publicaciones_fotoCountOrderByAggregateInput = {
    Id_publicaciones_foto?: SortOrder
    foto?: SortOrder
  }

  export type Publicaciones_fotoAvgOrderByAggregateInput = {
    Id_publicaciones_foto?: SortOrder
  }

  export type Publicaciones_fotoMaxOrderByAggregateInput = {
    Id_publicaciones_foto?: SortOrder
    foto?: SortOrder
  }

  export type Publicaciones_fotoMinOrderByAggregateInput = {
    Id_publicaciones_foto?: SortOrder
    foto?: SortOrder
  }

  export type Publicaciones_fotoSumOrderByAggregateInput = {
    Id_publicaciones_foto?: SortOrder
  }

  export type EmprendimientoListRelationFilter = {
    every?: EmprendimientoWhereInput
    some?: EmprendimientoWhereInput
    none?: EmprendimientoWhereInput
  }

  export type Materiales_productoListRelationFilter = {
    every?: Materiales_productoWhereInput
    some?: Materiales_productoWhereInput
    none?: Materiales_productoWhereInput
  }

  export type EmprendimientoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Materiales_productoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductosCountOrderByAggregateInput = {
    nombre_producto?: SortOrder
    pasos?: SortOrder
    descripcion?: SortOrder
    foto?: SortOrder
  }

  export type ProductosAvgOrderByAggregateInput = {
    foto?: SortOrder
  }

  export type ProductosMaxOrderByAggregateInput = {
    nombre_producto?: SortOrder
    pasos?: SortOrder
    descripcion?: SortOrder
    foto?: SortOrder
  }

  export type ProductosMinOrderByAggregateInput = {
    nombre_producto?: SortOrder
    pasos?: SortOrder
    descripcion?: SortOrder
    foto?: SortOrder
  }

  export type ProductosSumOrderByAggregateInput = {
    foto?: SortOrder
  }

  export type ProductosListRelationFilter = {
    every?: ProductosWhereInput
    some?: ProductosWhereInput
    none?: ProductosWhereInput
  }

  export type ProductosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Productos_fotoCountOrderByAggregateInput = {
    Id_productos_foto?: SortOrder
    foto?: SortOrder
  }

  export type Productos_fotoAvgOrderByAggregateInput = {
    Id_productos_foto?: SortOrder
  }

  export type Productos_fotoMaxOrderByAggregateInput = {
    Id_productos_foto?: SortOrder
    foto?: SortOrder
  }

  export type Productos_fotoMinOrderByAggregateInput = {
    Id_productos_foto?: SortOrder
    foto?: SortOrder
  }

  export type Productos_fotoSumOrderByAggregateInput = {
    Id_productos_foto?: SortOrder
  }

  export type MaterialesScalarRelationFilter = {
    is?: MaterialesWhereInput
    isNot?: MaterialesWhereInput
  }

  export type Materiales_productoCountOrderByAggregateInput = {
    Id_materiales_producto?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    nom_prod?: SortOrder
    nom_mat?: SortOrder
  }

  export type Materiales_productoAvgOrderByAggregateInput = {
    Id_materiales_producto?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
  }

  export type Materiales_productoMaxOrderByAggregateInput = {
    Id_materiales_producto?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    nom_prod?: SortOrder
    nom_mat?: SortOrder
  }

  export type Materiales_productoMinOrderByAggregateInput = {
    Id_materiales_producto?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
    nom_prod?: SortOrder
    nom_mat?: SortOrder
  }

  export type Materiales_productoSumOrderByAggregateInput = {
    Id_materiales_producto?: SortOrder
    costo?: SortOrder
    stock?: SortOrder
  }

  export type Materiales_fotoScalarRelationFilter = {
    is?: Materiales_fotoWhereInput
    isNot?: Materiales_fotoWhereInput
  }

  export type MaterialesCountOrderByAggregateInput = {
    nombre?: SortOrder
    foto_materiales?: SortOrder
  }

  export type MaterialesAvgOrderByAggregateInput = {
    foto_materiales?: SortOrder
  }

  export type MaterialesMaxOrderByAggregateInput = {
    nombre?: SortOrder
    foto_materiales?: SortOrder
  }

  export type MaterialesMinOrderByAggregateInput = {
    nombre?: SortOrder
    foto_materiales?: SortOrder
  }

  export type MaterialesSumOrderByAggregateInput = {
    foto_materiales?: SortOrder
  }

  export type MaterialesListRelationFilter = {
    every?: MaterialesWhereInput
    some?: MaterialesWhereInput
    none?: MaterialesWhereInput
  }

  export type MaterialesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Materiales_fotoCountOrderByAggregateInput = {
    Id_materiales_foto?: SortOrder
    foto?: SortOrder
  }

  export type Materiales_fotoAvgOrderByAggregateInput = {
    Id_materiales_foto?: SortOrder
  }

  export type Materiales_fotoMaxOrderByAggregateInput = {
    Id_materiales_foto?: SortOrder
    foto?: SortOrder
  }

  export type Materiales_fotoMinOrderByAggregateInput = {
    Id_materiales_foto?: SortOrder
    foto?: SortOrder
  }

  export type Materiales_fotoSumOrderByAggregateInput = {
    Id_materiales_foto?: SortOrder
  }

  export type Foto_UsuarioCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<Foto_UsuarioCreateWithoutUsuariosInput, Foto_UsuarioUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: Foto_UsuarioCreateOrConnectWithoutUsuariosInput
    connect?: Foto_UsuarioWhereUniqueInput
  }

  export type EmprendimientoCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<EmprendimientoCreateWithoutUsuarioInput, EmprendimientoUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutUsuarioInput
    connect?: EmprendimientoWhereUniqueInput
  }

  export type ContactosCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ContactosCreateWithoutUsuarioInput, ContactosUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ContactosCreateOrConnectWithoutUsuarioInput
    connect?: ContactosWhereUniqueInput
  }

  export type Usuario_EmprendimientoCreateNestedManyWithoutRela_usu_usuempInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_usu_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_usu_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_usu_usuempInputEnvelope
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
  }

  export type Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_usu_usuempInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_usu_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_usu_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_usu_usuempInputEnvelope
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type Foto_UsuarioUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<Foto_UsuarioCreateWithoutUsuariosInput, Foto_UsuarioUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: Foto_UsuarioCreateOrConnectWithoutUsuariosInput
    upsert?: Foto_UsuarioUpsertWithoutUsuariosInput
    connect?: Foto_UsuarioWhereUniqueInput
    update?: XOR<XOR<Foto_UsuarioUpdateToOneWithWhereWithoutUsuariosInput, Foto_UsuarioUpdateWithoutUsuariosInput>, Foto_UsuarioUncheckedUpdateWithoutUsuariosInput>
  }

  export type EmprendimientoUpdateOneRequiredWithoutUsuarioNestedInput = {
    create?: XOR<EmprendimientoCreateWithoutUsuarioInput, EmprendimientoUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutUsuarioInput
    upsert?: EmprendimientoUpsertWithoutUsuarioInput
    connect?: EmprendimientoWhereUniqueInput
    update?: XOR<XOR<EmprendimientoUpdateToOneWithWhereWithoutUsuarioInput, EmprendimientoUpdateWithoutUsuarioInput>, EmprendimientoUncheckedUpdateWithoutUsuarioInput>
  }

  export type ContactosUpdateOneRequiredWithoutUsuarioNestedInput = {
    create?: XOR<ContactosCreateWithoutUsuarioInput, ContactosUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ContactosCreateOrConnectWithoutUsuarioInput
    upsert?: ContactosUpsertWithoutUsuarioInput
    connect?: ContactosWhereUniqueInput
    update?: XOR<XOR<ContactosUpdateToOneWithWhereWithoutUsuarioInput, ContactosUpdateWithoutUsuarioInput>, ContactosUncheckedUpdateWithoutUsuarioInput>
  }

  export type Usuario_EmprendimientoUpdateManyWithoutRela_usu_usuempNestedInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_usu_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_usu_usuempInput[]
    upsert?: Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_usu_usuempInput | Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_usu_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_usu_usuempInputEnvelope
    set?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    disconnect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    delete?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    update?: Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_usu_usuempInput | Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_usu_usuempInput[]
    updateMany?: Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_usu_usuempInput | Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_usu_usuempInput[]
    deleteMany?: Usuario_EmprendimientoScalarWhereInput | Usuario_EmprendimientoScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_usu_usuempNestedInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_usu_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_usu_usuempInput[]
    upsert?: Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_usu_usuempInput | Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_usu_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_usu_usuempInputEnvelope
    set?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    disconnect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    delete?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    update?: Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_usu_usuempInput | Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_usu_usuempInput[]
    updateMany?: Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_usu_usuempInput | Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_usu_usuempInput[]
    deleteMany?: Usuario_EmprendimientoScalarWhereInput | Usuario_EmprendimientoScalarWhereInput[]
  }

  export type Colores_marcaCreateNestedOneWithoutUsuario_emprendimientoInput = {
    create?: XOR<Colores_marcaCreateWithoutUsuario_emprendimientoInput, Colores_marcaUncheckedCreateWithoutUsuario_emprendimientoInput>
    connectOrCreate?: Colores_marcaCreateOrConnectWithoutUsuario_emprendimientoInput
    connect?: Colores_marcaWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutUsuario_emprendimientoInput = {
    create?: XOR<UsuarioCreateWithoutUsuario_emprendimientoInput, UsuarioUncheckedCreateWithoutUsuario_emprendimientoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutUsuario_emprendimientoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EmprendimientoCreateNestedOneWithoutUsuario_emprendimientoInput = {
    create?: XOR<EmprendimientoCreateWithoutUsuario_emprendimientoInput, EmprendimientoUncheckedCreateWithoutUsuario_emprendimientoInput>
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutUsuario_emprendimientoInput
    connect?: EmprendimientoWhereUniqueInput
  }

  export type Colores_marcaUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput = {
    create?: XOR<Colores_marcaCreateWithoutUsuario_emprendimientoInput, Colores_marcaUncheckedCreateWithoutUsuario_emprendimientoInput>
    connectOrCreate?: Colores_marcaCreateOrConnectWithoutUsuario_emprendimientoInput
    upsert?: Colores_marcaUpsertWithoutUsuario_emprendimientoInput
    connect?: Colores_marcaWhereUniqueInput
    update?: XOR<XOR<Colores_marcaUpdateToOneWithWhereWithoutUsuario_emprendimientoInput, Colores_marcaUpdateWithoutUsuario_emprendimientoInput>, Colores_marcaUncheckedUpdateWithoutUsuario_emprendimientoInput>
  }

  export type UsuarioUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput = {
    create?: XOR<UsuarioCreateWithoutUsuario_emprendimientoInput, UsuarioUncheckedCreateWithoutUsuario_emprendimientoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutUsuario_emprendimientoInput
    upsert?: UsuarioUpsertWithoutUsuario_emprendimientoInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutUsuario_emprendimientoInput, UsuarioUpdateWithoutUsuario_emprendimientoInput>, UsuarioUncheckedUpdateWithoutUsuario_emprendimientoInput>
  }

  export type EmprendimientoUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput = {
    create?: XOR<EmprendimientoCreateWithoutUsuario_emprendimientoInput, EmprendimientoUncheckedCreateWithoutUsuario_emprendimientoInput>
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutUsuario_emprendimientoInput
    upsert?: EmprendimientoUpsertWithoutUsuario_emprendimientoInput
    connect?: EmprendimientoWhereUniqueInput
    update?: XOR<XOR<EmprendimientoUpdateToOneWithWhereWithoutUsuario_emprendimientoInput, EmprendimientoUpdateWithoutUsuario_emprendimientoInput>, EmprendimientoUncheckedUpdateWithoutUsuario_emprendimientoInput>
  }

  export type UsuarioCreateNestedManyWithoutFotoInput = {
    create?: XOR<UsuarioCreateWithoutFotoInput, UsuarioUncheckedCreateWithoutFotoInput> | UsuarioCreateWithoutFotoInput[] | UsuarioUncheckedCreateWithoutFotoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutFotoInput | UsuarioCreateOrConnectWithoutFotoInput[]
    createMany?: UsuarioCreateManyFotoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type ContactosCreateNestedManyWithoutFotoInput = {
    create?: XOR<ContactosCreateWithoutFotoInput, ContactosUncheckedCreateWithoutFotoInput> | ContactosCreateWithoutFotoInput[] | ContactosUncheckedCreateWithoutFotoInput[]
    connectOrCreate?: ContactosCreateOrConnectWithoutFotoInput | ContactosCreateOrConnectWithoutFotoInput[]
    createMany?: ContactosCreateManyFotoInputEnvelope
    connect?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutFotoInput = {
    create?: XOR<UsuarioCreateWithoutFotoInput, UsuarioUncheckedCreateWithoutFotoInput> | UsuarioCreateWithoutFotoInput[] | UsuarioUncheckedCreateWithoutFotoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutFotoInput | UsuarioCreateOrConnectWithoutFotoInput[]
    createMany?: UsuarioCreateManyFotoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type ContactosUncheckedCreateNestedManyWithoutFotoInput = {
    create?: XOR<ContactosCreateWithoutFotoInput, ContactosUncheckedCreateWithoutFotoInput> | ContactosCreateWithoutFotoInput[] | ContactosUncheckedCreateWithoutFotoInput[]
    connectOrCreate?: ContactosCreateOrConnectWithoutFotoInput | ContactosCreateOrConnectWithoutFotoInput[]
    createMany?: ContactosCreateManyFotoInputEnvelope
    connect?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
  }

  export type UsuarioUpdateManyWithoutFotoNestedInput = {
    create?: XOR<UsuarioCreateWithoutFotoInput, UsuarioUncheckedCreateWithoutFotoInput> | UsuarioCreateWithoutFotoInput[] | UsuarioUncheckedCreateWithoutFotoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutFotoInput | UsuarioCreateOrConnectWithoutFotoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutFotoInput | UsuarioUpsertWithWhereUniqueWithoutFotoInput[]
    createMany?: UsuarioCreateManyFotoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutFotoInput | UsuarioUpdateWithWhereUniqueWithoutFotoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutFotoInput | UsuarioUpdateManyWithWhereWithoutFotoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type ContactosUpdateManyWithoutFotoNestedInput = {
    create?: XOR<ContactosCreateWithoutFotoInput, ContactosUncheckedCreateWithoutFotoInput> | ContactosCreateWithoutFotoInput[] | ContactosUncheckedCreateWithoutFotoInput[]
    connectOrCreate?: ContactosCreateOrConnectWithoutFotoInput | ContactosCreateOrConnectWithoutFotoInput[]
    upsert?: ContactosUpsertWithWhereUniqueWithoutFotoInput | ContactosUpsertWithWhereUniqueWithoutFotoInput[]
    createMany?: ContactosCreateManyFotoInputEnvelope
    set?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
    disconnect?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
    delete?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
    connect?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
    update?: ContactosUpdateWithWhereUniqueWithoutFotoInput | ContactosUpdateWithWhereUniqueWithoutFotoInput[]
    updateMany?: ContactosUpdateManyWithWhereWithoutFotoInput | ContactosUpdateManyWithWhereWithoutFotoInput[]
    deleteMany?: ContactosScalarWhereInput | ContactosScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutFotoNestedInput = {
    create?: XOR<UsuarioCreateWithoutFotoInput, UsuarioUncheckedCreateWithoutFotoInput> | UsuarioCreateWithoutFotoInput[] | UsuarioUncheckedCreateWithoutFotoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutFotoInput | UsuarioCreateOrConnectWithoutFotoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutFotoInput | UsuarioUpsertWithWhereUniqueWithoutFotoInput[]
    createMany?: UsuarioCreateManyFotoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutFotoInput | UsuarioUpdateWithWhereUniqueWithoutFotoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutFotoInput | UsuarioUpdateManyWithWhereWithoutFotoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type ContactosUncheckedUpdateManyWithoutFotoNestedInput = {
    create?: XOR<ContactosCreateWithoutFotoInput, ContactosUncheckedCreateWithoutFotoInput> | ContactosCreateWithoutFotoInput[] | ContactosUncheckedCreateWithoutFotoInput[]
    connectOrCreate?: ContactosCreateOrConnectWithoutFotoInput | ContactosCreateOrConnectWithoutFotoInput[]
    upsert?: ContactosUpsertWithWhereUniqueWithoutFotoInput | ContactosUpsertWithWhereUniqueWithoutFotoInput[]
    createMany?: ContactosCreateManyFotoInputEnvelope
    set?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
    disconnect?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
    delete?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
    connect?: ContactosWhereUniqueInput | ContactosWhereUniqueInput[]
    update?: ContactosUpdateWithWhereUniqueWithoutFotoInput | ContactosUpdateWithWhereUniqueWithoutFotoInput[]
    updateMany?: ContactosUpdateManyWithWhereWithoutFotoInput | ContactosUpdateManyWithWhereWithoutFotoInput[]
    deleteMany?: ContactosScalarWhereInput | ContactosScalarWhereInput[]
  }

  export type Foto_UsuarioCreateNestedOneWithoutFoto_contactoInput = {
    create?: XOR<Foto_UsuarioCreateWithoutFoto_contactoInput, Foto_UsuarioUncheckedCreateWithoutFoto_contactoInput>
    connectOrCreate?: Foto_UsuarioCreateOrConnectWithoutFoto_contactoInput
    connect?: Foto_UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedManyWithoutId_contactosInput = {
    create?: XOR<UsuarioCreateWithoutId_contactosInput, UsuarioUncheckedCreateWithoutId_contactosInput> | UsuarioCreateWithoutId_contactosInput[] | UsuarioUncheckedCreateWithoutId_contactosInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutId_contactosInput | UsuarioCreateOrConnectWithoutId_contactosInput[]
    createMany?: UsuarioCreateManyId_contactosInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutId_contactosInput = {
    create?: XOR<UsuarioCreateWithoutId_contactosInput, UsuarioUncheckedCreateWithoutId_contactosInput> | UsuarioCreateWithoutId_contactosInput[] | UsuarioUncheckedCreateWithoutId_contactosInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutId_contactosInput | UsuarioCreateOrConnectWithoutId_contactosInput[]
    createMany?: UsuarioCreateManyId_contactosInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type Foto_UsuarioUpdateOneRequiredWithoutFoto_contactoNestedInput = {
    create?: XOR<Foto_UsuarioCreateWithoutFoto_contactoInput, Foto_UsuarioUncheckedCreateWithoutFoto_contactoInput>
    connectOrCreate?: Foto_UsuarioCreateOrConnectWithoutFoto_contactoInput
    upsert?: Foto_UsuarioUpsertWithoutFoto_contactoInput
    connect?: Foto_UsuarioWhereUniqueInput
    update?: XOR<XOR<Foto_UsuarioUpdateToOneWithWhereWithoutFoto_contactoInput, Foto_UsuarioUpdateWithoutFoto_contactoInput>, Foto_UsuarioUncheckedUpdateWithoutFoto_contactoInput>
  }

  export type UsuarioUpdateManyWithoutId_contactosNestedInput = {
    create?: XOR<UsuarioCreateWithoutId_contactosInput, UsuarioUncheckedCreateWithoutId_contactosInput> | UsuarioCreateWithoutId_contactosInput[] | UsuarioUncheckedCreateWithoutId_contactosInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutId_contactosInput | UsuarioCreateOrConnectWithoutId_contactosInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutId_contactosInput | UsuarioUpsertWithWhereUniqueWithoutId_contactosInput[]
    createMany?: UsuarioCreateManyId_contactosInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutId_contactosInput | UsuarioUpdateWithWhereUniqueWithoutId_contactosInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutId_contactosInput | UsuarioUpdateManyWithWhereWithoutId_contactosInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutId_contactosNestedInput = {
    create?: XOR<UsuarioCreateWithoutId_contactosInput, UsuarioUncheckedCreateWithoutId_contactosInput> | UsuarioCreateWithoutId_contactosInput[] | UsuarioUncheckedCreateWithoutId_contactosInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutId_contactosInput | UsuarioCreateOrConnectWithoutId_contactosInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutId_contactosInput | UsuarioUpsertWithWhereUniqueWithoutId_contactosInput[]
    createMany?: UsuarioCreateManyId_contactosInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutId_contactosInput | UsuarioUpdateWithWhereUniqueWithoutId_contactosInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutId_contactosInput | UsuarioUpdateManyWithWhereWithoutId_contactosInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type Productos_fotoCreateNestedOneWithoutEmprendimiento_productofotoInput = {
    create?: XOR<Productos_fotoCreateWithoutEmprendimiento_productofotoInput, Productos_fotoUncheckedCreateWithoutEmprendimiento_productofotoInput>
    connectOrCreate?: Productos_fotoCreateOrConnectWithoutEmprendimiento_productofotoInput
    connect?: Productos_fotoWhereUniqueInput
  }

  export type ProductosCreateNestedOneWithoutEmprendimientoInput = {
    create?: XOR<ProductosCreateWithoutEmprendimientoInput, ProductosUncheckedCreateWithoutEmprendimientoInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutEmprendimientoInput
    connect?: ProductosWhereUniqueInput
  }

  export type UsuarioCreateNestedManyWithoutTypo_emprendimientoInput = {
    create?: XOR<UsuarioCreateWithoutTypo_emprendimientoInput, UsuarioUncheckedCreateWithoutTypo_emprendimientoInput> | UsuarioCreateWithoutTypo_emprendimientoInput[] | UsuarioUncheckedCreateWithoutTypo_emprendimientoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutTypo_emprendimientoInput | UsuarioCreateOrConnectWithoutTypo_emprendimientoInput[]
    createMany?: UsuarioCreateManyTypo_emprendimientoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type Marketing_emprendimientoCreateNestedManyWithoutRela_emp_markInput = {
    create?: XOR<Marketing_emprendimientoCreateWithoutRela_emp_markInput, Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput> | Marketing_emprendimientoCreateWithoutRela_emp_markInput[] | Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput[]
    connectOrCreate?: Marketing_emprendimientoCreateOrConnectWithoutRela_emp_markInput | Marketing_emprendimientoCreateOrConnectWithoutRela_emp_markInput[]
    createMany?: Marketing_emprendimientoCreateManyRela_emp_markInputEnvelope
    connect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
  }

  export type Emprendimiento_productoCreateNestedManyWithoutRela_emp_prodInput = {
    create?: XOR<Emprendimiento_productoCreateWithoutRela_emp_prodInput, Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput> | Emprendimiento_productoCreateWithoutRela_emp_prodInput[] | Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput[]
    connectOrCreate?: Emprendimiento_productoCreateOrConnectWithoutRela_emp_prodInput | Emprendimiento_productoCreateOrConnectWithoutRela_emp_prodInput[]
    createMany?: Emprendimiento_productoCreateManyRela_emp_prodInputEnvelope
    connect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
  }

  export type Usuario_EmprendimientoCreateNestedManyWithoutRela_emp_usuempInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_emp_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_emp_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_emp_usuempInputEnvelope
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutTypo_emprendimientoInput = {
    create?: XOR<UsuarioCreateWithoutTypo_emprendimientoInput, UsuarioUncheckedCreateWithoutTypo_emprendimientoInput> | UsuarioCreateWithoutTypo_emprendimientoInput[] | UsuarioUncheckedCreateWithoutTypo_emprendimientoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutTypo_emprendimientoInput | UsuarioCreateOrConnectWithoutTypo_emprendimientoInput[]
    createMany?: UsuarioCreateManyTypo_emprendimientoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_emp_markInput = {
    create?: XOR<Marketing_emprendimientoCreateWithoutRela_emp_markInput, Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput> | Marketing_emprendimientoCreateWithoutRela_emp_markInput[] | Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput[]
    connectOrCreate?: Marketing_emprendimientoCreateOrConnectWithoutRela_emp_markInput | Marketing_emprendimientoCreateOrConnectWithoutRela_emp_markInput[]
    createMany?: Marketing_emprendimientoCreateManyRela_emp_markInputEnvelope
    connect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
  }

  export type Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_emp_prodInput = {
    create?: XOR<Emprendimiento_productoCreateWithoutRela_emp_prodInput, Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput> | Emprendimiento_productoCreateWithoutRela_emp_prodInput[] | Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput[]
    connectOrCreate?: Emprendimiento_productoCreateOrConnectWithoutRela_emp_prodInput | Emprendimiento_productoCreateOrConnectWithoutRela_emp_prodInput[]
    createMany?: Emprendimiento_productoCreateManyRela_emp_prodInputEnvelope
    connect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
  }

  export type Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_usuempInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_emp_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_emp_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_emp_usuempInputEnvelope
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
  }

  export type Productos_fotoUpdateOneRequiredWithoutEmprendimiento_productofotoNestedInput = {
    create?: XOR<Productos_fotoCreateWithoutEmprendimiento_productofotoInput, Productos_fotoUncheckedCreateWithoutEmprendimiento_productofotoInput>
    connectOrCreate?: Productos_fotoCreateOrConnectWithoutEmprendimiento_productofotoInput
    upsert?: Productos_fotoUpsertWithoutEmprendimiento_productofotoInput
    connect?: Productos_fotoWhereUniqueInput
    update?: XOR<XOR<Productos_fotoUpdateToOneWithWhereWithoutEmprendimiento_productofotoInput, Productos_fotoUpdateWithoutEmprendimiento_productofotoInput>, Productos_fotoUncheckedUpdateWithoutEmprendimiento_productofotoInput>
  }

  export type ProductosUpdateOneRequiredWithoutEmprendimientoNestedInput = {
    create?: XOR<ProductosCreateWithoutEmprendimientoInput, ProductosUncheckedCreateWithoutEmprendimientoInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutEmprendimientoInput
    upsert?: ProductosUpsertWithoutEmprendimientoInput
    connect?: ProductosWhereUniqueInput
    update?: XOR<XOR<ProductosUpdateToOneWithWhereWithoutEmprendimientoInput, ProductosUpdateWithoutEmprendimientoInput>, ProductosUncheckedUpdateWithoutEmprendimientoInput>
  }

  export type UsuarioUpdateManyWithoutTypo_emprendimientoNestedInput = {
    create?: XOR<UsuarioCreateWithoutTypo_emprendimientoInput, UsuarioUncheckedCreateWithoutTypo_emprendimientoInput> | UsuarioCreateWithoutTypo_emprendimientoInput[] | UsuarioUncheckedCreateWithoutTypo_emprendimientoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutTypo_emprendimientoInput | UsuarioCreateOrConnectWithoutTypo_emprendimientoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutTypo_emprendimientoInput | UsuarioUpsertWithWhereUniqueWithoutTypo_emprendimientoInput[]
    createMany?: UsuarioCreateManyTypo_emprendimientoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutTypo_emprendimientoInput | UsuarioUpdateWithWhereUniqueWithoutTypo_emprendimientoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutTypo_emprendimientoInput | UsuarioUpdateManyWithWhereWithoutTypo_emprendimientoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type Marketing_emprendimientoUpdateManyWithoutRela_emp_markNestedInput = {
    create?: XOR<Marketing_emprendimientoCreateWithoutRela_emp_markInput, Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput> | Marketing_emprendimientoCreateWithoutRela_emp_markInput[] | Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput[]
    connectOrCreate?: Marketing_emprendimientoCreateOrConnectWithoutRela_emp_markInput | Marketing_emprendimientoCreateOrConnectWithoutRela_emp_markInput[]
    upsert?: Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_emp_markInput | Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_emp_markInput[]
    createMany?: Marketing_emprendimientoCreateManyRela_emp_markInputEnvelope
    set?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    disconnect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    delete?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    connect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    update?: Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_emp_markInput | Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_emp_markInput[]
    updateMany?: Marketing_emprendimientoUpdateManyWithWhereWithoutRela_emp_markInput | Marketing_emprendimientoUpdateManyWithWhereWithoutRela_emp_markInput[]
    deleteMany?: Marketing_emprendimientoScalarWhereInput | Marketing_emprendimientoScalarWhereInput[]
  }

  export type Emprendimiento_productoUpdateManyWithoutRela_emp_prodNestedInput = {
    create?: XOR<Emprendimiento_productoCreateWithoutRela_emp_prodInput, Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput> | Emprendimiento_productoCreateWithoutRela_emp_prodInput[] | Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput[]
    connectOrCreate?: Emprendimiento_productoCreateOrConnectWithoutRela_emp_prodInput | Emprendimiento_productoCreateOrConnectWithoutRela_emp_prodInput[]
    upsert?: Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_emp_prodInput | Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_emp_prodInput[]
    createMany?: Emprendimiento_productoCreateManyRela_emp_prodInputEnvelope
    set?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    disconnect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    delete?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    connect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    update?: Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_emp_prodInput | Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_emp_prodInput[]
    updateMany?: Emprendimiento_productoUpdateManyWithWhereWithoutRela_emp_prodInput | Emprendimiento_productoUpdateManyWithWhereWithoutRela_emp_prodInput[]
    deleteMany?: Emprendimiento_productoScalarWhereInput | Emprendimiento_productoScalarWhereInput[]
  }

  export type Usuario_EmprendimientoUpdateManyWithoutRela_emp_usuempNestedInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_emp_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_emp_usuempInput[]
    upsert?: Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_usuempInput | Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_emp_usuempInputEnvelope
    set?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    disconnect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    delete?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    update?: Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_usuempInput | Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_usuempInput[]
    updateMany?: Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_emp_usuempInput | Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_emp_usuempInput[]
    deleteMany?: Usuario_EmprendimientoScalarWhereInput | Usuario_EmprendimientoScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutTypo_emprendimientoNestedInput = {
    create?: XOR<UsuarioCreateWithoutTypo_emprendimientoInput, UsuarioUncheckedCreateWithoutTypo_emprendimientoInput> | UsuarioCreateWithoutTypo_emprendimientoInput[] | UsuarioUncheckedCreateWithoutTypo_emprendimientoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutTypo_emprendimientoInput | UsuarioCreateOrConnectWithoutTypo_emprendimientoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutTypo_emprendimientoInput | UsuarioUpsertWithWhereUniqueWithoutTypo_emprendimientoInput[]
    createMany?: UsuarioCreateManyTypo_emprendimientoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutTypo_emprendimientoInput | UsuarioUpdateWithWhereUniqueWithoutTypo_emprendimientoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutTypo_emprendimientoInput | UsuarioUpdateManyWithWhereWithoutTypo_emprendimientoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type Marketing_emprendimientoUncheckedUpdateManyWithoutRela_emp_markNestedInput = {
    create?: XOR<Marketing_emprendimientoCreateWithoutRela_emp_markInput, Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput> | Marketing_emprendimientoCreateWithoutRela_emp_markInput[] | Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput[]
    connectOrCreate?: Marketing_emprendimientoCreateOrConnectWithoutRela_emp_markInput | Marketing_emprendimientoCreateOrConnectWithoutRela_emp_markInput[]
    upsert?: Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_emp_markInput | Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_emp_markInput[]
    createMany?: Marketing_emprendimientoCreateManyRela_emp_markInputEnvelope
    set?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    disconnect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    delete?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    connect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    update?: Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_emp_markInput | Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_emp_markInput[]
    updateMany?: Marketing_emprendimientoUpdateManyWithWhereWithoutRela_emp_markInput | Marketing_emprendimientoUpdateManyWithWhereWithoutRela_emp_markInput[]
    deleteMany?: Marketing_emprendimientoScalarWhereInput | Marketing_emprendimientoScalarWhereInput[]
  }

  export type Emprendimiento_productoUncheckedUpdateManyWithoutRela_emp_prodNestedInput = {
    create?: XOR<Emprendimiento_productoCreateWithoutRela_emp_prodInput, Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput> | Emprendimiento_productoCreateWithoutRela_emp_prodInput[] | Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput[]
    connectOrCreate?: Emprendimiento_productoCreateOrConnectWithoutRela_emp_prodInput | Emprendimiento_productoCreateOrConnectWithoutRela_emp_prodInput[]
    upsert?: Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_emp_prodInput | Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_emp_prodInput[]
    createMany?: Emprendimiento_productoCreateManyRela_emp_prodInputEnvelope
    set?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    disconnect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    delete?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    connect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    update?: Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_emp_prodInput | Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_emp_prodInput[]
    updateMany?: Emprendimiento_productoUpdateManyWithWhereWithoutRela_emp_prodInput | Emprendimiento_productoUpdateManyWithWhereWithoutRela_emp_prodInput[]
    deleteMany?: Emprendimiento_productoScalarWhereInput | Emprendimiento_productoScalarWhereInput[]
  }

  export type Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_emp_usuempNestedInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_emp_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_emp_usuempInput[]
    upsert?: Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_usuempInput | Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_emp_usuempInputEnvelope
    set?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    disconnect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    delete?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    update?: Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_usuempInput | Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_usuempInput[]
    updateMany?: Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_emp_usuempInput | Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_emp_usuempInput[]
    deleteMany?: Usuario_EmprendimientoScalarWhereInput | Usuario_EmprendimientoScalarWhereInput[]
  }

  export type EmprendimientoCreateNestedOneWithoutEmprendimiento_productoInput = {
    create?: XOR<EmprendimientoCreateWithoutEmprendimiento_productoInput, EmprendimientoUncheckedCreateWithoutEmprendimiento_productoInput>
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutEmprendimiento_productoInput
    connect?: EmprendimientoWhereUniqueInput
  }

  export type ProductosCreateNestedOneWithoutEmprendimiento_productosInput = {
    create?: XOR<ProductosCreateWithoutEmprendimiento_productosInput, ProductosUncheckedCreateWithoutEmprendimiento_productosInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutEmprendimiento_productosInput
    connect?: ProductosWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EmprendimientoUpdateOneRequiredWithoutEmprendimiento_productoNestedInput = {
    create?: XOR<EmprendimientoCreateWithoutEmprendimiento_productoInput, EmprendimientoUncheckedCreateWithoutEmprendimiento_productoInput>
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutEmprendimiento_productoInput
    upsert?: EmprendimientoUpsertWithoutEmprendimiento_productoInput
    connect?: EmprendimientoWhereUniqueInput
    update?: XOR<XOR<EmprendimientoUpdateToOneWithWhereWithoutEmprendimiento_productoInput, EmprendimientoUpdateWithoutEmprendimiento_productoInput>, EmprendimientoUncheckedUpdateWithoutEmprendimiento_productoInput>
  }

  export type ProductosUpdateOneRequiredWithoutEmprendimiento_productosNestedInput = {
    create?: XOR<ProductosCreateWithoutEmprendimiento_productosInput, ProductosUncheckedCreateWithoutEmprendimiento_productosInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutEmprendimiento_productosInput
    upsert?: ProductosUpsertWithoutEmprendimiento_productosInput
    connect?: ProductosWhereUniqueInput
    update?: XOR<XOR<ProductosUpdateToOneWithWhereWithoutEmprendimiento_productosInput, ProductosUpdateWithoutEmprendimiento_productosInput>, ProductosUncheckedUpdateWithoutEmprendimiento_productosInput>
  }

  export type Usuario_EmprendimientoCreateNestedManyWithoutRela_colo_usuempInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_colo_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_colo_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_colo_usuempInputEnvelope
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
  }

  export type Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_colo_usuempInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_colo_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_colo_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_colo_usuempInputEnvelope
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
  }

  export type Usuario_EmprendimientoUpdateManyWithoutRela_colo_usuempNestedInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_colo_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_colo_usuempInput[]
    upsert?: Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_colo_usuempInput | Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_colo_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_colo_usuempInputEnvelope
    set?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    disconnect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    delete?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    update?: Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_colo_usuempInput | Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_colo_usuempInput[]
    updateMany?: Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_colo_usuempInput | Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_colo_usuempInput[]
    deleteMany?: Usuario_EmprendimientoScalarWhereInput | Usuario_EmprendimientoScalarWhereInput[]
  }

  export type Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_colo_usuempNestedInput = {
    create?: XOR<Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput> | Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput[] | Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput[]
    connectOrCreate?: Usuario_EmprendimientoCreateOrConnectWithoutRela_colo_usuempInput | Usuario_EmprendimientoCreateOrConnectWithoutRela_colo_usuempInput[]
    upsert?: Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_colo_usuempInput | Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_colo_usuempInput[]
    createMany?: Usuario_EmprendimientoCreateManyRela_colo_usuempInputEnvelope
    set?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    disconnect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    delete?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    connect?: Usuario_EmprendimientoWhereUniqueInput | Usuario_EmprendimientoWhereUniqueInput[]
    update?: Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_colo_usuempInput | Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_colo_usuempInput[]
    updateMany?: Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_colo_usuempInput | Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_colo_usuempInput[]
    deleteMany?: Usuario_EmprendimientoScalarWhereInput | Usuario_EmprendimientoScalarWhereInput[]
  }

  export type EmprendimientoCreateNestedOneWithoutMarketing_emprendimientoInput = {
    create?: XOR<EmprendimientoCreateWithoutMarketing_emprendimientoInput, EmprendimientoUncheckedCreateWithoutMarketing_emprendimientoInput>
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutMarketing_emprendimientoInput
    connect?: EmprendimientoWhereUniqueInput
  }

  export type MarketingCreateNestedOneWithoutMarketing_emprendimientoInput = {
    create?: XOR<MarketingCreateWithoutMarketing_emprendimientoInput, MarketingUncheckedCreateWithoutMarketing_emprendimientoInput>
    connectOrCreate?: MarketingCreateOrConnectWithoutMarketing_emprendimientoInput
    connect?: MarketingWhereUniqueInput
  }

  export type EmprendimientoUpdateOneRequiredWithoutMarketing_emprendimientoNestedInput = {
    create?: XOR<EmprendimientoCreateWithoutMarketing_emprendimientoInput, EmprendimientoUncheckedCreateWithoutMarketing_emprendimientoInput>
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutMarketing_emprendimientoInput
    upsert?: EmprendimientoUpsertWithoutMarketing_emprendimientoInput
    connect?: EmprendimientoWhereUniqueInput
    update?: XOR<XOR<EmprendimientoUpdateToOneWithWhereWithoutMarketing_emprendimientoInput, EmprendimientoUpdateWithoutMarketing_emprendimientoInput>, EmprendimientoUncheckedUpdateWithoutMarketing_emprendimientoInput>
  }

  export type MarketingUpdateOneRequiredWithoutMarketing_emprendimientoNestedInput = {
    create?: XOR<MarketingCreateWithoutMarketing_emprendimientoInput, MarketingUncheckedCreateWithoutMarketing_emprendimientoInput>
    connectOrCreate?: MarketingCreateOrConnectWithoutMarketing_emprendimientoInput
    upsert?: MarketingUpsertWithoutMarketing_emprendimientoInput
    connect?: MarketingWhereUniqueInput
    update?: XOR<XOR<MarketingUpdateToOneWithWhereWithoutMarketing_emprendimientoInput, MarketingUpdateWithoutMarketing_emprendimientoInput>, MarketingUncheckedUpdateWithoutMarketing_emprendimientoInput>
  }

  export type PublicacionesCreateNestedOneWithoutMarketingInput = {
    create?: XOR<PublicacionesCreateWithoutMarketingInput, PublicacionesUncheckedCreateWithoutMarketingInput>
    connectOrCreate?: PublicacionesCreateOrConnectWithoutMarketingInput
    connect?: PublicacionesWhereUniqueInput
  }

  export type Marketing_emprendimientoCreateNestedManyWithoutRela_mark_empInput = {
    create?: XOR<Marketing_emprendimientoCreateWithoutRela_mark_empInput, Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput> | Marketing_emprendimientoCreateWithoutRela_mark_empInput[] | Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput[]
    connectOrCreate?: Marketing_emprendimientoCreateOrConnectWithoutRela_mark_empInput | Marketing_emprendimientoCreateOrConnectWithoutRela_mark_empInput[]
    createMany?: Marketing_emprendimientoCreateManyRela_mark_empInputEnvelope
    connect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
  }

  export type Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_mark_empInput = {
    create?: XOR<Marketing_emprendimientoCreateWithoutRela_mark_empInput, Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput> | Marketing_emprendimientoCreateWithoutRela_mark_empInput[] | Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput[]
    connectOrCreate?: Marketing_emprendimientoCreateOrConnectWithoutRela_mark_empInput | Marketing_emprendimientoCreateOrConnectWithoutRela_mark_empInput[]
    createMany?: Marketing_emprendimientoCreateManyRela_mark_empInputEnvelope
    connect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
  }

  export type PublicacionesUpdateOneRequiredWithoutMarketingNestedInput = {
    create?: XOR<PublicacionesCreateWithoutMarketingInput, PublicacionesUncheckedCreateWithoutMarketingInput>
    connectOrCreate?: PublicacionesCreateOrConnectWithoutMarketingInput
    upsert?: PublicacionesUpsertWithoutMarketingInput
    connect?: PublicacionesWhereUniqueInput
    update?: XOR<XOR<PublicacionesUpdateToOneWithWhereWithoutMarketingInput, PublicacionesUpdateWithoutMarketingInput>, PublicacionesUncheckedUpdateWithoutMarketingInput>
  }

  export type Marketing_emprendimientoUpdateManyWithoutRela_mark_empNestedInput = {
    create?: XOR<Marketing_emprendimientoCreateWithoutRela_mark_empInput, Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput> | Marketing_emprendimientoCreateWithoutRela_mark_empInput[] | Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput[]
    connectOrCreate?: Marketing_emprendimientoCreateOrConnectWithoutRela_mark_empInput | Marketing_emprendimientoCreateOrConnectWithoutRela_mark_empInput[]
    upsert?: Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_mark_empInput | Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_mark_empInput[]
    createMany?: Marketing_emprendimientoCreateManyRela_mark_empInputEnvelope
    set?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    disconnect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    delete?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    connect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    update?: Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_mark_empInput | Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_mark_empInput[]
    updateMany?: Marketing_emprendimientoUpdateManyWithWhereWithoutRela_mark_empInput | Marketing_emprendimientoUpdateManyWithWhereWithoutRela_mark_empInput[]
    deleteMany?: Marketing_emprendimientoScalarWhereInput | Marketing_emprendimientoScalarWhereInput[]
  }

  export type Marketing_emprendimientoUncheckedUpdateManyWithoutRela_mark_empNestedInput = {
    create?: XOR<Marketing_emprendimientoCreateWithoutRela_mark_empInput, Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput> | Marketing_emprendimientoCreateWithoutRela_mark_empInput[] | Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput[]
    connectOrCreate?: Marketing_emprendimientoCreateOrConnectWithoutRela_mark_empInput | Marketing_emprendimientoCreateOrConnectWithoutRela_mark_empInput[]
    upsert?: Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_mark_empInput | Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_mark_empInput[]
    createMany?: Marketing_emprendimientoCreateManyRela_mark_empInputEnvelope
    set?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    disconnect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    delete?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    connect?: Marketing_emprendimientoWhereUniqueInput | Marketing_emprendimientoWhereUniqueInput[]
    update?: Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_mark_empInput | Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_mark_empInput[]
    updateMany?: Marketing_emprendimientoUpdateManyWithWhereWithoutRela_mark_empInput | Marketing_emprendimientoUpdateManyWithWhereWithoutRela_mark_empInput[]
    deleteMany?: Marketing_emprendimientoScalarWhereInput | Marketing_emprendimientoScalarWhereInput[]
  }

  export type Publicaciones_fotoCreateNestedOneWithoutPublicacionesInput = {
    create?: XOR<Publicaciones_fotoCreateWithoutPublicacionesInput, Publicaciones_fotoUncheckedCreateWithoutPublicacionesInput>
    connectOrCreate?: Publicaciones_fotoCreateOrConnectWithoutPublicacionesInput
    connect?: Publicaciones_fotoWhereUniqueInput
  }

  export type MarketingCreateNestedManyWithoutRela_publi_markInput = {
    create?: XOR<MarketingCreateWithoutRela_publi_markInput, MarketingUncheckedCreateWithoutRela_publi_markInput> | MarketingCreateWithoutRela_publi_markInput[] | MarketingUncheckedCreateWithoutRela_publi_markInput[]
    connectOrCreate?: MarketingCreateOrConnectWithoutRela_publi_markInput | MarketingCreateOrConnectWithoutRela_publi_markInput[]
    createMany?: MarketingCreateManyRela_publi_markInputEnvelope
    connect?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
  }

  export type MarketingUncheckedCreateNestedManyWithoutRela_publi_markInput = {
    create?: XOR<MarketingCreateWithoutRela_publi_markInput, MarketingUncheckedCreateWithoutRela_publi_markInput> | MarketingCreateWithoutRela_publi_markInput[] | MarketingUncheckedCreateWithoutRela_publi_markInput[]
    connectOrCreate?: MarketingCreateOrConnectWithoutRela_publi_markInput | MarketingCreateOrConnectWithoutRela_publi_markInput[]
    createMany?: MarketingCreateManyRela_publi_markInputEnvelope
    connect?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
  }

  export type Publicaciones_fotoUpdateOneRequiredWithoutPublicacionesNestedInput = {
    create?: XOR<Publicaciones_fotoCreateWithoutPublicacionesInput, Publicaciones_fotoUncheckedCreateWithoutPublicacionesInput>
    connectOrCreate?: Publicaciones_fotoCreateOrConnectWithoutPublicacionesInput
    upsert?: Publicaciones_fotoUpsertWithoutPublicacionesInput
    connect?: Publicaciones_fotoWhereUniqueInput
    update?: XOR<XOR<Publicaciones_fotoUpdateToOneWithWhereWithoutPublicacionesInput, Publicaciones_fotoUpdateWithoutPublicacionesInput>, Publicaciones_fotoUncheckedUpdateWithoutPublicacionesInput>
  }

  export type MarketingUpdateManyWithoutRela_publi_markNestedInput = {
    create?: XOR<MarketingCreateWithoutRela_publi_markInput, MarketingUncheckedCreateWithoutRela_publi_markInput> | MarketingCreateWithoutRela_publi_markInput[] | MarketingUncheckedCreateWithoutRela_publi_markInput[]
    connectOrCreate?: MarketingCreateOrConnectWithoutRela_publi_markInput | MarketingCreateOrConnectWithoutRela_publi_markInput[]
    upsert?: MarketingUpsertWithWhereUniqueWithoutRela_publi_markInput | MarketingUpsertWithWhereUniqueWithoutRela_publi_markInput[]
    createMany?: MarketingCreateManyRela_publi_markInputEnvelope
    set?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
    disconnect?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
    delete?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
    connect?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
    update?: MarketingUpdateWithWhereUniqueWithoutRela_publi_markInput | MarketingUpdateWithWhereUniqueWithoutRela_publi_markInput[]
    updateMany?: MarketingUpdateManyWithWhereWithoutRela_publi_markInput | MarketingUpdateManyWithWhereWithoutRela_publi_markInput[]
    deleteMany?: MarketingScalarWhereInput | MarketingScalarWhereInput[]
  }

  export type MarketingUncheckedUpdateManyWithoutRela_publi_markNestedInput = {
    create?: XOR<MarketingCreateWithoutRela_publi_markInput, MarketingUncheckedCreateWithoutRela_publi_markInput> | MarketingCreateWithoutRela_publi_markInput[] | MarketingUncheckedCreateWithoutRela_publi_markInput[]
    connectOrCreate?: MarketingCreateOrConnectWithoutRela_publi_markInput | MarketingCreateOrConnectWithoutRela_publi_markInput[]
    upsert?: MarketingUpsertWithWhereUniqueWithoutRela_publi_markInput | MarketingUpsertWithWhereUniqueWithoutRela_publi_markInput[]
    createMany?: MarketingCreateManyRela_publi_markInputEnvelope
    set?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
    disconnect?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
    delete?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
    connect?: MarketingWhereUniqueInput | MarketingWhereUniqueInput[]
    update?: MarketingUpdateWithWhereUniqueWithoutRela_publi_markInput | MarketingUpdateWithWhereUniqueWithoutRela_publi_markInput[]
    updateMany?: MarketingUpdateManyWithWhereWithoutRela_publi_markInput | MarketingUpdateManyWithWhereWithoutRela_publi_markInput[]
    deleteMany?: MarketingScalarWhereInput | MarketingScalarWhereInput[]
  }

  export type PublicacionesCreateNestedManyWithoutRela_foto_publiInput = {
    create?: XOR<PublicacionesCreateWithoutRela_foto_publiInput, PublicacionesUncheckedCreateWithoutRela_foto_publiInput> | PublicacionesCreateWithoutRela_foto_publiInput[] | PublicacionesUncheckedCreateWithoutRela_foto_publiInput[]
    connectOrCreate?: PublicacionesCreateOrConnectWithoutRela_foto_publiInput | PublicacionesCreateOrConnectWithoutRela_foto_publiInput[]
    createMany?: PublicacionesCreateManyRela_foto_publiInputEnvelope
    connect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
  }

  export type PublicacionesUncheckedCreateNestedManyWithoutRela_foto_publiInput = {
    create?: XOR<PublicacionesCreateWithoutRela_foto_publiInput, PublicacionesUncheckedCreateWithoutRela_foto_publiInput> | PublicacionesCreateWithoutRela_foto_publiInput[] | PublicacionesUncheckedCreateWithoutRela_foto_publiInput[]
    connectOrCreate?: PublicacionesCreateOrConnectWithoutRela_foto_publiInput | PublicacionesCreateOrConnectWithoutRela_foto_publiInput[]
    createMany?: PublicacionesCreateManyRela_foto_publiInputEnvelope
    connect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
  }

  export type PublicacionesUpdateManyWithoutRela_foto_publiNestedInput = {
    create?: XOR<PublicacionesCreateWithoutRela_foto_publiInput, PublicacionesUncheckedCreateWithoutRela_foto_publiInput> | PublicacionesCreateWithoutRela_foto_publiInput[] | PublicacionesUncheckedCreateWithoutRela_foto_publiInput[]
    connectOrCreate?: PublicacionesCreateOrConnectWithoutRela_foto_publiInput | PublicacionesCreateOrConnectWithoutRela_foto_publiInput[]
    upsert?: PublicacionesUpsertWithWhereUniqueWithoutRela_foto_publiInput | PublicacionesUpsertWithWhereUniqueWithoutRela_foto_publiInput[]
    createMany?: PublicacionesCreateManyRela_foto_publiInputEnvelope
    set?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    disconnect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    delete?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    connect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    update?: PublicacionesUpdateWithWhereUniqueWithoutRela_foto_publiInput | PublicacionesUpdateWithWhereUniqueWithoutRela_foto_publiInput[]
    updateMany?: PublicacionesUpdateManyWithWhereWithoutRela_foto_publiInput | PublicacionesUpdateManyWithWhereWithoutRela_foto_publiInput[]
    deleteMany?: PublicacionesScalarWhereInput | PublicacionesScalarWhereInput[]
  }

  export type PublicacionesUncheckedUpdateManyWithoutRela_foto_publiNestedInput = {
    create?: XOR<PublicacionesCreateWithoutRela_foto_publiInput, PublicacionesUncheckedCreateWithoutRela_foto_publiInput> | PublicacionesCreateWithoutRela_foto_publiInput[] | PublicacionesUncheckedCreateWithoutRela_foto_publiInput[]
    connectOrCreate?: PublicacionesCreateOrConnectWithoutRela_foto_publiInput | PublicacionesCreateOrConnectWithoutRela_foto_publiInput[]
    upsert?: PublicacionesUpsertWithWhereUniqueWithoutRela_foto_publiInput | PublicacionesUpsertWithWhereUniqueWithoutRela_foto_publiInput[]
    createMany?: PublicacionesCreateManyRela_foto_publiInputEnvelope
    set?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    disconnect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    delete?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    connect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    update?: PublicacionesUpdateWithWhereUniqueWithoutRela_foto_publiInput | PublicacionesUpdateWithWhereUniqueWithoutRela_foto_publiInput[]
    updateMany?: PublicacionesUpdateManyWithWhereWithoutRela_foto_publiInput | PublicacionesUpdateManyWithWhereWithoutRela_foto_publiInput[]
    deleteMany?: PublicacionesScalarWhereInput | PublicacionesScalarWhereInput[]
  }

  export type Productos_fotoCreateNestedOneWithoutProductosInput = {
    create?: XOR<Productos_fotoCreateWithoutProductosInput, Productos_fotoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: Productos_fotoCreateOrConnectWithoutProductosInput
    connect?: Productos_fotoWhereUniqueInput
  }

  export type EmprendimientoCreateNestedManyWithoutRela_produ_empInput = {
    create?: XOR<EmprendimientoCreateWithoutRela_produ_empInput, EmprendimientoUncheckedCreateWithoutRela_produ_empInput> | EmprendimientoCreateWithoutRela_produ_empInput[] | EmprendimientoUncheckedCreateWithoutRela_produ_empInput[]
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutRela_produ_empInput | EmprendimientoCreateOrConnectWithoutRela_produ_empInput[]
    createMany?: EmprendimientoCreateManyRela_produ_empInputEnvelope
    connect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
  }

  export type Materiales_productoCreateNestedManyWithoutRela_prod_mateInput = {
    create?: XOR<Materiales_productoCreateWithoutRela_prod_mateInput, Materiales_productoUncheckedCreateWithoutRela_prod_mateInput> | Materiales_productoCreateWithoutRela_prod_mateInput[] | Materiales_productoUncheckedCreateWithoutRela_prod_mateInput[]
    connectOrCreate?: Materiales_productoCreateOrConnectWithoutRela_prod_mateInput | Materiales_productoCreateOrConnectWithoutRela_prod_mateInput[]
    createMany?: Materiales_productoCreateManyRela_prod_mateInputEnvelope
    connect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
  }

  export type Emprendimiento_productoCreateNestedManyWithoutRela_prod_empInput = {
    create?: XOR<Emprendimiento_productoCreateWithoutRela_prod_empInput, Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput> | Emprendimiento_productoCreateWithoutRela_prod_empInput[] | Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput[]
    connectOrCreate?: Emprendimiento_productoCreateOrConnectWithoutRela_prod_empInput | Emprendimiento_productoCreateOrConnectWithoutRela_prod_empInput[]
    createMany?: Emprendimiento_productoCreateManyRela_prod_empInputEnvelope
    connect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
  }

  export type EmprendimientoUncheckedCreateNestedManyWithoutRela_produ_empInput = {
    create?: XOR<EmprendimientoCreateWithoutRela_produ_empInput, EmprendimientoUncheckedCreateWithoutRela_produ_empInput> | EmprendimientoCreateWithoutRela_produ_empInput[] | EmprendimientoUncheckedCreateWithoutRela_produ_empInput[]
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutRela_produ_empInput | EmprendimientoCreateOrConnectWithoutRela_produ_empInput[]
    createMany?: EmprendimientoCreateManyRela_produ_empInputEnvelope
    connect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
  }

  export type Materiales_productoUncheckedCreateNestedManyWithoutRela_prod_mateInput = {
    create?: XOR<Materiales_productoCreateWithoutRela_prod_mateInput, Materiales_productoUncheckedCreateWithoutRela_prod_mateInput> | Materiales_productoCreateWithoutRela_prod_mateInput[] | Materiales_productoUncheckedCreateWithoutRela_prod_mateInput[]
    connectOrCreate?: Materiales_productoCreateOrConnectWithoutRela_prod_mateInput | Materiales_productoCreateOrConnectWithoutRela_prod_mateInput[]
    createMany?: Materiales_productoCreateManyRela_prod_mateInputEnvelope
    connect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
  }

  export type Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_prod_empInput = {
    create?: XOR<Emprendimiento_productoCreateWithoutRela_prod_empInput, Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput> | Emprendimiento_productoCreateWithoutRela_prod_empInput[] | Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput[]
    connectOrCreate?: Emprendimiento_productoCreateOrConnectWithoutRela_prod_empInput | Emprendimiento_productoCreateOrConnectWithoutRela_prod_empInput[]
    createMany?: Emprendimiento_productoCreateManyRela_prod_empInputEnvelope
    connect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
  }

  export type Productos_fotoUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<Productos_fotoCreateWithoutProductosInput, Productos_fotoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: Productos_fotoCreateOrConnectWithoutProductosInput
    upsert?: Productos_fotoUpsertWithoutProductosInput
    connect?: Productos_fotoWhereUniqueInput
    update?: XOR<XOR<Productos_fotoUpdateToOneWithWhereWithoutProductosInput, Productos_fotoUpdateWithoutProductosInput>, Productos_fotoUncheckedUpdateWithoutProductosInput>
  }

  export type EmprendimientoUpdateManyWithoutRela_produ_empNestedInput = {
    create?: XOR<EmprendimientoCreateWithoutRela_produ_empInput, EmprendimientoUncheckedCreateWithoutRela_produ_empInput> | EmprendimientoCreateWithoutRela_produ_empInput[] | EmprendimientoUncheckedCreateWithoutRela_produ_empInput[]
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutRela_produ_empInput | EmprendimientoCreateOrConnectWithoutRela_produ_empInput[]
    upsert?: EmprendimientoUpsertWithWhereUniqueWithoutRela_produ_empInput | EmprendimientoUpsertWithWhereUniqueWithoutRela_produ_empInput[]
    createMany?: EmprendimientoCreateManyRela_produ_empInputEnvelope
    set?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    disconnect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    delete?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    connect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    update?: EmprendimientoUpdateWithWhereUniqueWithoutRela_produ_empInput | EmprendimientoUpdateWithWhereUniqueWithoutRela_produ_empInput[]
    updateMany?: EmprendimientoUpdateManyWithWhereWithoutRela_produ_empInput | EmprendimientoUpdateManyWithWhereWithoutRela_produ_empInput[]
    deleteMany?: EmprendimientoScalarWhereInput | EmprendimientoScalarWhereInput[]
  }

  export type Materiales_productoUpdateManyWithoutRela_prod_mateNestedInput = {
    create?: XOR<Materiales_productoCreateWithoutRela_prod_mateInput, Materiales_productoUncheckedCreateWithoutRela_prod_mateInput> | Materiales_productoCreateWithoutRela_prod_mateInput[] | Materiales_productoUncheckedCreateWithoutRela_prod_mateInput[]
    connectOrCreate?: Materiales_productoCreateOrConnectWithoutRela_prod_mateInput | Materiales_productoCreateOrConnectWithoutRela_prod_mateInput[]
    upsert?: Materiales_productoUpsertWithWhereUniqueWithoutRela_prod_mateInput | Materiales_productoUpsertWithWhereUniqueWithoutRela_prod_mateInput[]
    createMany?: Materiales_productoCreateManyRela_prod_mateInputEnvelope
    set?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    disconnect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    delete?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    connect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    update?: Materiales_productoUpdateWithWhereUniqueWithoutRela_prod_mateInput | Materiales_productoUpdateWithWhereUniqueWithoutRela_prod_mateInput[]
    updateMany?: Materiales_productoUpdateManyWithWhereWithoutRela_prod_mateInput | Materiales_productoUpdateManyWithWhereWithoutRela_prod_mateInput[]
    deleteMany?: Materiales_productoScalarWhereInput | Materiales_productoScalarWhereInput[]
  }

  export type Emprendimiento_productoUpdateManyWithoutRela_prod_empNestedInput = {
    create?: XOR<Emprendimiento_productoCreateWithoutRela_prod_empInput, Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput> | Emprendimiento_productoCreateWithoutRela_prod_empInput[] | Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput[]
    connectOrCreate?: Emprendimiento_productoCreateOrConnectWithoutRela_prod_empInput | Emprendimiento_productoCreateOrConnectWithoutRela_prod_empInput[]
    upsert?: Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_prod_empInput | Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_prod_empInput[]
    createMany?: Emprendimiento_productoCreateManyRela_prod_empInputEnvelope
    set?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    disconnect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    delete?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    connect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    update?: Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_prod_empInput | Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_prod_empInput[]
    updateMany?: Emprendimiento_productoUpdateManyWithWhereWithoutRela_prod_empInput | Emprendimiento_productoUpdateManyWithWhereWithoutRela_prod_empInput[]
    deleteMany?: Emprendimiento_productoScalarWhereInput | Emprendimiento_productoScalarWhereInput[]
  }

  export type EmprendimientoUncheckedUpdateManyWithoutRela_produ_empNestedInput = {
    create?: XOR<EmprendimientoCreateWithoutRela_produ_empInput, EmprendimientoUncheckedCreateWithoutRela_produ_empInput> | EmprendimientoCreateWithoutRela_produ_empInput[] | EmprendimientoUncheckedCreateWithoutRela_produ_empInput[]
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutRela_produ_empInput | EmprendimientoCreateOrConnectWithoutRela_produ_empInput[]
    upsert?: EmprendimientoUpsertWithWhereUniqueWithoutRela_produ_empInput | EmprendimientoUpsertWithWhereUniqueWithoutRela_produ_empInput[]
    createMany?: EmprendimientoCreateManyRela_produ_empInputEnvelope
    set?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    disconnect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    delete?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    connect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    update?: EmprendimientoUpdateWithWhereUniqueWithoutRela_produ_empInput | EmprendimientoUpdateWithWhereUniqueWithoutRela_produ_empInput[]
    updateMany?: EmprendimientoUpdateManyWithWhereWithoutRela_produ_empInput | EmprendimientoUpdateManyWithWhereWithoutRela_produ_empInput[]
    deleteMany?: EmprendimientoScalarWhereInput | EmprendimientoScalarWhereInput[]
  }

  export type Materiales_productoUncheckedUpdateManyWithoutRela_prod_mateNestedInput = {
    create?: XOR<Materiales_productoCreateWithoutRela_prod_mateInput, Materiales_productoUncheckedCreateWithoutRela_prod_mateInput> | Materiales_productoCreateWithoutRela_prod_mateInput[] | Materiales_productoUncheckedCreateWithoutRela_prod_mateInput[]
    connectOrCreate?: Materiales_productoCreateOrConnectWithoutRela_prod_mateInput | Materiales_productoCreateOrConnectWithoutRela_prod_mateInput[]
    upsert?: Materiales_productoUpsertWithWhereUniqueWithoutRela_prod_mateInput | Materiales_productoUpsertWithWhereUniqueWithoutRela_prod_mateInput[]
    createMany?: Materiales_productoCreateManyRela_prod_mateInputEnvelope
    set?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    disconnect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    delete?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    connect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    update?: Materiales_productoUpdateWithWhereUniqueWithoutRela_prod_mateInput | Materiales_productoUpdateWithWhereUniqueWithoutRela_prod_mateInput[]
    updateMany?: Materiales_productoUpdateManyWithWhereWithoutRela_prod_mateInput | Materiales_productoUpdateManyWithWhereWithoutRela_prod_mateInput[]
    deleteMany?: Materiales_productoScalarWhereInput | Materiales_productoScalarWhereInput[]
  }

  export type Emprendimiento_productoUncheckedUpdateManyWithoutRela_prod_empNestedInput = {
    create?: XOR<Emprendimiento_productoCreateWithoutRela_prod_empInput, Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput> | Emprendimiento_productoCreateWithoutRela_prod_empInput[] | Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput[]
    connectOrCreate?: Emprendimiento_productoCreateOrConnectWithoutRela_prod_empInput | Emprendimiento_productoCreateOrConnectWithoutRela_prod_empInput[]
    upsert?: Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_prod_empInput | Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_prod_empInput[]
    createMany?: Emprendimiento_productoCreateManyRela_prod_empInputEnvelope
    set?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    disconnect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    delete?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    connect?: Emprendimiento_productoWhereUniqueInput | Emprendimiento_productoWhereUniqueInput[]
    update?: Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_prod_empInput | Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_prod_empInput[]
    updateMany?: Emprendimiento_productoUpdateManyWithWhereWithoutRela_prod_empInput | Emprendimiento_productoUpdateManyWithWhereWithoutRela_prod_empInput[]
    deleteMany?: Emprendimiento_productoScalarWhereInput | Emprendimiento_productoScalarWhereInput[]
  }

  export type ProductosCreateNestedManyWithoutRela_foto_produInput = {
    create?: XOR<ProductosCreateWithoutRela_foto_produInput, ProductosUncheckedCreateWithoutRela_foto_produInput> | ProductosCreateWithoutRela_foto_produInput[] | ProductosUncheckedCreateWithoutRela_foto_produInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutRela_foto_produInput | ProductosCreateOrConnectWithoutRela_foto_produInput[]
    createMany?: ProductosCreateManyRela_foto_produInputEnvelope
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
  }

  export type EmprendimientoCreateNestedManyWithoutRela_emp_prodfotoInput = {
    create?: XOR<EmprendimientoCreateWithoutRela_emp_prodfotoInput, EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput> | EmprendimientoCreateWithoutRela_emp_prodfotoInput[] | EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput[]
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutRela_emp_prodfotoInput | EmprendimientoCreateOrConnectWithoutRela_emp_prodfotoInput[]
    createMany?: EmprendimientoCreateManyRela_emp_prodfotoInputEnvelope
    connect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
  }

  export type ProductosUncheckedCreateNestedManyWithoutRela_foto_produInput = {
    create?: XOR<ProductosCreateWithoutRela_foto_produInput, ProductosUncheckedCreateWithoutRela_foto_produInput> | ProductosCreateWithoutRela_foto_produInput[] | ProductosUncheckedCreateWithoutRela_foto_produInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutRela_foto_produInput | ProductosCreateOrConnectWithoutRela_foto_produInput[]
    createMany?: ProductosCreateManyRela_foto_produInputEnvelope
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
  }

  export type EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_prodfotoInput = {
    create?: XOR<EmprendimientoCreateWithoutRela_emp_prodfotoInput, EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput> | EmprendimientoCreateWithoutRela_emp_prodfotoInput[] | EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput[]
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutRela_emp_prodfotoInput | EmprendimientoCreateOrConnectWithoutRela_emp_prodfotoInput[]
    createMany?: EmprendimientoCreateManyRela_emp_prodfotoInputEnvelope
    connect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
  }

  export type ProductosUpdateManyWithoutRela_foto_produNestedInput = {
    create?: XOR<ProductosCreateWithoutRela_foto_produInput, ProductosUncheckedCreateWithoutRela_foto_produInput> | ProductosCreateWithoutRela_foto_produInput[] | ProductosUncheckedCreateWithoutRela_foto_produInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutRela_foto_produInput | ProductosCreateOrConnectWithoutRela_foto_produInput[]
    upsert?: ProductosUpsertWithWhereUniqueWithoutRela_foto_produInput | ProductosUpsertWithWhereUniqueWithoutRela_foto_produInput[]
    createMany?: ProductosCreateManyRela_foto_produInputEnvelope
    set?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    disconnect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    delete?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    update?: ProductosUpdateWithWhereUniqueWithoutRela_foto_produInput | ProductosUpdateWithWhereUniqueWithoutRela_foto_produInput[]
    updateMany?: ProductosUpdateManyWithWhereWithoutRela_foto_produInput | ProductosUpdateManyWithWhereWithoutRela_foto_produInput[]
    deleteMany?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
  }

  export type EmprendimientoUpdateManyWithoutRela_emp_prodfotoNestedInput = {
    create?: XOR<EmprendimientoCreateWithoutRela_emp_prodfotoInput, EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput> | EmprendimientoCreateWithoutRela_emp_prodfotoInput[] | EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput[]
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutRela_emp_prodfotoInput | EmprendimientoCreateOrConnectWithoutRela_emp_prodfotoInput[]
    upsert?: EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_prodfotoInput | EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_prodfotoInput[]
    createMany?: EmprendimientoCreateManyRela_emp_prodfotoInputEnvelope
    set?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    disconnect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    delete?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    connect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    update?: EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_prodfotoInput | EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_prodfotoInput[]
    updateMany?: EmprendimientoUpdateManyWithWhereWithoutRela_emp_prodfotoInput | EmprendimientoUpdateManyWithWhereWithoutRela_emp_prodfotoInput[]
    deleteMany?: EmprendimientoScalarWhereInput | EmprendimientoScalarWhereInput[]
  }

  export type ProductosUncheckedUpdateManyWithoutRela_foto_produNestedInput = {
    create?: XOR<ProductosCreateWithoutRela_foto_produInput, ProductosUncheckedCreateWithoutRela_foto_produInput> | ProductosCreateWithoutRela_foto_produInput[] | ProductosUncheckedCreateWithoutRela_foto_produInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutRela_foto_produInput | ProductosCreateOrConnectWithoutRela_foto_produInput[]
    upsert?: ProductosUpsertWithWhereUniqueWithoutRela_foto_produInput | ProductosUpsertWithWhereUniqueWithoutRela_foto_produInput[]
    createMany?: ProductosCreateManyRela_foto_produInputEnvelope
    set?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    disconnect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    delete?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    update?: ProductosUpdateWithWhereUniqueWithoutRela_foto_produInput | ProductosUpdateWithWhereUniqueWithoutRela_foto_produInput[]
    updateMany?: ProductosUpdateManyWithWhereWithoutRela_foto_produInput | ProductosUpdateManyWithWhereWithoutRela_foto_produInput[]
    deleteMany?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
  }

  export type EmprendimientoUncheckedUpdateManyWithoutRela_emp_prodfotoNestedInput = {
    create?: XOR<EmprendimientoCreateWithoutRela_emp_prodfotoInput, EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput> | EmprendimientoCreateWithoutRela_emp_prodfotoInput[] | EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput[]
    connectOrCreate?: EmprendimientoCreateOrConnectWithoutRela_emp_prodfotoInput | EmprendimientoCreateOrConnectWithoutRela_emp_prodfotoInput[]
    upsert?: EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_prodfotoInput | EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_prodfotoInput[]
    createMany?: EmprendimientoCreateManyRela_emp_prodfotoInputEnvelope
    set?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    disconnect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    delete?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    connect?: EmprendimientoWhereUniqueInput | EmprendimientoWhereUniqueInput[]
    update?: EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_prodfotoInput | EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_prodfotoInput[]
    updateMany?: EmprendimientoUpdateManyWithWhereWithoutRela_emp_prodfotoInput | EmprendimientoUpdateManyWithWhereWithoutRela_emp_prodfotoInput[]
    deleteMany?: EmprendimientoScalarWhereInput | EmprendimientoScalarWhereInput[]
  }

  export type ProductosCreateNestedOneWithoutMateriales_productoInput = {
    create?: XOR<ProductosCreateWithoutMateriales_productoInput, ProductosUncheckedCreateWithoutMateriales_productoInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutMateriales_productoInput
    connect?: ProductosWhereUniqueInput
  }

  export type MaterialesCreateNestedOneWithoutMateriales_productoInput = {
    create?: XOR<MaterialesCreateWithoutMateriales_productoInput, MaterialesUncheckedCreateWithoutMateriales_productoInput>
    connectOrCreate?: MaterialesCreateOrConnectWithoutMateriales_productoInput
    connect?: MaterialesWhereUniqueInput
  }

  export type ProductosUpdateOneRequiredWithoutMateriales_productoNestedInput = {
    create?: XOR<ProductosCreateWithoutMateriales_productoInput, ProductosUncheckedCreateWithoutMateriales_productoInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutMateriales_productoInput
    upsert?: ProductosUpsertWithoutMateriales_productoInput
    connect?: ProductosWhereUniqueInput
    update?: XOR<XOR<ProductosUpdateToOneWithWhereWithoutMateriales_productoInput, ProductosUpdateWithoutMateriales_productoInput>, ProductosUncheckedUpdateWithoutMateriales_productoInput>
  }

  export type MaterialesUpdateOneRequiredWithoutMateriales_productoNestedInput = {
    create?: XOR<MaterialesCreateWithoutMateriales_productoInput, MaterialesUncheckedCreateWithoutMateriales_productoInput>
    connectOrCreate?: MaterialesCreateOrConnectWithoutMateriales_productoInput
    upsert?: MaterialesUpsertWithoutMateriales_productoInput
    connect?: MaterialesWhereUniqueInput
    update?: XOR<XOR<MaterialesUpdateToOneWithWhereWithoutMateriales_productoInput, MaterialesUpdateWithoutMateriales_productoInput>, MaterialesUncheckedUpdateWithoutMateriales_productoInput>
  }

  export type Materiales_fotoCreateNestedOneWithoutMaterialesInput = {
    create?: XOR<Materiales_fotoCreateWithoutMaterialesInput, Materiales_fotoUncheckedCreateWithoutMaterialesInput>
    connectOrCreate?: Materiales_fotoCreateOrConnectWithoutMaterialesInput
    connect?: Materiales_fotoWhereUniqueInput
  }

  export type Materiales_productoCreateNestedManyWithoutRela_mate_produInput = {
    create?: XOR<Materiales_productoCreateWithoutRela_mate_produInput, Materiales_productoUncheckedCreateWithoutRela_mate_produInput> | Materiales_productoCreateWithoutRela_mate_produInput[] | Materiales_productoUncheckedCreateWithoutRela_mate_produInput[]
    connectOrCreate?: Materiales_productoCreateOrConnectWithoutRela_mate_produInput | Materiales_productoCreateOrConnectWithoutRela_mate_produInput[]
    createMany?: Materiales_productoCreateManyRela_mate_produInputEnvelope
    connect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
  }

  export type Materiales_productoUncheckedCreateNestedManyWithoutRela_mate_produInput = {
    create?: XOR<Materiales_productoCreateWithoutRela_mate_produInput, Materiales_productoUncheckedCreateWithoutRela_mate_produInput> | Materiales_productoCreateWithoutRela_mate_produInput[] | Materiales_productoUncheckedCreateWithoutRela_mate_produInput[]
    connectOrCreate?: Materiales_productoCreateOrConnectWithoutRela_mate_produInput | Materiales_productoCreateOrConnectWithoutRela_mate_produInput[]
    createMany?: Materiales_productoCreateManyRela_mate_produInputEnvelope
    connect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
  }

  export type Materiales_fotoUpdateOneRequiredWithoutMaterialesNestedInput = {
    create?: XOR<Materiales_fotoCreateWithoutMaterialesInput, Materiales_fotoUncheckedCreateWithoutMaterialesInput>
    connectOrCreate?: Materiales_fotoCreateOrConnectWithoutMaterialesInput
    upsert?: Materiales_fotoUpsertWithoutMaterialesInput
    connect?: Materiales_fotoWhereUniqueInput
    update?: XOR<XOR<Materiales_fotoUpdateToOneWithWhereWithoutMaterialesInput, Materiales_fotoUpdateWithoutMaterialesInput>, Materiales_fotoUncheckedUpdateWithoutMaterialesInput>
  }

  export type Materiales_productoUpdateManyWithoutRela_mate_produNestedInput = {
    create?: XOR<Materiales_productoCreateWithoutRela_mate_produInput, Materiales_productoUncheckedCreateWithoutRela_mate_produInput> | Materiales_productoCreateWithoutRela_mate_produInput[] | Materiales_productoUncheckedCreateWithoutRela_mate_produInput[]
    connectOrCreate?: Materiales_productoCreateOrConnectWithoutRela_mate_produInput | Materiales_productoCreateOrConnectWithoutRela_mate_produInput[]
    upsert?: Materiales_productoUpsertWithWhereUniqueWithoutRela_mate_produInput | Materiales_productoUpsertWithWhereUniqueWithoutRela_mate_produInput[]
    createMany?: Materiales_productoCreateManyRela_mate_produInputEnvelope
    set?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    disconnect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    delete?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    connect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    update?: Materiales_productoUpdateWithWhereUniqueWithoutRela_mate_produInput | Materiales_productoUpdateWithWhereUniqueWithoutRela_mate_produInput[]
    updateMany?: Materiales_productoUpdateManyWithWhereWithoutRela_mate_produInput | Materiales_productoUpdateManyWithWhereWithoutRela_mate_produInput[]
    deleteMany?: Materiales_productoScalarWhereInput | Materiales_productoScalarWhereInput[]
  }

  export type Materiales_productoUncheckedUpdateManyWithoutRela_mate_produNestedInput = {
    create?: XOR<Materiales_productoCreateWithoutRela_mate_produInput, Materiales_productoUncheckedCreateWithoutRela_mate_produInput> | Materiales_productoCreateWithoutRela_mate_produInput[] | Materiales_productoUncheckedCreateWithoutRela_mate_produInput[]
    connectOrCreate?: Materiales_productoCreateOrConnectWithoutRela_mate_produInput | Materiales_productoCreateOrConnectWithoutRela_mate_produInput[]
    upsert?: Materiales_productoUpsertWithWhereUniqueWithoutRela_mate_produInput | Materiales_productoUpsertWithWhereUniqueWithoutRela_mate_produInput[]
    createMany?: Materiales_productoCreateManyRela_mate_produInputEnvelope
    set?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    disconnect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    delete?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    connect?: Materiales_productoWhereUniqueInput | Materiales_productoWhereUniqueInput[]
    update?: Materiales_productoUpdateWithWhereUniqueWithoutRela_mate_produInput | Materiales_productoUpdateWithWhereUniqueWithoutRela_mate_produInput[]
    updateMany?: Materiales_productoUpdateManyWithWhereWithoutRela_mate_produInput | Materiales_productoUpdateManyWithWhereWithoutRela_mate_produInput[]
    deleteMany?: Materiales_productoScalarWhereInput | Materiales_productoScalarWhereInput[]
  }

  export type MaterialesCreateNestedManyWithoutRela_foto_mateInput = {
    create?: XOR<MaterialesCreateWithoutRela_foto_mateInput, MaterialesUncheckedCreateWithoutRela_foto_mateInput> | MaterialesCreateWithoutRela_foto_mateInput[] | MaterialesUncheckedCreateWithoutRela_foto_mateInput[]
    connectOrCreate?: MaterialesCreateOrConnectWithoutRela_foto_mateInput | MaterialesCreateOrConnectWithoutRela_foto_mateInput[]
    createMany?: MaterialesCreateManyRela_foto_mateInputEnvelope
    connect?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
  }

  export type MaterialesUncheckedCreateNestedManyWithoutRela_foto_mateInput = {
    create?: XOR<MaterialesCreateWithoutRela_foto_mateInput, MaterialesUncheckedCreateWithoutRela_foto_mateInput> | MaterialesCreateWithoutRela_foto_mateInput[] | MaterialesUncheckedCreateWithoutRela_foto_mateInput[]
    connectOrCreate?: MaterialesCreateOrConnectWithoutRela_foto_mateInput | MaterialesCreateOrConnectWithoutRela_foto_mateInput[]
    createMany?: MaterialesCreateManyRela_foto_mateInputEnvelope
    connect?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
  }

  export type MaterialesUpdateManyWithoutRela_foto_mateNestedInput = {
    create?: XOR<MaterialesCreateWithoutRela_foto_mateInput, MaterialesUncheckedCreateWithoutRela_foto_mateInput> | MaterialesCreateWithoutRela_foto_mateInput[] | MaterialesUncheckedCreateWithoutRela_foto_mateInput[]
    connectOrCreate?: MaterialesCreateOrConnectWithoutRela_foto_mateInput | MaterialesCreateOrConnectWithoutRela_foto_mateInput[]
    upsert?: MaterialesUpsertWithWhereUniqueWithoutRela_foto_mateInput | MaterialesUpsertWithWhereUniqueWithoutRela_foto_mateInput[]
    createMany?: MaterialesCreateManyRela_foto_mateInputEnvelope
    set?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
    disconnect?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
    delete?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
    connect?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
    update?: MaterialesUpdateWithWhereUniqueWithoutRela_foto_mateInput | MaterialesUpdateWithWhereUniqueWithoutRela_foto_mateInput[]
    updateMany?: MaterialesUpdateManyWithWhereWithoutRela_foto_mateInput | MaterialesUpdateManyWithWhereWithoutRela_foto_mateInput[]
    deleteMany?: MaterialesScalarWhereInput | MaterialesScalarWhereInput[]
  }

  export type MaterialesUncheckedUpdateManyWithoutRela_foto_mateNestedInput = {
    create?: XOR<MaterialesCreateWithoutRela_foto_mateInput, MaterialesUncheckedCreateWithoutRela_foto_mateInput> | MaterialesCreateWithoutRela_foto_mateInput[] | MaterialesUncheckedCreateWithoutRela_foto_mateInput[]
    connectOrCreate?: MaterialesCreateOrConnectWithoutRela_foto_mateInput | MaterialesCreateOrConnectWithoutRela_foto_mateInput[]
    upsert?: MaterialesUpsertWithWhereUniqueWithoutRela_foto_mateInput | MaterialesUpsertWithWhereUniqueWithoutRela_foto_mateInput[]
    createMany?: MaterialesCreateManyRela_foto_mateInputEnvelope
    set?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
    disconnect?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
    delete?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
    connect?: MaterialesWhereUniqueInput | MaterialesWhereUniqueInput[]
    update?: MaterialesUpdateWithWhereUniqueWithoutRela_foto_mateInput | MaterialesUpdateWithWhereUniqueWithoutRela_foto_mateInput[]
    updateMany?: MaterialesUpdateManyWithWhereWithoutRela_foto_mateInput | MaterialesUpdateManyWithWhereWithoutRela_foto_mateInput[]
    deleteMany?: MaterialesScalarWhereInput | MaterialesScalarWhereInput[]
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type Foto_UsuarioCreateWithoutUsuariosInput = {
    foto_perfil: string
    foto_contacto?: ContactosCreateNestedManyWithoutFotoInput
  }

  export type Foto_UsuarioUncheckedCreateWithoutUsuariosInput = {
    Id_fotousu?: number
    foto_perfil: string
    foto_contacto?: ContactosUncheckedCreateNestedManyWithoutFotoInput
  }

  export type Foto_UsuarioCreateOrConnectWithoutUsuariosInput = {
    where: Foto_UsuarioWhereUniqueInput
    create: XOR<Foto_UsuarioCreateWithoutUsuariosInput, Foto_UsuarioUncheckedCreateWithoutUsuariosInput>
  }

  export type EmprendimientoCreateWithoutUsuarioInput = {
    typo: string
    descripcion: string
    rela_emp_prodfoto: Productos_fotoCreateNestedOneWithoutEmprendimiento_productofotoInput
    rela_produ_emp: ProductosCreateNestedOneWithoutEmprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoUncheckedCreateWithoutUsuarioInput = {
    typo: string
    descripcion: string
    producto_foto: number
    producto: string
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoCreateOrConnectWithoutUsuarioInput = {
    where: EmprendimientoWhereUniqueInput
    create: XOR<EmprendimientoCreateWithoutUsuarioInput, EmprendimientoUncheckedCreateWithoutUsuarioInput>
  }

  export type ContactosCreateWithoutUsuarioInput = {
    telefono: number
    nombre: string
    redes_soc: string
    notas_perz: string
    email_contactos: string
    foto: Foto_UsuarioCreateNestedOneWithoutFoto_contactoInput
  }

  export type ContactosUncheckedCreateWithoutUsuarioInput = {
    Id_contactos?: number
    telefono: number
    nombre: string
    redes_soc: string
    notas_perz: string
    email_contactos: string
    foto_contacto: number
  }

  export type ContactosCreateOrConnectWithoutUsuarioInput = {
    where: ContactosWhereUniqueInput
    create: XOR<ContactosCreateWithoutUsuarioInput, ContactosUncheckedCreateWithoutUsuarioInput>
  }

  export type Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput = {
    rela_colo_usuemp: Colores_marcaCreateNestedOneWithoutUsuario_emprendimientoInput
    rela_emp_usuemp: EmprendimientoCreateNestedOneWithoutUsuario_emprendimientoInput
  }

  export type Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput = {
    Id_usu_emp?: number
    nom_color: string
    typo: string
  }

  export type Usuario_EmprendimientoCreateOrConnectWithoutRela_usu_usuempInput = {
    where: Usuario_EmprendimientoWhereUniqueInput
    create: XOR<Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput>
  }

  export type Usuario_EmprendimientoCreateManyRela_usu_usuempInputEnvelope = {
    data: Usuario_EmprendimientoCreateManyRela_usu_usuempInput | Usuario_EmprendimientoCreateManyRela_usu_usuempInput[]
    skipDuplicates?: boolean
  }

  export type Foto_UsuarioUpsertWithoutUsuariosInput = {
    update: XOR<Foto_UsuarioUpdateWithoutUsuariosInput, Foto_UsuarioUncheckedUpdateWithoutUsuariosInput>
    create: XOR<Foto_UsuarioCreateWithoutUsuariosInput, Foto_UsuarioUncheckedCreateWithoutUsuariosInput>
    where?: Foto_UsuarioWhereInput
  }

  export type Foto_UsuarioUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: Foto_UsuarioWhereInput
    data: XOR<Foto_UsuarioUpdateWithoutUsuariosInput, Foto_UsuarioUncheckedUpdateWithoutUsuariosInput>
  }

  export type Foto_UsuarioUpdateWithoutUsuariosInput = {
    foto_perfil?: StringFieldUpdateOperationsInput | string
    foto_contacto?: ContactosUpdateManyWithoutFotoNestedInput
  }

  export type Foto_UsuarioUncheckedUpdateWithoutUsuariosInput = {
    Id_fotousu?: IntFieldUpdateOperationsInput | number
    foto_perfil?: StringFieldUpdateOperationsInput | string
    foto_contacto?: ContactosUncheckedUpdateManyWithoutFotoNestedInput
  }

  export type EmprendimientoUpsertWithoutUsuarioInput = {
    update: XOR<EmprendimientoUpdateWithoutUsuarioInput, EmprendimientoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<EmprendimientoCreateWithoutUsuarioInput, EmprendimientoUncheckedCreateWithoutUsuarioInput>
    where?: EmprendimientoWhereInput
  }

  export type EmprendimientoUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: EmprendimientoWhereInput
    data: XOR<EmprendimientoUpdateWithoutUsuarioInput, EmprendimientoUncheckedUpdateWithoutUsuarioInput>
  }

  export type EmprendimientoUpdateWithoutUsuarioInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_emp_prodfoto?: Productos_fotoUpdateOneRequiredWithoutEmprendimiento_productofotoNestedInput
    rela_produ_emp?: ProductosUpdateOneRequiredWithoutEmprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type EmprendimientoUncheckedUpdateWithoutUsuarioInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto_foto?: IntFieldUpdateOperationsInput | number
    producto?: StringFieldUpdateOperationsInput | string
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type ContactosUpsertWithoutUsuarioInput = {
    update: XOR<ContactosUpdateWithoutUsuarioInput, ContactosUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ContactosCreateWithoutUsuarioInput, ContactosUncheckedCreateWithoutUsuarioInput>
    where?: ContactosWhereInput
  }

  export type ContactosUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: ContactosWhereInput
    data: XOR<ContactosUpdateWithoutUsuarioInput, ContactosUncheckedUpdateWithoutUsuarioInput>
  }

  export type ContactosUpdateWithoutUsuarioInput = {
    telefono?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    redes_soc?: StringFieldUpdateOperationsInput | string
    notas_perz?: StringFieldUpdateOperationsInput | string
    email_contactos?: StringFieldUpdateOperationsInput | string
    foto?: Foto_UsuarioUpdateOneRequiredWithoutFoto_contactoNestedInput
  }

  export type ContactosUncheckedUpdateWithoutUsuarioInput = {
    Id_contactos?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    redes_soc?: StringFieldUpdateOperationsInput | string
    notas_perz?: StringFieldUpdateOperationsInput | string
    email_contactos?: StringFieldUpdateOperationsInput | string
    foto_contacto?: IntFieldUpdateOperationsInput | number
  }

  export type Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_usu_usuempInput = {
    where: Usuario_EmprendimientoWhereUniqueInput
    update: XOR<Usuario_EmprendimientoUpdateWithoutRela_usu_usuempInput, Usuario_EmprendimientoUncheckedUpdateWithoutRela_usu_usuempInput>
    create: XOR<Usuario_EmprendimientoCreateWithoutRela_usu_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_usu_usuempInput>
  }

  export type Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_usu_usuempInput = {
    where: Usuario_EmprendimientoWhereUniqueInput
    data: XOR<Usuario_EmprendimientoUpdateWithoutRela_usu_usuempInput, Usuario_EmprendimientoUncheckedUpdateWithoutRela_usu_usuempInput>
  }

  export type Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_usu_usuempInput = {
    where: Usuario_EmprendimientoScalarWhereInput
    data: XOR<Usuario_EmprendimientoUpdateManyMutationInput, Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_usu_usuempInput>
  }

  export type Usuario_EmprendimientoScalarWhereInput = {
    AND?: Usuario_EmprendimientoScalarWhereInput | Usuario_EmprendimientoScalarWhereInput[]
    OR?: Usuario_EmprendimientoScalarWhereInput[]
    NOT?: Usuario_EmprendimientoScalarWhereInput | Usuario_EmprendimientoScalarWhereInput[]
    Id_usu_emp?: IntFilter<"Usuario_Emprendimiento"> | number
    nom_color?: StringFilter<"Usuario_Emprendimiento"> | string
    email?: StringFilter<"Usuario_Emprendimiento"> | string
    typo?: StringFilter<"Usuario_Emprendimiento"> | string
  }

  export type Colores_marcaCreateWithoutUsuario_emprendimientoInput = {
    nom_colores: string
    foto: string
  }

  export type Colores_marcaUncheckedCreateWithoutUsuario_emprendimientoInput = {
    nom_colores: string
    foto: string
  }

  export type Colores_marcaCreateOrConnectWithoutUsuario_emprendimientoInput = {
    where: Colores_marcaWhereUniqueInput
    create: XOR<Colores_marcaCreateWithoutUsuario_emprendimientoInput, Colores_marcaUncheckedCreateWithoutUsuario_emprendimientoInput>
  }

  export type UsuarioCreateWithoutUsuario_emprendimientoInput = {
    email: string
    contra: string
    nombre: string
    foto: Foto_UsuarioCreateNestedOneWithoutUsuariosInput
    typo_emprendimiento: EmprendimientoCreateNestedOneWithoutUsuarioInput
    Id_contactos: ContactosCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutUsuario_emprendimientoInput = {
    email: string
    contra: string
    nombre: string
    foto_perfil: number
    typo_id: string
    contacto: number
  }

  export type UsuarioCreateOrConnectWithoutUsuario_emprendimientoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutUsuario_emprendimientoInput, UsuarioUncheckedCreateWithoutUsuario_emprendimientoInput>
  }

  export type EmprendimientoCreateWithoutUsuario_emprendimientoInput = {
    typo: string
    descripcion: string
    rela_emp_prodfoto: Productos_fotoCreateNestedOneWithoutEmprendimiento_productofotoInput
    rela_produ_emp: ProductosCreateNestedOneWithoutEmprendimientoInput
    usuario?: UsuarioCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoCreateNestedManyWithoutRela_emp_prodInput
  }

  export type EmprendimientoUncheckedCreateWithoutUsuario_emprendimientoInput = {
    typo: string
    descripcion: string
    producto_foto: number
    producto: string
    usuario?: UsuarioUncheckedCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_emp_prodInput
  }

  export type EmprendimientoCreateOrConnectWithoutUsuario_emprendimientoInput = {
    where: EmprendimientoWhereUniqueInput
    create: XOR<EmprendimientoCreateWithoutUsuario_emprendimientoInput, EmprendimientoUncheckedCreateWithoutUsuario_emprendimientoInput>
  }

  export type Colores_marcaUpsertWithoutUsuario_emprendimientoInput = {
    update: XOR<Colores_marcaUpdateWithoutUsuario_emprendimientoInput, Colores_marcaUncheckedUpdateWithoutUsuario_emprendimientoInput>
    create: XOR<Colores_marcaCreateWithoutUsuario_emprendimientoInput, Colores_marcaUncheckedCreateWithoutUsuario_emprendimientoInput>
    where?: Colores_marcaWhereInput
  }

  export type Colores_marcaUpdateToOneWithWhereWithoutUsuario_emprendimientoInput = {
    where?: Colores_marcaWhereInput
    data: XOR<Colores_marcaUpdateWithoutUsuario_emprendimientoInput, Colores_marcaUncheckedUpdateWithoutUsuario_emprendimientoInput>
  }

  export type Colores_marcaUpdateWithoutUsuario_emprendimientoInput = {
    nom_colores?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Colores_marcaUncheckedUpdateWithoutUsuario_emprendimientoInput = {
    nom_colores?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioUpsertWithoutUsuario_emprendimientoInput = {
    update: XOR<UsuarioUpdateWithoutUsuario_emprendimientoInput, UsuarioUncheckedUpdateWithoutUsuario_emprendimientoInput>
    create: XOR<UsuarioCreateWithoutUsuario_emprendimientoInput, UsuarioUncheckedCreateWithoutUsuario_emprendimientoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutUsuario_emprendimientoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutUsuario_emprendimientoInput, UsuarioUncheckedUpdateWithoutUsuario_emprendimientoInput>
  }

  export type UsuarioUpdateWithoutUsuario_emprendimientoInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto?: Foto_UsuarioUpdateOneRequiredWithoutUsuariosNestedInput
    typo_emprendimiento?: EmprendimientoUpdateOneRequiredWithoutUsuarioNestedInput
    Id_contactos?: ContactosUpdateOneRequiredWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutUsuario_emprendimientoInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto_perfil?: IntFieldUpdateOperationsInput | number
    typo_id?: StringFieldUpdateOperationsInput | string
    contacto?: IntFieldUpdateOperationsInput | number
  }

  export type EmprendimientoUpsertWithoutUsuario_emprendimientoInput = {
    update: XOR<EmprendimientoUpdateWithoutUsuario_emprendimientoInput, EmprendimientoUncheckedUpdateWithoutUsuario_emprendimientoInput>
    create: XOR<EmprendimientoCreateWithoutUsuario_emprendimientoInput, EmprendimientoUncheckedCreateWithoutUsuario_emprendimientoInput>
    where?: EmprendimientoWhereInput
  }

  export type EmprendimientoUpdateToOneWithWhereWithoutUsuario_emprendimientoInput = {
    where?: EmprendimientoWhereInput
    data: XOR<EmprendimientoUpdateWithoutUsuario_emprendimientoInput, EmprendimientoUncheckedUpdateWithoutUsuario_emprendimientoInput>
  }

  export type EmprendimientoUpdateWithoutUsuario_emprendimientoInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_emp_prodfoto?: Productos_fotoUpdateOneRequiredWithoutEmprendimiento_productofotoNestedInput
    rela_produ_emp?: ProductosUpdateOneRequiredWithoutEmprendimientoNestedInput
    usuario?: UsuarioUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUpdateManyWithoutRela_emp_prodNestedInput
  }

  export type EmprendimientoUncheckedUpdateWithoutUsuario_emprendimientoInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto_foto?: IntFieldUpdateOperationsInput | number
    producto?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUncheckedUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_emp_prodNestedInput
  }

  export type UsuarioCreateWithoutFotoInput = {
    email: string
    contra: string
    nombre: string
    typo_emprendimiento: EmprendimientoCreateNestedOneWithoutUsuarioInput
    Id_contactos: ContactosCreateNestedOneWithoutUsuarioInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_usu_usuempInput
  }

  export type UsuarioUncheckedCreateWithoutFotoInput = {
    email: string
    contra: string
    nombre: string
    typo_id: string
    contacto: number
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_usu_usuempInput
  }

  export type UsuarioCreateOrConnectWithoutFotoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutFotoInput, UsuarioUncheckedCreateWithoutFotoInput>
  }

  export type UsuarioCreateManyFotoInputEnvelope = {
    data: UsuarioCreateManyFotoInput | UsuarioCreateManyFotoInput[]
    skipDuplicates?: boolean
  }

  export type ContactosCreateWithoutFotoInput = {
    telefono: number
    nombre: string
    redes_soc: string
    notas_perz: string
    email_contactos: string
    usuario?: UsuarioCreateNestedManyWithoutId_contactosInput
  }

  export type ContactosUncheckedCreateWithoutFotoInput = {
    Id_contactos?: number
    telefono: number
    nombre: string
    redes_soc: string
    notas_perz: string
    email_contactos: string
    usuario?: UsuarioUncheckedCreateNestedManyWithoutId_contactosInput
  }

  export type ContactosCreateOrConnectWithoutFotoInput = {
    where: ContactosWhereUniqueInput
    create: XOR<ContactosCreateWithoutFotoInput, ContactosUncheckedCreateWithoutFotoInput>
  }

  export type ContactosCreateManyFotoInputEnvelope = {
    data: ContactosCreateManyFotoInput | ContactosCreateManyFotoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutFotoInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutFotoInput, UsuarioUncheckedUpdateWithoutFotoInput>
    create: XOR<UsuarioCreateWithoutFotoInput, UsuarioUncheckedCreateWithoutFotoInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutFotoInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutFotoInput, UsuarioUncheckedUpdateWithoutFotoInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutFotoInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutFotoInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    email?: StringFilter<"Usuario"> | string
    contra?: StringFilter<"Usuario"> | string
    nombre?: StringFilter<"Usuario"> | string
    foto_perfil?: IntFilter<"Usuario"> | number
    typo_id?: StringFilter<"Usuario"> | string
    contacto?: IntFilter<"Usuario"> | number
  }

  export type ContactosUpsertWithWhereUniqueWithoutFotoInput = {
    where: ContactosWhereUniqueInput
    update: XOR<ContactosUpdateWithoutFotoInput, ContactosUncheckedUpdateWithoutFotoInput>
    create: XOR<ContactosCreateWithoutFotoInput, ContactosUncheckedCreateWithoutFotoInput>
  }

  export type ContactosUpdateWithWhereUniqueWithoutFotoInput = {
    where: ContactosWhereUniqueInput
    data: XOR<ContactosUpdateWithoutFotoInput, ContactosUncheckedUpdateWithoutFotoInput>
  }

  export type ContactosUpdateManyWithWhereWithoutFotoInput = {
    where: ContactosScalarWhereInput
    data: XOR<ContactosUpdateManyMutationInput, ContactosUncheckedUpdateManyWithoutFotoInput>
  }

  export type ContactosScalarWhereInput = {
    AND?: ContactosScalarWhereInput | ContactosScalarWhereInput[]
    OR?: ContactosScalarWhereInput[]
    NOT?: ContactosScalarWhereInput | ContactosScalarWhereInput[]
    Id_contactos?: IntFilter<"Contactos"> | number
    telefono?: IntFilter<"Contactos"> | number
    nombre?: StringFilter<"Contactos"> | string
    redes_soc?: StringFilter<"Contactos"> | string
    notas_perz?: StringFilter<"Contactos"> | string
    email_contactos?: StringFilter<"Contactos"> | string
    foto_contacto?: IntFilter<"Contactos"> | number
  }

  export type Foto_UsuarioCreateWithoutFoto_contactoInput = {
    foto_perfil: string
    usuarios?: UsuarioCreateNestedManyWithoutFotoInput
  }

  export type Foto_UsuarioUncheckedCreateWithoutFoto_contactoInput = {
    Id_fotousu?: number
    foto_perfil: string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutFotoInput
  }

  export type Foto_UsuarioCreateOrConnectWithoutFoto_contactoInput = {
    where: Foto_UsuarioWhereUniqueInput
    create: XOR<Foto_UsuarioCreateWithoutFoto_contactoInput, Foto_UsuarioUncheckedCreateWithoutFoto_contactoInput>
  }

  export type UsuarioCreateWithoutId_contactosInput = {
    email: string
    contra: string
    nombre: string
    foto: Foto_UsuarioCreateNestedOneWithoutUsuariosInput
    typo_emprendimiento: EmprendimientoCreateNestedOneWithoutUsuarioInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_usu_usuempInput
  }

  export type UsuarioUncheckedCreateWithoutId_contactosInput = {
    email: string
    contra: string
    nombre: string
    foto_perfil: number
    typo_id: string
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_usu_usuempInput
  }

  export type UsuarioCreateOrConnectWithoutId_contactosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutId_contactosInput, UsuarioUncheckedCreateWithoutId_contactosInput>
  }

  export type UsuarioCreateManyId_contactosInputEnvelope = {
    data: UsuarioCreateManyId_contactosInput | UsuarioCreateManyId_contactosInput[]
    skipDuplicates?: boolean
  }

  export type Foto_UsuarioUpsertWithoutFoto_contactoInput = {
    update: XOR<Foto_UsuarioUpdateWithoutFoto_contactoInput, Foto_UsuarioUncheckedUpdateWithoutFoto_contactoInput>
    create: XOR<Foto_UsuarioCreateWithoutFoto_contactoInput, Foto_UsuarioUncheckedCreateWithoutFoto_contactoInput>
    where?: Foto_UsuarioWhereInput
  }

  export type Foto_UsuarioUpdateToOneWithWhereWithoutFoto_contactoInput = {
    where?: Foto_UsuarioWhereInput
    data: XOR<Foto_UsuarioUpdateWithoutFoto_contactoInput, Foto_UsuarioUncheckedUpdateWithoutFoto_contactoInput>
  }

  export type Foto_UsuarioUpdateWithoutFoto_contactoInput = {
    foto_perfil?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioUpdateManyWithoutFotoNestedInput
  }

  export type Foto_UsuarioUncheckedUpdateWithoutFoto_contactoInput = {
    Id_fotousu?: IntFieldUpdateOperationsInput | number
    foto_perfil?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutFotoNestedInput
  }

  export type UsuarioUpsertWithWhereUniqueWithoutId_contactosInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutId_contactosInput, UsuarioUncheckedUpdateWithoutId_contactosInput>
    create: XOR<UsuarioCreateWithoutId_contactosInput, UsuarioUncheckedCreateWithoutId_contactosInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutId_contactosInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutId_contactosInput, UsuarioUncheckedUpdateWithoutId_contactosInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutId_contactosInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutId_contactosInput>
  }

  export type Productos_fotoCreateWithoutEmprendimiento_productofotoInput = {
    foto: string
    productos?: ProductosCreateNestedManyWithoutRela_foto_produInput
  }

  export type Productos_fotoUncheckedCreateWithoutEmprendimiento_productofotoInput = {
    Id_productos_foto?: number
    foto: string
    productos?: ProductosUncheckedCreateNestedManyWithoutRela_foto_produInput
  }

  export type Productos_fotoCreateOrConnectWithoutEmprendimiento_productofotoInput = {
    where: Productos_fotoWhereUniqueInput
    create: XOR<Productos_fotoCreateWithoutEmprendimiento_productofotoInput, Productos_fotoUncheckedCreateWithoutEmprendimiento_productofotoInput>
  }

  export type ProductosCreateWithoutEmprendimientoInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    rela_foto_produ: Productos_fotoCreateNestedOneWithoutProductosInput
    materiales_producto?: Materiales_productoCreateNestedManyWithoutRela_prod_mateInput
    emprendimiento_productos?: Emprendimiento_productoCreateNestedManyWithoutRela_prod_empInput
  }

  export type ProductosUncheckedCreateWithoutEmprendimientoInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    foto: number
    materiales_producto?: Materiales_productoUncheckedCreateNestedManyWithoutRela_prod_mateInput
    emprendimiento_productos?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_prod_empInput
  }

  export type ProductosCreateOrConnectWithoutEmprendimientoInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutEmprendimientoInput, ProductosUncheckedCreateWithoutEmprendimientoInput>
  }

  export type UsuarioCreateWithoutTypo_emprendimientoInput = {
    email: string
    contra: string
    nombre: string
    foto: Foto_UsuarioCreateNestedOneWithoutUsuariosInput
    Id_contactos: ContactosCreateNestedOneWithoutUsuarioInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_usu_usuempInput
  }

  export type UsuarioUncheckedCreateWithoutTypo_emprendimientoInput = {
    email: string
    contra: string
    nombre: string
    foto_perfil: number
    contacto: number
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_usu_usuempInput
  }

  export type UsuarioCreateOrConnectWithoutTypo_emprendimientoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutTypo_emprendimientoInput, UsuarioUncheckedCreateWithoutTypo_emprendimientoInput>
  }

  export type UsuarioCreateManyTypo_emprendimientoInputEnvelope = {
    data: UsuarioCreateManyTypo_emprendimientoInput | UsuarioCreateManyTypo_emprendimientoInput[]
    skipDuplicates?: boolean
  }

  export type Marketing_emprendimientoCreateWithoutRela_emp_markInput = {
    rela_mark_emp: MarketingCreateNestedOneWithoutMarketing_emprendimientoInput
  }

  export type Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput = {
    Id_marketing_emprendimiento?: number
    Id_mark: number
  }

  export type Marketing_emprendimientoCreateOrConnectWithoutRela_emp_markInput = {
    where: Marketing_emprendimientoWhereUniqueInput
    create: XOR<Marketing_emprendimientoCreateWithoutRela_emp_markInput, Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput>
  }

  export type Marketing_emprendimientoCreateManyRela_emp_markInputEnvelope = {
    data: Marketing_emprendimientoCreateManyRela_emp_markInput | Marketing_emprendimientoCreateManyRela_emp_markInput[]
    skipDuplicates?: boolean
  }

  export type Emprendimiento_productoCreateWithoutRela_emp_prodInput = {
    costo: number
    stock: number
    rela_prod_emp: ProductosCreateNestedOneWithoutEmprendimiento_productosInput
  }

  export type Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput = {
    Id_emp_prod?: number
    costo: number
    stock: number
    prod_emp: string
  }

  export type Emprendimiento_productoCreateOrConnectWithoutRela_emp_prodInput = {
    where: Emprendimiento_productoWhereUniqueInput
    create: XOR<Emprendimiento_productoCreateWithoutRela_emp_prodInput, Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput>
  }

  export type Emprendimiento_productoCreateManyRela_emp_prodInputEnvelope = {
    data: Emprendimiento_productoCreateManyRela_emp_prodInput | Emprendimiento_productoCreateManyRela_emp_prodInput[]
    skipDuplicates?: boolean
  }

  export type Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput = {
    rela_colo_usuemp: Colores_marcaCreateNestedOneWithoutUsuario_emprendimientoInput
    rela_usu_usuemp: UsuarioCreateNestedOneWithoutUsuario_emprendimientoInput
  }

  export type Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput = {
    Id_usu_emp?: number
    nom_color: string
    email: string
  }

  export type Usuario_EmprendimientoCreateOrConnectWithoutRela_emp_usuempInput = {
    where: Usuario_EmprendimientoWhereUniqueInput
    create: XOR<Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput>
  }

  export type Usuario_EmprendimientoCreateManyRela_emp_usuempInputEnvelope = {
    data: Usuario_EmprendimientoCreateManyRela_emp_usuempInput | Usuario_EmprendimientoCreateManyRela_emp_usuempInput[]
    skipDuplicates?: boolean
  }

  export type Productos_fotoUpsertWithoutEmprendimiento_productofotoInput = {
    update: XOR<Productos_fotoUpdateWithoutEmprendimiento_productofotoInput, Productos_fotoUncheckedUpdateWithoutEmprendimiento_productofotoInput>
    create: XOR<Productos_fotoCreateWithoutEmprendimiento_productofotoInput, Productos_fotoUncheckedCreateWithoutEmprendimiento_productofotoInput>
    where?: Productos_fotoWhereInput
  }

  export type Productos_fotoUpdateToOneWithWhereWithoutEmprendimiento_productofotoInput = {
    where?: Productos_fotoWhereInput
    data: XOR<Productos_fotoUpdateWithoutEmprendimiento_productofotoInput, Productos_fotoUncheckedUpdateWithoutEmprendimiento_productofotoInput>
  }

  export type Productos_fotoUpdateWithoutEmprendimiento_productofotoInput = {
    foto?: StringFieldUpdateOperationsInput | string
    productos?: ProductosUpdateManyWithoutRela_foto_produNestedInput
  }

  export type Productos_fotoUncheckedUpdateWithoutEmprendimiento_productofotoInput = {
    Id_productos_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    productos?: ProductosUncheckedUpdateManyWithoutRela_foto_produNestedInput
  }

  export type ProductosUpsertWithoutEmprendimientoInput = {
    update: XOR<ProductosUpdateWithoutEmprendimientoInput, ProductosUncheckedUpdateWithoutEmprendimientoInput>
    create: XOR<ProductosCreateWithoutEmprendimientoInput, ProductosUncheckedCreateWithoutEmprendimientoInput>
    where?: ProductosWhereInput
  }

  export type ProductosUpdateToOneWithWhereWithoutEmprendimientoInput = {
    where?: ProductosWhereInput
    data: XOR<ProductosUpdateWithoutEmprendimientoInput, ProductosUncheckedUpdateWithoutEmprendimientoInput>
  }

  export type ProductosUpdateWithoutEmprendimientoInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_foto_produ?: Productos_fotoUpdateOneRequiredWithoutProductosNestedInput
    materiales_producto?: Materiales_productoUpdateManyWithoutRela_prod_mateNestedInput
    emprendimiento_productos?: Emprendimiento_productoUpdateManyWithoutRela_prod_empNestedInput
  }

  export type ProductosUncheckedUpdateWithoutEmprendimientoInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    foto?: IntFieldUpdateOperationsInput | number
    materiales_producto?: Materiales_productoUncheckedUpdateManyWithoutRela_prod_mateNestedInput
    emprendimiento_productos?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_prod_empNestedInput
  }

  export type UsuarioUpsertWithWhereUniqueWithoutTypo_emprendimientoInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutTypo_emprendimientoInput, UsuarioUncheckedUpdateWithoutTypo_emprendimientoInput>
    create: XOR<UsuarioCreateWithoutTypo_emprendimientoInput, UsuarioUncheckedCreateWithoutTypo_emprendimientoInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutTypo_emprendimientoInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutTypo_emprendimientoInput, UsuarioUncheckedUpdateWithoutTypo_emprendimientoInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutTypo_emprendimientoInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutTypo_emprendimientoInput>
  }

  export type Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_emp_markInput = {
    where: Marketing_emprendimientoWhereUniqueInput
    update: XOR<Marketing_emprendimientoUpdateWithoutRela_emp_markInput, Marketing_emprendimientoUncheckedUpdateWithoutRela_emp_markInput>
    create: XOR<Marketing_emprendimientoCreateWithoutRela_emp_markInput, Marketing_emprendimientoUncheckedCreateWithoutRela_emp_markInput>
  }

  export type Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_emp_markInput = {
    where: Marketing_emprendimientoWhereUniqueInput
    data: XOR<Marketing_emprendimientoUpdateWithoutRela_emp_markInput, Marketing_emprendimientoUncheckedUpdateWithoutRela_emp_markInput>
  }

  export type Marketing_emprendimientoUpdateManyWithWhereWithoutRela_emp_markInput = {
    where: Marketing_emprendimientoScalarWhereInput
    data: XOR<Marketing_emprendimientoUpdateManyMutationInput, Marketing_emprendimientoUncheckedUpdateManyWithoutRela_emp_markInput>
  }

  export type Marketing_emprendimientoScalarWhereInput = {
    AND?: Marketing_emprendimientoScalarWhereInput | Marketing_emprendimientoScalarWhereInput[]
    OR?: Marketing_emprendimientoScalarWhereInput[]
    NOT?: Marketing_emprendimientoScalarWhereInput | Marketing_emprendimientoScalarWhereInput[]
    Id_marketing_emprendimiento?: IntFilter<"Marketing_emprendimiento"> | number
    typo_emp?: StringFilter<"Marketing_emprendimiento"> | string
    Id_mark?: IntFilter<"Marketing_emprendimiento"> | number
  }

  export type Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_emp_prodInput = {
    where: Emprendimiento_productoWhereUniqueInput
    update: XOR<Emprendimiento_productoUpdateWithoutRela_emp_prodInput, Emprendimiento_productoUncheckedUpdateWithoutRela_emp_prodInput>
    create: XOR<Emprendimiento_productoCreateWithoutRela_emp_prodInput, Emprendimiento_productoUncheckedCreateWithoutRela_emp_prodInput>
  }

  export type Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_emp_prodInput = {
    where: Emprendimiento_productoWhereUniqueInput
    data: XOR<Emprendimiento_productoUpdateWithoutRela_emp_prodInput, Emprendimiento_productoUncheckedUpdateWithoutRela_emp_prodInput>
  }

  export type Emprendimiento_productoUpdateManyWithWhereWithoutRela_emp_prodInput = {
    where: Emprendimiento_productoScalarWhereInput
    data: XOR<Emprendimiento_productoUpdateManyMutationInput, Emprendimiento_productoUncheckedUpdateManyWithoutRela_emp_prodInput>
  }

  export type Emprendimiento_productoScalarWhereInput = {
    AND?: Emprendimiento_productoScalarWhereInput | Emprendimiento_productoScalarWhereInput[]
    OR?: Emprendimiento_productoScalarWhereInput[]
    NOT?: Emprendimiento_productoScalarWhereInput | Emprendimiento_productoScalarWhereInput[]
    Id_emp_prod?: IntFilter<"Emprendimiento_producto"> | number
    costo?: FloatFilter<"Emprendimiento_producto"> | number
    stock?: IntFilter<"Emprendimiento_producto"> | number
    emp_prod?: StringFilter<"Emprendimiento_producto"> | string
    prod_emp?: StringFilter<"Emprendimiento_producto"> | string
  }

  export type Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_usuempInput = {
    where: Usuario_EmprendimientoWhereUniqueInput
    update: XOR<Usuario_EmprendimientoUpdateWithoutRela_emp_usuempInput, Usuario_EmprendimientoUncheckedUpdateWithoutRela_emp_usuempInput>
    create: XOR<Usuario_EmprendimientoCreateWithoutRela_emp_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_emp_usuempInput>
  }

  export type Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_usuempInput = {
    where: Usuario_EmprendimientoWhereUniqueInput
    data: XOR<Usuario_EmprendimientoUpdateWithoutRela_emp_usuempInput, Usuario_EmprendimientoUncheckedUpdateWithoutRela_emp_usuempInput>
  }

  export type Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_emp_usuempInput = {
    where: Usuario_EmprendimientoScalarWhereInput
    data: XOR<Usuario_EmprendimientoUpdateManyMutationInput, Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_emp_usuempInput>
  }

  export type EmprendimientoCreateWithoutEmprendimiento_productoInput = {
    typo: string
    descripcion: string
    rela_emp_prodfoto: Productos_fotoCreateNestedOneWithoutEmprendimiento_productofotoInput
    rela_produ_emp: ProductosCreateNestedOneWithoutEmprendimientoInput
    usuario?: UsuarioCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoCreateNestedManyWithoutRela_emp_markInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoUncheckedCreateWithoutEmprendimiento_productoInput = {
    typo: string
    descripcion: string
    producto_foto: number
    producto: string
    usuario?: UsuarioUncheckedCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_emp_markInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoCreateOrConnectWithoutEmprendimiento_productoInput = {
    where: EmprendimientoWhereUniqueInput
    create: XOR<EmprendimientoCreateWithoutEmprendimiento_productoInput, EmprendimientoUncheckedCreateWithoutEmprendimiento_productoInput>
  }

  export type ProductosCreateWithoutEmprendimiento_productosInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    rela_foto_produ: Productos_fotoCreateNestedOneWithoutProductosInput
    emprendimiento?: EmprendimientoCreateNestedManyWithoutRela_produ_empInput
    materiales_producto?: Materiales_productoCreateNestedManyWithoutRela_prod_mateInput
  }

  export type ProductosUncheckedCreateWithoutEmprendimiento_productosInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    foto: number
    emprendimiento?: EmprendimientoUncheckedCreateNestedManyWithoutRela_produ_empInput
    materiales_producto?: Materiales_productoUncheckedCreateNestedManyWithoutRela_prod_mateInput
  }

  export type ProductosCreateOrConnectWithoutEmprendimiento_productosInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutEmprendimiento_productosInput, ProductosUncheckedCreateWithoutEmprendimiento_productosInput>
  }

  export type EmprendimientoUpsertWithoutEmprendimiento_productoInput = {
    update: XOR<EmprendimientoUpdateWithoutEmprendimiento_productoInput, EmprendimientoUncheckedUpdateWithoutEmprendimiento_productoInput>
    create: XOR<EmprendimientoCreateWithoutEmprendimiento_productoInput, EmprendimientoUncheckedCreateWithoutEmprendimiento_productoInput>
    where?: EmprendimientoWhereInput
  }

  export type EmprendimientoUpdateToOneWithWhereWithoutEmprendimiento_productoInput = {
    where?: EmprendimientoWhereInput
    data: XOR<EmprendimientoUpdateWithoutEmprendimiento_productoInput, EmprendimientoUncheckedUpdateWithoutEmprendimiento_productoInput>
  }

  export type EmprendimientoUpdateWithoutEmprendimiento_productoInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_emp_prodfoto?: Productos_fotoUpdateOneRequiredWithoutEmprendimiento_productofotoNestedInput
    rela_produ_emp?: ProductosUpdateOneRequiredWithoutEmprendimientoNestedInput
    usuario?: UsuarioUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUpdateManyWithoutRela_emp_markNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type EmprendimientoUncheckedUpdateWithoutEmprendimiento_productoInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto_foto?: IntFieldUpdateOperationsInput | number
    producto?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUncheckedUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedUpdateManyWithoutRela_emp_markNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type ProductosUpsertWithoutEmprendimiento_productosInput = {
    update: XOR<ProductosUpdateWithoutEmprendimiento_productosInput, ProductosUncheckedUpdateWithoutEmprendimiento_productosInput>
    create: XOR<ProductosCreateWithoutEmprendimiento_productosInput, ProductosUncheckedCreateWithoutEmprendimiento_productosInput>
    where?: ProductosWhereInput
  }

  export type ProductosUpdateToOneWithWhereWithoutEmprendimiento_productosInput = {
    where?: ProductosWhereInput
    data: XOR<ProductosUpdateWithoutEmprendimiento_productosInput, ProductosUncheckedUpdateWithoutEmprendimiento_productosInput>
  }

  export type ProductosUpdateWithoutEmprendimiento_productosInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_foto_produ?: Productos_fotoUpdateOneRequiredWithoutProductosNestedInput
    emprendimiento?: EmprendimientoUpdateManyWithoutRela_produ_empNestedInput
    materiales_producto?: Materiales_productoUpdateManyWithoutRela_prod_mateNestedInput
  }

  export type ProductosUncheckedUpdateWithoutEmprendimiento_productosInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    foto?: IntFieldUpdateOperationsInput | number
    emprendimiento?: EmprendimientoUncheckedUpdateManyWithoutRela_produ_empNestedInput
    materiales_producto?: Materiales_productoUncheckedUpdateManyWithoutRela_prod_mateNestedInput
  }

  export type Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput = {
    rela_usu_usuemp: UsuarioCreateNestedOneWithoutUsuario_emprendimientoInput
    rela_emp_usuemp: EmprendimientoCreateNestedOneWithoutUsuario_emprendimientoInput
  }

  export type Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput = {
    Id_usu_emp?: number
    email: string
    typo: string
  }

  export type Usuario_EmprendimientoCreateOrConnectWithoutRela_colo_usuempInput = {
    where: Usuario_EmprendimientoWhereUniqueInput
    create: XOR<Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput>
  }

  export type Usuario_EmprendimientoCreateManyRela_colo_usuempInputEnvelope = {
    data: Usuario_EmprendimientoCreateManyRela_colo_usuempInput | Usuario_EmprendimientoCreateManyRela_colo_usuempInput[]
    skipDuplicates?: boolean
  }

  export type Usuario_EmprendimientoUpsertWithWhereUniqueWithoutRela_colo_usuempInput = {
    where: Usuario_EmprendimientoWhereUniqueInput
    update: XOR<Usuario_EmprendimientoUpdateWithoutRela_colo_usuempInput, Usuario_EmprendimientoUncheckedUpdateWithoutRela_colo_usuempInput>
    create: XOR<Usuario_EmprendimientoCreateWithoutRela_colo_usuempInput, Usuario_EmprendimientoUncheckedCreateWithoutRela_colo_usuempInput>
  }

  export type Usuario_EmprendimientoUpdateWithWhereUniqueWithoutRela_colo_usuempInput = {
    where: Usuario_EmprendimientoWhereUniqueInput
    data: XOR<Usuario_EmprendimientoUpdateWithoutRela_colo_usuempInput, Usuario_EmprendimientoUncheckedUpdateWithoutRela_colo_usuempInput>
  }

  export type Usuario_EmprendimientoUpdateManyWithWhereWithoutRela_colo_usuempInput = {
    where: Usuario_EmprendimientoScalarWhereInput
    data: XOR<Usuario_EmprendimientoUpdateManyMutationInput, Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_colo_usuempInput>
  }

  export type EmprendimientoCreateWithoutMarketing_emprendimientoInput = {
    typo: string
    descripcion: string
    rela_emp_prodfoto: Productos_fotoCreateNestedOneWithoutEmprendimiento_productofotoInput
    rela_produ_emp: ProductosCreateNestedOneWithoutEmprendimientoInput
    usuario?: UsuarioCreateNestedManyWithoutTypo_emprendimientoInput
    emprendimiento_producto?: Emprendimiento_productoCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoUncheckedCreateWithoutMarketing_emprendimientoInput = {
    typo: string
    descripcion: string
    producto_foto: number
    producto: string
    usuario?: UsuarioUncheckedCreateNestedManyWithoutTypo_emprendimientoInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoCreateOrConnectWithoutMarketing_emprendimientoInput = {
    where: EmprendimientoWhereUniqueInput
    create: XOR<EmprendimientoCreateWithoutMarketing_emprendimientoInput, EmprendimientoUncheckedCreateWithoutMarketing_emprendimientoInput>
  }

  export type MarketingCreateWithoutMarketing_emprendimientoInput = {
    rela_publi_mark: PublicacionesCreateNestedOneWithoutMarketingInput
  }

  export type MarketingUncheckedCreateWithoutMarketing_emprendimientoInput = {
    Id_marketing?: number
    publicacion: string
  }

  export type MarketingCreateOrConnectWithoutMarketing_emprendimientoInput = {
    where: MarketingWhereUniqueInput
    create: XOR<MarketingCreateWithoutMarketing_emprendimientoInput, MarketingUncheckedCreateWithoutMarketing_emprendimientoInput>
  }

  export type EmprendimientoUpsertWithoutMarketing_emprendimientoInput = {
    update: XOR<EmprendimientoUpdateWithoutMarketing_emprendimientoInput, EmprendimientoUncheckedUpdateWithoutMarketing_emprendimientoInput>
    create: XOR<EmprendimientoCreateWithoutMarketing_emprendimientoInput, EmprendimientoUncheckedCreateWithoutMarketing_emprendimientoInput>
    where?: EmprendimientoWhereInput
  }

  export type EmprendimientoUpdateToOneWithWhereWithoutMarketing_emprendimientoInput = {
    where?: EmprendimientoWhereInput
    data: XOR<EmprendimientoUpdateWithoutMarketing_emprendimientoInput, EmprendimientoUncheckedUpdateWithoutMarketing_emprendimientoInput>
  }

  export type EmprendimientoUpdateWithoutMarketing_emprendimientoInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_emp_prodfoto?: Productos_fotoUpdateOneRequiredWithoutEmprendimiento_productofotoNestedInput
    rela_produ_emp?: ProductosUpdateOneRequiredWithoutEmprendimientoNestedInput
    usuario?: UsuarioUpdateManyWithoutTypo_emprendimientoNestedInput
    emprendimiento_producto?: Emprendimiento_productoUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type EmprendimientoUncheckedUpdateWithoutMarketing_emprendimientoInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto_foto?: IntFieldUpdateOperationsInput | number
    producto?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUncheckedUpdateManyWithoutTypo_emprendimientoNestedInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type MarketingUpsertWithoutMarketing_emprendimientoInput = {
    update: XOR<MarketingUpdateWithoutMarketing_emprendimientoInput, MarketingUncheckedUpdateWithoutMarketing_emprendimientoInput>
    create: XOR<MarketingCreateWithoutMarketing_emprendimientoInput, MarketingUncheckedCreateWithoutMarketing_emprendimientoInput>
    where?: MarketingWhereInput
  }

  export type MarketingUpdateToOneWithWhereWithoutMarketing_emprendimientoInput = {
    where?: MarketingWhereInput
    data: XOR<MarketingUpdateWithoutMarketing_emprendimientoInput, MarketingUncheckedUpdateWithoutMarketing_emprendimientoInput>
  }

  export type MarketingUpdateWithoutMarketing_emprendimientoInput = {
    rela_publi_mark?: PublicacionesUpdateOneRequiredWithoutMarketingNestedInput
  }

  export type MarketingUncheckedUpdateWithoutMarketing_emprendimientoInput = {
    Id_marketing?: IntFieldUpdateOperationsInput | number
    publicacion?: StringFieldUpdateOperationsInput | string
  }

  export type PublicacionesCreateWithoutMarketingInput = {
    link_plantilla: string
    desc: string
    nombre: string
    rela_foto_publi: Publicaciones_fotoCreateNestedOneWithoutPublicacionesInput
  }

  export type PublicacionesUncheckedCreateWithoutMarketingInput = {
    link_plantilla: string
    desc: string
    nombre: string
    foto: number
  }

  export type PublicacionesCreateOrConnectWithoutMarketingInput = {
    where: PublicacionesWhereUniqueInput
    create: XOR<PublicacionesCreateWithoutMarketingInput, PublicacionesUncheckedCreateWithoutMarketingInput>
  }

  export type Marketing_emprendimientoCreateWithoutRela_mark_empInput = {
    rela_emp_mark: EmprendimientoCreateNestedOneWithoutMarketing_emprendimientoInput
  }

  export type Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput = {
    Id_marketing_emprendimiento?: number
    typo_emp: string
  }

  export type Marketing_emprendimientoCreateOrConnectWithoutRela_mark_empInput = {
    where: Marketing_emprendimientoWhereUniqueInput
    create: XOR<Marketing_emprendimientoCreateWithoutRela_mark_empInput, Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput>
  }

  export type Marketing_emprendimientoCreateManyRela_mark_empInputEnvelope = {
    data: Marketing_emprendimientoCreateManyRela_mark_empInput | Marketing_emprendimientoCreateManyRela_mark_empInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionesUpsertWithoutMarketingInput = {
    update: XOR<PublicacionesUpdateWithoutMarketingInput, PublicacionesUncheckedUpdateWithoutMarketingInput>
    create: XOR<PublicacionesCreateWithoutMarketingInput, PublicacionesUncheckedCreateWithoutMarketingInput>
    where?: PublicacionesWhereInput
  }

  export type PublicacionesUpdateToOneWithWhereWithoutMarketingInput = {
    where?: PublicacionesWhereInput
    data: XOR<PublicacionesUpdateWithoutMarketingInput, PublicacionesUncheckedUpdateWithoutMarketingInput>
  }

  export type PublicacionesUpdateWithoutMarketingInput = {
    link_plantilla?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    rela_foto_publi?: Publicaciones_fotoUpdateOneRequiredWithoutPublicacionesNestedInput
  }

  export type PublicacionesUncheckedUpdateWithoutMarketingInput = {
    link_plantilla?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto?: IntFieldUpdateOperationsInput | number
  }

  export type Marketing_emprendimientoUpsertWithWhereUniqueWithoutRela_mark_empInput = {
    where: Marketing_emprendimientoWhereUniqueInput
    update: XOR<Marketing_emprendimientoUpdateWithoutRela_mark_empInput, Marketing_emprendimientoUncheckedUpdateWithoutRela_mark_empInput>
    create: XOR<Marketing_emprendimientoCreateWithoutRela_mark_empInput, Marketing_emprendimientoUncheckedCreateWithoutRela_mark_empInput>
  }

  export type Marketing_emprendimientoUpdateWithWhereUniqueWithoutRela_mark_empInput = {
    where: Marketing_emprendimientoWhereUniqueInput
    data: XOR<Marketing_emprendimientoUpdateWithoutRela_mark_empInput, Marketing_emprendimientoUncheckedUpdateWithoutRela_mark_empInput>
  }

  export type Marketing_emprendimientoUpdateManyWithWhereWithoutRela_mark_empInput = {
    where: Marketing_emprendimientoScalarWhereInput
    data: XOR<Marketing_emprendimientoUpdateManyMutationInput, Marketing_emprendimientoUncheckedUpdateManyWithoutRela_mark_empInput>
  }

  export type Publicaciones_fotoCreateWithoutPublicacionesInput = {
    foto: string
  }

  export type Publicaciones_fotoUncheckedCreateWithoutPublicacionesInput = {
    Id_publicaciones_foto?: number
    foto: string
  }

  export type Publicaciones_fotoCreateOrConnectWithoutPublicacionesInput = {
    where: Publicaciones_fotoWhereUniqueInput
    create: XOR<Publicaciones_fotoCreateWithoutPublicacionesInput, Publicaciones_fotoUncheckedCreateWithoutPublicacionesInput>
  }

  export type MarketingCreateWithoutRela_publi_markInput = {
    marketing_emprendimiento?: Marketing_emprendimientoCreateNestedManyWithoutRela_mark_empInput
  }

  export type MarketingUncheckedCreateWithoutRela_publi_markInput = {
    Id_marketing?: number
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_mark_empInput
  }

  export type MarketingCreateOrConnectWithoutRela_publi_markInput = {
    where: MarketingWhereUniqueInput
    create: XOR<MarketingCreateWithoutRela_publi_markInput, MarketingUncheckedCreateWithoutRela_publi_markInput>
  }

  export type MarketingCreateManyRela_publi_markInputEnvelope = {
    data: MarketingCreateManyRela_publi_markInput | MarketingCreateManyRela_publi_markInput[]
    skipDuplicates?: boolean
  }

  export type Publicaciones_fotoUpsertWithoutPublicacionesInput = {
    update: XOR<Publicaciones_fotoUpdateWithoutPublicacionesInput, Publicaciones_fotoUncheckedUpdateWithoutPublicacionesInput>
    create: XOR<Publicaciones_fotoCreateWithoutPublicacionesInput, Publicaciones_fotoUncheckedCreateWithoutPublicacionesInput>
    where?: Publicaciones_fotoWhereInput
  }

  export type Publicaciones_fotoUpdateToOneWithWhereWithoutPublicacionesInput = {
    where?: Publicaciones_fotoWhereInput
    data: XOR<Publicaciones_fotoUpdateWithoutPublicacionesInput, Publicaciones_fotoUncheckedUpdateWithoutPublicacionesInput>
  }

  export type Publicaciones_fotoUpdateWithoutPublicacionesInput = {
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Publicaciones_fotoUncheckedUpdateWithoutPublicacionesInput = {
    Id_publicaciones_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type MarketingUpsertWithWhereUniqueWithoutRela_publi_markInput = {
    where: MarketingWhereUniqueInput
    update: XOR<MarketingUpdateWithoutRela_publi_markInput, MarketingUncheckedUpdateWithoutRela_publi_markInput>
    create: XOR<MarketingCreateWithoutRela_publi_markInput, MarketingUncheckedCreateWithoutRela_publi_markInput>
  }

  export type MarketingUpdateWithWhereUniqueWithoutRela_publi_markInput = {
    where: MarketingWhereUniqueInput
    data: XOR<MarketingUpdateWithoutRela_publi_markInput, MarketingUncheckedUpdateWithoutRela_publi_markInput>
  }

  export type MarketingUpdateManyWithWhereWithoutRela_publi_markInput = {
    where: MarketingScalarWhereInput
    data: XOR<MarketingUpdateManyMutationInput, MarketingUncheckedUpdateManyWithoutRela_publi_markInput>
  }

  export type MarketingScalarWhereInput = {
    AND?: MarketingScalarWhereInput | MarketingScalarWhereInput[]
    OR?: MarketingScalarWhereInput[]
    NOT?: MarketingScalarWhereInput | MarketingScalarWhereInput[]
    Id_marketing?: IntFilter<"Marketing"> | number
    publicacion?: StringFilter<"Marketing"> | string
  }

  export type PublicacionesCreateWithoutRela_foto_publiInput = {
    link_plantilla: string
    desc: string
    nombre: string
    marketing?: MarketingCreateNestedManyWithoutRela_publi_markInput
  }

  export type PublicacionesUncheckedCreateWithoutRela_foto_publiInput = {
    link_plantilla: string
    desc: string
    nombre: string
    marketing?: MarketingUncheckedCreateNestedManyWithoutRela_publi_markInput
  }

  export type PublicacionesCreateOrConnectWithoutRela_foto_publiInput = {
    where: PublicacionesWhereUniqueInput
    create: XOR<PublicacionesCreateWithoutRela_foto_publiInput, PublicacionesUncheckedCreateWithoutRela_foto_publiInput>
  }

  export type PublicacionesCreateManyRela_foto_publiInputEnvelope = {
    data: PublicacionesCreateManyRela_foto_publiInput | PublicacionesCreateManyRela_foto_publiInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionesUpsertWithWhereUniqueWithoutRela_foto_publiInput = {
    where: PublicacionesWhereUniqueInput
    update: XOR<PublicacionesUpdateWithoutRela_foto_publiInput, PublicacionesUncheckedUpdateWithoutRela_foto_publiInput>
    create: XOR<PublicacionesCreateWithoutRela_foto_publiInput, PublicacionesUncheckedCreateWithoutRela_foto_publiInput>
  }

  export type PublicacionesUpdateWithWhereUniqueWithoutRela_foto_publiInput = {
    where: PublicacionesWhereUniqueInput
    data: XOR<PublicacionesUpdateWithoutRela_foto_publiInput, PublicacionesUncheckedUpdateWithoutRela_foto_publiInput>
  }

  export type PublicacionesUpdateManyWithWhereWithoutRela_foto_publiInput = {
    where: PublicacionesScalarWhereInput
    data: XOR<PublicacionesUpdateManyMutationInput, PublicacionesUncheckedUpdateManyWithoutRela_foto_publiInput>
  }

  export type PublicacionesScalarWhereInput = {
    AND?: PublicacionesScalarWhereInput | PublicacionesScalarWhereInput[]
    OR?: PublicacionesScalarWhereInput[]
    NOT?: PublicacionesScalarWhereInput | PublicacionesScalarWhereInput[]
    link_plantilla?: StringFilter<"Publicaciones"> | string
    desc?: StringFilter<"Publicaciones"> | string
    nombre?: StringFilter<"Publicaciones"> | string
    foto?: IntFilter<"Publicaciones"> | number
  }

  export type Productos_fotoCreateWithoutProductosInput = {
    foto: string
    emprendimiento_productofoto?: EmprendimientoCreateNestedManyWithoutRela_emp_prodfotoInput
  }

  export type Productos_fotoUncheckedCreateWithoutProductosInput = {
    Id_productos_foto?: number
    foto: string
    emprendimiento_productofoto?: EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_prodfotoInput
  }

  export type Productos_fotoCreateOrConnectWithoutProductosInput = {
    where: Productos_fotoWhereUniqueInput
    create: XOR<Productos_fotoCreateWithoutProductosInput, Productos_fotoUncheckedCreateWithoutProductosInput>
  }

  export type EmprendimientoCreateWithoutRela_produ_empInput = {
    typo: string
    descripcion: string
    rela_emp_prodfoto: Productos_fotoCreateNestedOneWithoutEmprendimiento_productofotoInput
    usuario?: UsuarioCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoUncheckedCreateWithoutRela_produ_empInput = {
    typo: string
    descripcion: string
    producto_foto: number
    usuario?: UsuarioUncheckedCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoCreateOrConnectWithoutRela_produ_empInput = {
    where: EmprendimientoWhereUniqueInput
    create: XOR<EmprendimientoCreateWithoutRela_produ_empInput, EmprendimientoUncheckedCreateWithoutRela_produ_empInput>
  }

  export type EmprendimientoCreateManyRela_produ_empInputEnvelope = {
    data: EmprendimientoCreateManyRela_produ_empInput | EmprendimientoCreateManyRela_produ_empInput[]
    skipDuplicates?: boolean
  }

  export type Materiales_productoCreateWithoutRela_prod_mateInput = {
    costo: number
    stock: number
    rela_mate_produ: MaterialesCreateNestedOneWithoutMateriales_productoInput
  }

  export type Materiales_productoUncheckedCreateWithoutRela_prod_mateInput = {
    Id_materiales_producto?: number
    costo: number
    stock: number
    nom_mat: string
  }

  export type Materiales_productoCreateOrConnectWithoutRela_prod_mateInput = {
    where: Materiales_productoWhereUniqueInput
    create: XOR<Materiales_productoCreateWithoutRela_prod_mateInput, Materiales_productoUncheckedCreateWithoutRela_prod_mateInput>
  }

  export type Materiales_productoCreateManyRela_prod_mateInputEnvelope = {
    data: Materiales_productoCreateManyRela_prod_mateInput | Materiales_productoCreateManyRela_prod_mateInput[]
    skipDuplicates?: boolean
  }

  export type Emprendimiento_productoCreateWithoutRela_prod_empInput = {
    costo: number
    stock: number
    rela_emp_prod: EmprendimientoCreateNestedOneWithoutEmprendimiento_productoInput
  }

  export type Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput = {
    Id_emp_prod?: number
    costo: number
    stock: number
    emp_prod: string
  }

  export type Emprendimiento_productoCreateOrConnectWithoutRela_prod_empInput = {
    where: Emprendimiento_productoWhereUniqueInput
    create: XOR<Emprendimiento_productoCreateWithoutRela_prod_empInput, Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput>
  }

  export type Emprendimiento_productoCreateManyRela_prod_empInputEnvelope = {
    data: Emprendimiento_productoCreateManyRela_prod_empInput | Emprendimiento_productoCreateManyRela_prod_empInput[]
    skipDuplicates?: boolean
  }

  export type Productos_fotoUpsertWithoutProductosInput = {
    update: XOR<Productos_fotoUpdateWithoutProductosInput, Productos_fotoUncheckedUpdateWithoutProductosInput>
    create: XOR<Productos_fotoCreateWithoutProductosInput, Productos_fotoUncheckedCreateWithoutProductosInput>
    where?: Productos_fotoWhereInput
  }

  export type Productos_fotoUpdateToOneWithWhereWithoutProductosInput = {
    where?: Productos_fotoWhereInput
    data: XOR<Productos_fotoUpdateWithoutProductosInput, Productos_fotoUncheckedUpdateWithoutProductosInput>
  }

  export type Productos_fotoUpdateWithoutProductosInput = {
    foto?: StringFieldUpdateOperationsInput | string
    emprendimiento_productofoto?: EmprendimientoUpdateManyWithoutRela_emp_prodfotoNestedInput
  }

  export type Productos_fotoUncheckedUpdateWithoutProductosInput = {
    Id_productos_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
    emprendimiento_productofoto?: EmprendimientoUncheckedUpdateManyWithoutRela_emp_prodfotoNestedInput
  }

  export type EmprendimientoUpsertWithWhereUniqueWithoutRela_produ_empInput = {
    where: EmprendimientoWhereUniqueInput
    update: XOR<EmprendimientoUpdateWithoutRela_produ_empInput, EmprendimientoUncheckedUpdateWithoutRela_produ_empInput>
    create: XOR<EmprendimientoCreateWithoutRela_produ_empInput, EmprendimientoUncheckedCreateWithoutRela_produ_empInput>
  }

  export type EmprendimientoUpdateWithWhereUniqueWithoutRela_produ_empInput = {
    where: EmprendimientoWhereUniqueInput
    data: XOR<EmprendimientoUpdateWithoutRela_produ_empInput, EmprendimientoUncheckedUpdateWithoutRela_produ_empInput>
  }

  export type EmprendimientoUpdateManyWithWhereWithoutRela_produ_empInput = {
    where: EmprendimientoScalarWhereInput
    data: XOR<EmprendimientoUpdateManyMutationInput, EmprendimientoUncheckedUpdateManyWithoutRela_produ_empInput>
  }

  export type EmprendimientoScalarWhereInput = {
    AND?: EmprendimientoScalarWhereInput | EmprendimientoScalarWhereInput[]
    OR?: EmprendimientoScalarWhereInput[]
    NOT?: EmprendimientoScalarWhereInput | EmprendimientoScalarWhereInput[]
    typo?: StringFilter<"Emprendimiento"> | string
    descripcion?: StringFilter<"Emprendimiento"> | string
    producto_foto?: IntFilter<"Emprendimiento"> | number
    producto?: StringFilter<"Emprendimiento"> | string
  }

  export type Materiales_productoUpsertWithWhereUniqueWithoutRela_prod_mateInput = {
    where: Materiales_productoWhereUniqueInput
    update: XOR<Materiales_productoUpdateWithoutRela_prod_mateInput, Materiales_productoUncheckedUpdateWithoutRela_prod_mateInput>
    create: XOR<Materiales_productoCreateWithoutRela_prod_mateInput, Materiales_productoUncheckedCreateWithoutRela_prod_mateInput>
  }

  export type Materiales_productoUpdateWithWhereUniqueWithoutRela_prod_mateInput = {
    where: Materiales_productoWhereUniqueInput
    data: XOR<Materiales_productoUpdateWithoutRela_prod_mateInput, Materiales_productoUncheckedUpdateWithoutRela_prod_mateInput>
  }

  export type Materiales_productoUpdateManyWithWhereWithoutRela_prod_mateInput = {
    where: Materiales_productoScalarWhereInput
    data: XOR<Materiales_productoUpdateManyMutationInput, Materiales_productoUncheckedUpdateManyWithoutRela_prod_mateInput>
  }

  export type Materiales_productoScalarWhereInput = {
    AND?: Materiales_productoScalarWhereInput | Materiales_productoScalarWhereInput[]
    OR?: Materiales_productoScalarWhereInput[]
    NOT?: Materiales_productoScalarWhereInput | Materiales_productoScalarWhereInput[]
    Id_materiales_producto?: IntFilter<"Materiales_producto"> | number
    costo?: FloatFilter<"Materiales_producto"> | number
    stock?: IntFilter<"Materiales_producto"> | number
    nom_prod?: StringFilter<"Materiales_producto"> | string
    nom_mat?: StringFilter<"Materiales_producto"> | string
  }

  export type Emprendimiento_productoUpsertWithWhereUniqueWithoutRela_prod_empInput = {
    where: Emprendimiento_productoWhereUniqueInput
    update: XOR<Emprendimiento_productoUpdateWithoutRela_prod_empInput, Emprendimiento_productoUncheckedUpdateWithoutRela_prod_empInput>
    create: XOR<Emprendimiento_productoCreateWithoutRela_prod_empInput, Emprendimiento_productoUncheckedCreateWithoutRela_prod_empInput>
  }

  export type Emprendimiento_productoUpdateWithWhereUniqueWithoutRela_prod_empInput = {
    where: Emprendimiento_productoWhereUniqueInput
    data: XOR<Emprendimiento_productoUpdateWithoutRela_prod_empInput, Emprendimiento_productoUncheckedUpdateWithoutRela_prod_empInput>
  }

  export type Emprendimiento_productoUpdateManyWithWhereWithoutRela_prod_empInput = {
    where: Emprendimiento_productoScalarWhereInput
    data: XOR<Emprendimiento_productoUpdateManyMutationInput, Emprendimiento_productoUncheckedUpdateManyWithoutRela_prod_empInput>
  }

  export type ProductosCreateWithoutRela_foto_produInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    emprendimiento?: EmprendimientoCreateNestedManyWithoutRela_produ_empInput
    materiales_producto?: Materiales_productoCreateNestedManyWithoutRela_prod_mateInput
    emprendimiento_productos?: Emprendimiento_productoCreateNestedManyWithoutRela_prod_empInput
  }

  export type ProductosUncheckedCreateWithoutRela_foto_produInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    emprendimiento?: EmprendimientoUncheckedCreateNestedManyWithoutRela_produ_empInput
    materiales_producto?: Materiales_productoUncheckedCreateNestedManyWithoutRela_prod_mateInput
    emprendimiento_productos?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_prod_empInput
  }

  export type ProductosCreateOrConnectWithoutRela_foto_produInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutRela_foto_produInput, ProductosUncheckedCreateWithoutRela_foto_produInput>
  }

  export type ProductosCreateManyRela_foto_produInputEnvelope = {
    data: ProductosCreateManyRela_foto_produInput | ProductosCreateManyRela_foto_produInput[]
    skipDuplicates?: boolean
  }

  export type EmprendimientoCreateWithoutRela_emp_prodfotoInput = {
    typo: string
    descripcion: string
    rela_produ_emp: ProductosCreateNestedOneWithoutEmprendimientoInput
    usuario?: UsuarioCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput = {
    typo: string
    descripcion: string
    producto: string
    usuario?: UsuarioUncheckedCreateNestedManyWithoutTypo_emprendimientoInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedCreateNestedManyWithoutRela_emp_markInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_emp_prodInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedCreateNestedManyWithoutRela_emp_usuempInput
  }

  export type EmprendimientoCreateOrConnectWithoutRela_emp_prodfotoInput = {
    where: EmprendimientoWhereUniqueInput
    create: XOR<EmprendimientoCreateWithoutRela_emp_prodfotoInput, EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput>
  }

  export type EmprendimientoCreateManyRela_emp_prodfotoInputEnvelope = {
    data: EmprendimientoCreateManyRela_emp_prodfotoInput | EmprendimientoCreateManyRela_emp_prodfotoInput[]
    skipDuplicates?: boolean
  }

  export type ProductosUpsertWithWhereUniqueWithoutRela_foto_produInput = {
    where: ProductosWhereUniqueInput
    update: XOR<ProductosUpdateWithoutRela_foto_produInput, ProductosUncheckedUpdateWithoutRela_foto_produInput>
    create: XOR<ProductosCreateWithoutRela_foto_produInput, ProductosUncheckedCreateWithoutRela_foto_produInput>
  }

  export type ProductosUpdateWithWhereUniqueWithoutRela_foto_produInput = {
    where: ProductosWhereUniqueInput
    data: XOR<ProductosUpdateWithoutRela_foto_produInput, ProductosUncheckedUpdateWithoutRela_foto_produInput>
  }

  export type ProductosUpdateManyWithWhereWithoutRela_foto_produInput = {
    where: ProductosScalarWhereInput
    data: XOR<ProductosUpdateManyMutationInput, ProductosUncheckedUpdateManyWithoutRela_foto_produInput>
  }

  export type ProductosScalarWhereInput = {
    AND?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
    OR?: ProductosScalarWhereInput[]
    NOT?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
    nombre_producto?: StringFilter<"Productos"> | string
    pasos?: StringFilter<"Productos"> | string
    descripcion?: StringFilter<"Productos"> | string
    foto?: IntFilter<"Productos"> | number
  }

  export type EmprendimientoUpsertWithWhereUniqueWithoutRela_emp_prodfotoInput = {
    where: EmprendimientoWhereUniqueInput
    update: XOR<EmprendimientoUpdateWithoutRela_emp_prodfotoInput, EmprendimientoUncheckedUpdateWithoutRela_emp_prodfotoInput>
    create: XOR<EmprendimientoCreateWithoutRela_emp_prodfotoInput, EmprendimientoUncheckedCreateWithoutRela_emp_prodfotoInput>
  }

  export type EmprendimientoUpdateWithWhereUniqueWithoutRela_emp_prodfotoInput = {
    where: EmprendimientoWhereUniqueInput
    data: XOR<EmprendimientoUpdateWithoutRela_emp_prodfotoInput, EmprendimientoUncheckedUpdateWithoutRela_emp_prodfotoInput>
  }

  export type EmprendimientoUpdateManyWithWhereWithoutRela_emp_prodfotoInput = {
    where: EmprendimientoScalarWhereInput
    data: XOR<EmprendimientoUpdateManyMutationInput, EmprendimientoUncheckedUpdateManyWithoutRela_emp_prodfotoInput>
  }

  export type ProductosCreateWithoutMateriales_productoInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    rela_foto_produ: Productos_fotoCreateNestedOneWithoutProductosInput
    emprendimiento?: EmprendimientoCreateNestedManyWithoutRela_produ_empInput
    emprendimiento_productos?: Emprendimiento_productoCreateNestedManyWithoutRela_prod_empInput
  }

  export type ProductosUncheckedCreateWithoutMateriales_productoInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
    foto: number
    emprendimiento?: EmprendimientoUncheckedCreateNestedManyWithoutRela_produ_empInput
    emprendimiento_productos?: Emprendimiento_productoUncheckedCreateNestedManyWithoutRela_prod_empInput
  }

  export type ProductosCreateOrConnectWithoutMateriales_productoInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutMateriales_productoInput, ProductosUncheckedCreateWithoutMateriales_productoInput>
  }

  export type MaterialesCreateWithoutMateriales_productoInput = {
    nombre: string
    rela_foto_mate: Materiales_fotoCreateNestedOneWithoutMaterialesInput
  }

  export type MaterialesUncheckedCreateWithoutMateriales_productoInput = {
    nombre: string
    foto_materiales: number
  }

  export type MaterialesCreateOrConnectWithoutMateriales_productoInput = {
    where: MaterialesWhereUniqueInput
    create: XOR<MaterialesCreateWithoutMateriales_productoInput, MaterialesUncheckedCreateWithoutMateriales_productoInput>
  }

  export type ProductosUpsertWithoutMateriales_productoInput = {
    update: XOR<ProductosUpdateWithoutMateriales_productoInput, ProductosUncheckedUpdateWithoutMateriales_productoInput>
    create: XOR<ProductosCreateWithoutMateriales_productoInput, ProductosUncheckedCreateWithoutMateriales_productoInput>
    where?: ProductosWhereInput
  }

  export type ProductosUpdateToOneWithWhereWithoutMateriales_productoInput = {
    where?: ProductosWhereInput
    data: XOR<ProductosUpdateWithoutMateriales_productoInput, ProductosUncheckedUpdateWithoutMateriales_productoInput>
  }

  export type ProductosUpdateWithoutMateriales_productoInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_foto_produ?: Productos_fotoUpdateOneRequiredWithoutProductosNestedInput
    emprendimiento?: EmprendimientoUpdateManyWithoutRela_produ_empNestedInput
    emprendimiento_productos?: Emprendimiento_productoUpdateManyWithoutRela_prod_empNestedInput
  }

  export type ProductosUncheckedUpdateWithoutMateriales_productoInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    foto?: IntFieldUpdateOperationsInput | number
    emprendimiento?: EmprendimientoUncheckedUpdateManyWithoutRela_produ_empNestedInput
    emprendimiento_productos?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_prod_empNestedInput
  }

  export type MaterialesUpsertWithoutMateriales_productoInput = {
    update: XOR<MaterialesUpdateWithoutMateriales_productoInput, MaterialesUncheckedUpdateWithoutMateriales_productoInput>
    create: XOR<MaterialesCreateWithoutMateriales_productoInput, MaterialesUncheckedCreateWithoutMateriales_productoInput>
    where?: MaterialesWhereInput
  }

  export type MaterialesUpdateToOneWithWhereWithoutMateriales_productoInput = {
    where?: MaterialesWhereInput
    data: XOR<MaterialesUpdateWithoutMateriales_productoInput, MaterialesUncheckedUpdateWithoutMateriales_productoInput>
  }

  export type MaterialesUpdateWithoutMateriales_productoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rela_foto_mate?: Materiales_fotoUpdateOneRequiredWithoutMaterialesNestedInput
  }

  export type MaterialesUncheckedUpdateWithoutMateriales_productoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    foto_materiales?: IntFieldUpdateOperationsInput | number
  }

  export type Materiales_fotoCreateWithoutMaterialesInput = {
    foto: string
  }

  export type Materiales_fotoUncheckedCreateWithoutMaterialesInput = {
    Id_materiales_foto?: number
    foto: string
  }

  export type Materiales_fotoCreateOrConnectWithoutMaterialesInput = {
    where: Materiales_fotoWhereUniqueInput
    create: XOR<Materiales_fotoCreateWithoutMaterialesInput, Materiales_fotoUncheckedCreateWithoutMaterialesInput>
  }

  export type Materiales_productoCreateWithoutRela_mate_produInput = {
    costo: number
    stock: number
    rela_prod_mate: ProductosCreateNestedOneWithoutMateriales_productoInput
  }

  export type Materiales_productoUncheckedCreateWithoutRela_mate_produInput = {
    Id_materiales_producto?: number
    costo: number
    stock: number
    nom_prod: string
  }

  export type Materiales_productoCreateOrConnectWithoutRela_mate_produInput = {
    where: Materiales_productoWhereUniqueInput
    create: XOR<Materiales_productoCreateWithoutRela_mate_produInput, Materiales_productoUncheckedCreateWithoutRela_mate_produInput>
  }

  export type Materiales_productoCreateManyRela_mate_produInputEnvelope = {
    data: Materiales_productoCreateManyRela_mate_produInput | Materiales_productoCreateManyRela_mate_produInput[]
    skipDuplicates?: boolean
  }

  export type Materiales_fotoUpsertWithoutMaterialesInput = {
    update: XOR<Materiales_fotoUpdateWithoutMaterialesInput, Materiales_fotoUncheckedUpdateWithoutMaterialesInput>
    create: XOR<Materiales_fotoCreateWithoutMaterialesInput, Materiales_fotoUncheckedCreateWithoutMaterialesInput>
    where?: Materiales_fotoWhereInput
  }

  export type Materiales_fotoUpdateToOneWithWhereWithoutMaterialesInput = {
    where?: Materiales_fotoWhereInput
    data: XOR<Materiales_fotoUpdateWithoutMaterialesInput, Materiales_fotoUncheckedUpdateWithoutMaterialesInput>
  }

  export type Materiales_fotoUpdateWithoutMaterialesInput = {
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Materiales_fotoUncheckedUpdateWithoutMaterialesInput = {
    Id_materiales_foto?: IntFieldUpdateOperationsInput | number
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type Materiales_productoUpsertWithWhereUniqueWithoutRela_mate_produInput = {
    where: Materiales_productoWhereUniqueInput
    update: XOR<Materiales_productoUpdateWithoutRela_mate_produInput, Materiales_productoUncheckedUpdateWithoutRela_mate_produInput>
    create: XOR<Materiales_productoCreateWithoutRela_mate_produInput, Materiales_productoUncheckedCreateWithoutRela_mate_produInput>
  }

  export type Materiales_productoUpdateWithWhereUniqueWithoutRela_mate_produInput = {
    where: Materiales_productoWhereUniqueInput
    data: XOR<Materiales_productoUpdateWithoutRela_mate_produInput, Materiales_productoUncheckedUpdateWithoutRela_mate_produInput>
  }

  export type Materiales_productoUpdateManyWithWhereWithoutRela_mate_produInput = {
    where: Materiales_productoScalarWhereInput
    data: XOR<Materiales_productoUpdateManyMutationInput, Materiales_productoUncheckedUpdateManyWithoutRela_mate_produInput>
  }

  export type MaterialesCreateWithoutRela_foto_mateInput = {
    nombre: string
    materiales_producto?: Materiales_productoCreateNestedManyWithoutRela_mate_produInput
  }

  export type MaterialesUncheckedCreateWithoutRela_foto_mateInput = {
    nombre: string
    materiales_producto?: Materiales_productoUncheckedCreateNestedManyWithoutRela_mate_produInput
  }

  export type MaterialesCreateOrConnectWithoutRela_foto_mateInput = {
    where: MaterialesWhereUniqueInput
    create: XOR<MaterialesCreateWithoutRela_foto_mateInput, MaterialesUncheckedCreateWithoutRela_foto_mateInput>
  }

  export type MaterialesCreateManyRela_foto_mateInputEnvelope = {
    data: MaterialesCreateManyRela_foto_mateInput | MaterialesCreateManyRela_foto_mateInput[]
    skipDuplicates?: boolean
  }

  export type MaterialesUpsertWithWhereUniqueWithoutRela_foto_mateInput = {
    where: MaterialesWhereUniqueInput
    update: XOR<MaterialesUpdateWithoutRela_foto_mateInput, MaterialesUncheckedUpdateWithoutRela_foto_mateInput>
    create: XOR<MaterialesCreateWithoutRela_foto_mateInput, MaterialesUncheckedCreateWithoutRela_foto_mateInput>
  }

  export type MaterialesUpdateWithWhereUniqueWithoutRela_foto_mateInput = {
    where: MaterialesWhereUniqueInput
    data: XOR<MaterialesUpdateWithoutRela_foto_mateInput, MaterialesUncheckedUpdateWithoutRela_foto_mateInput>
  }

  export type MaterialesUpdateManyWithWhereWithoutRela_foto_mateInput = {
    where: MaterialesScalarWhereInput
    data: XOR<MaterialesUpdateManyMutationInput, MaterialesUncheckedUpdateManyWithoutRela_foto_mateInput>
  }

  export type MaterialesScalarWhereInput = {
    AND?: MaterialesScalarWhereInput | MaterialesScalarWhereInput[]
    OR?: MaterialesScalarWhereInput[]
    NOT?: MaterialesScalarWhereInput | MaterialesScalarWhereInput[]
    nombre?: StringFilter<"Materiales"> | string
    foto_materiales?: IntFilter<"Materiales"> | number
  }

  export type Usuario_EmprendimientoCreateManyRela_usu_usuempInput = {
    Id_usu_emp?: number
    nom_color: string
    typo: string
  }

  export type Usuario_EmprendimientoUpdateWithoutRela_usu_usuempInput = {
    rela_colo_usuemp?: Colores_marcaUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput
    rela_emp_usuemp?: EmprendimientoUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput
  }

  export type Usuario_EmprendimientoUncheckedUpdateWithoutRela_usu_usuempInput = {
    Id_usu_emp?: IntFieldUpdateOperationsInput | number
    nom_color?: StringFieldUpdateOperationsInput | string
    typo?: StringFieldUpdateOperationsInput | string
  }

  export type Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_usu_usuempInput = {
    Id_usu_emp?: IntFieldUpdateOperationsInput | number
    nom_color?: StringFieldUpdateOperationsInput | string
    typo?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioCreateManyFotoInput = {
    email: string
    contra: string
    nombre: string
    typo_id: string
    contacto: number
  }

  export type ContactosCreateManyFotoInput = {
    Id_contactos?: number
    telefono: number
    nombre: string
    redes_soc: string
    notas_perz: string
    email_contactos: string
  }

  export type UsuarioUpdateWithoutFotoInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    typo_emprendimiento?: EmprendimientoUpdateOneRequiredWithoutUsuarioNestedInput
    Id_contactos?: ContactosUpdateOneRequiredWithoutUsuarioNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_usu_usuempNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutFotoInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    typo_id?: StringFieldUpdateOperationsInput | string
    contacto?: IntFieldUpdateOperationsInput | number
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_usu_usuempNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutFotoInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    typo_id?: StringFieldUpdateOperationsInput | string
    contacto?: IntFieldUpdateOperationsInput | number
  }

  export type ContactosUpdateWithoutFotoInput = {
    telefono?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    redes_soc?: StringFieldUpdateOperationsInput | string
    notas_perz?: StringFieldUpdateOperationsInput | string
    email_contactos?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateManyWithoutId_contactosNestedInput
  }

  export type ContactosUncheckedUpdateWithoutFotoInput = {
    Id_contactos?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    redes_soc?: StringFieldUpdateOperationsInput | string
    notas_perz?: StringFieldUpdateOperationsInput | string
    email_contactos?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUncheckedUpdateManyWithoutId_contactosNestedInput
  }

  export type ContactosUncheckedUpdateManyWithoutFotoInput = {
    Id_contactos?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    redes_soc?: StringFieldUpdateOperationsInput | string
    notas_perz?: StringFieldUpdateOperationsInput | string
    email_contactos?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioCreateManyId_contactosInput = {
    email: string
    contra: string
    nombre: string
    foto_perfil: number
    typo_id: string
  }

  export type UsuarioUpdateWithoutId_contactosInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto?: Foto_UsuarioUpdateOneRequiredWithoutUsuariosNestedInput
    typo_emprendimiento?: EmprendimientoUpdateOneRequiredWithoutUsuarioNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_usu_usuempNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutId_contactosInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto_perfil?: IntFieldUpdateOperationsInput | number
    typo_id?: StringFieldUpdateOperationsInput | string
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_usu_usuempNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutId_contactosInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto_perfil?: IntFieldUpdateOperationsInput | number
    typo_id?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioCreateManyTypo_emprendimientoInput = {
    email: string
    contra: string
    nombre: string
    foto_perfil: number
    contacto: number
  }

  export type Marketing_emprendimientoCreateManyRela_emp_markInput = {
    Id_marketing_emprendimiento?: number
    Id_mark: number
  }

  export type Emprendimiento_productoCreateManyRela_emp_prodInput = {
    Id_emp_prod?: number
    costo: number
    stock: number
    prod_emp: string
  }

  export type Usuario_EmprendimientoCreateManyRela_emp_usuempInput = {
    Id_usu_emp?: number
    nom_color: string
    email: string
  }

  export type UsuarioUpdateWithoutTypo_emprendimientoInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto?: Foto_UsuarioUpdateOneRequiredWithoutUsuariosNestedInput
    Id_contactos?: ContactosUpdateOneRequiredWithoutUsuarioNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_usu_usuempNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutTypo_emprendimientoInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto_perfil?: IntFieldUpdateOperationsInput | number
    contacto?: IntFieldUpdateOperationsInput | number
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_usu_usuempNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutTypo_emprendimientoInput = {
    email?: StringFieldUpdateOperationsInput | string
    contra?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    foto_perfil?: IntFieldUpdateOperationsInput | number
    contacto?: IntFieldUpdateOperationsInput | number
  }

  export type Marketing_emprendimientoUpdateWithoutRela_emp_markInput = {
    rela_mark_emp?: MarketingUpdateOneRequiredWithoutMarketing_emprendimientoNestedInput
  }

  export type Marketing_emprendimientoUncheckedUpdateWithoutRela_emp_markInput = {
    Id_marketing_emprendimiento?: IntFieldUpdateOperationsInput | number
    Id_mark?: IntFieldUpdateOperationsInput | number
  }

  export type Marketing_emprendimientoUncheckedUpdateManyWithoutRela_emp_markInput = {
    Id_marketing_emprendimiento?: IntFieldUpdateOperationsInput | number
    Id_mark?: IntFieldUpdateOperationsInput | number
  }

  export type Emprendimiento_productoUpdateWithoutRela_emp_prodInput = {
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    rela_prod_emp?: ProductosUpdateOneRequiredWithoutEmprendimiento_productosNestedInput
  }

  export type Emprendimiento_productoUncheckedUpdateWithoutRela_emp_prodInput = {
    Id_emp_prod?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    prod_emp?: StringFieldUpdateOperationsInput | string
  }

  export type Emprendimiento_productoUncheckedUpdateManyWithoutRela_emp_prodInput = {
    Id_emp_prod?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    prod_emp?: StringFieldUpdateOperationsInput | string
  }

  export type Usuario_EmprendimientoUpdateWithoutRela_emp_usuempInput = {
    rela_colo_usuemp?: Colores_marcaUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput
    rela_usu_usuemp?: UsuarioUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput
  }

  export type Usuario_EmprendimientoUncheckedUpdateWithoutRela_emp_usuempInput = {
    Id_usu_emp?: IntFieldUpdateOperationsInput | number
    nom_color?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
  }

  export type Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_emp_usuempInput = {
    Id_usu_emp?: IntFieldUpdateOperationsInput | number
    nom_color?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
  }

  export type Usuario_EmprendimientoCreateManyRela_colo_usuempInput = {
    Id_usu_emp?: number
    email: string
    typo: string
  }

  export type Usuario_EmprendimientoUpdateWithoutRela_colo_usuempInput = {
    rela_usu_usuemp?: UsuarioUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput
    rela_emp_usuemp?: EmprendimientoUpdateOneRequiredWithoutUsuario_emprendimientoNestedInput
  }

  export type Usuario_EmprendimientoUncheckedUpdateWithoutRela_colo_usuempInput = {
    Id_usu_emp?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    typo?: StringFieldUpdateOperationsInput | string
  }

  export type Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_colo_usuempInput = {
    Id_usu_emp?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    typo?: StringFieldUpdateOperationsInput | string
  }

  export type Marketing_emprendimientoCreateManyRela_mark_empInput = {
    Id_marketing_emprendimiento?: number
    typo_emp: string
  }

  export type Marketing_emprendimientoUpdateWithoutRela_mark_empInput = {
    rela_emp_mark?: EmprendimientoUpdateOneRequiredWithoutMarketing_emprendimientoNestedInput
  }

  export type Marketing_emprendimientoUncheckedUpdateWithoutRela_mark_empInput = {
    Id_marketing_emprendimiento?: IntFieldUpdateOperationsInput | number
    typo_emp?: StringFieldUpdateOperationsInput | string
  }

  export type Marketing_emprendimientoUncheckedUpdateManyWithoutRela_mark_empInput = {
    Id_marketing_emprendimiento?: IntFieldUpdateOperationsInput | number
    typo_emp?: StringFieldUpdateOperationsInput | string
  }

  export type MarketingCreateManyRela_publi_markInput = {
    Id_marketing?: number
  }

  export type MarketingUpdateWithoutRela_publi_markInput = {
    marketing_emprendimiento?: Marketing_emprendimientoUpdateManyWithoutRela_mark_empNestedInput
  }

  export type MarketingUncheckedUpdateWithoutRela_publi_markInput = {
    Id_marketing?: IntFieldUpdateOperationsInput | number
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedUpdateManyWithoutRela_mark_empNestedInput
  }

  export type MarketingUncheckedUpdateManyWithoutRela_publi_markInput = {
    Id_marketing?: IntFieldUpdateOperationsInput | number
  }

  export type PublicacionesCreateManyRela_foto_publiInput = {
    link_plantilla: string
    desc: string
    nombre: string
  }

  export type PublicacionesUpdateWithoutRela_foto_publiInput = {
    link_plantilla?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    marketing?: MarketingUpdateManyWithoutRela_publi_markNestedInput
  }

  export type PublicacionesUncheckedUpdateWithoutRela_foto_publiInput = {
    link_plantilla?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    marketing?: MarketingUncheckedUpdateManyWithoutRela_publi_markNestedInput
  }

  export type PublicacionesUncheckedUpdateManyWithoutRela_foto_publiInput = {
    link_plantilla?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EmprendimientoCreateManyRela_produ_empInput = {
    typo: string
    descripcion: string
    producto_foto: number
  }

  export type Materiales_productoCreateManyRela_prod_mateInput = {
    Id_materiales_producto?: number
    costo: number
    stock: number
    nom_mat: string
  }

  export type Emprendimiento_productoCreateManyRela_prod_empInput = {
    Id_emp_prod?: number
    costo: number
    stock: number
    emp_prod: string
  }

  export type EmprendimientoUpdateWithoutRela_produ_empInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_emp_prodfoto?: Productos_fotoUpdateOneRequiredWithoutEmprendimiento_productofotoNestedInput
    usuario?: UsuarioUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type EmprendimientoUncheckedUpdateWithoutRela_produ_empInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto_foto?: IntFieldUpdateOperationsInput | number
    usuario?: UsuarioUncheckedUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type EmprendimientoUncheckedUpdateManyWithoutRela_produ_empInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto_foto?: IntFieldUpdateOperationsInput | number
  }

  export type Materiales_productoUpdateWithoutRela_prod_mateInput = {
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    rela_mate_produ?: MaterialesUpdateOneRequiredWithoutMateriales_productoNestedInput
  }

  export type Materiales_productoUncheckedUpdateWithoutRela_prod_mateInput = {
    Id_materiales_producto?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    nom_mat?: StringFieldUpdateOperationsInput | string
  }

  export type Materiales_productoUncheckedUpdateManyWithoutRela_prod_mateInput = {
    Id_materiales_producto?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    nom_mat?: StringFieldUpdateOperationsInput | string
  }

  export type Emprendimiento_productoUpdateWithoutRela_prod_empInput = {
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    rela_emp_prod?: EmprendimientoUpdateOneRequiredWithoutEmprendimiento_productoNestedInput
  }

  export type Emprendimiento_productoUncheckedUpdateWithoutRela_prod_empInput = {
    Id_emp_prod?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    emp_prod?: StringFieldUpdateOperationsInput | string
  }

  export type Emprendimiento_productoUncheckedUpdateManyWithoutRela_prod_empInput = {
    Id_emp_prod?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    emp_prod?: StringFieldUpdateOperationsInput | string
  }

  export type ProductosCreateManyRela_foto_produInput = {
    nombre_producto: string
    pasos: string
    descripcion: string
  }

  export type EmprendimientoCreateManyRela_emp_prodfotoInput = {
    typo: string
    descripcion: string
    producto: string
  }

  export type ProductosUpdateWithoutRela_foto_produInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    emprendimiento?: EmprendimientoUpdateManyWithoutRela_produ_empNestedInput
    materiales_producto?: Materiales_productoUpdateManyWithoutRela_prod_mateNestedInput
    emprendimiento_productos?: Emprendimiento_productoUpdateManyWithoutRela_prod_empNestedInput
  }

  export type ProductosUncheckedUpdateWithoutRela_foto_produInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    emprendimiento?: EmprendimientoUncheckedUpdateManyWithoutRela_produ_empNestedInput
    materiales_producto?: Materiales_productoUncheckedUpdateManyWithoutRela_prod_mateNestedInput
    emprendimiento_productos?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_prod_empNestedInput
  }

  export type ProductosUncheckedUpdateManyWithoutRela_foto_produInput = {
    nombre_producto?: StringFieldUpdateOperationsInput | string
    pasos?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type EmprendimientoUpdateWithoutRela_emp_prodfotoInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    rela_produ_emp?: ProductosUpdateOneRequiredWithoutEmprendimientoNestedInput
    usuario?: UsuarioUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type EmprendimientoUncheckedUpdateWithoutRela_emp_prodfotoInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUncheckedUpdateManyWithoutTypo_emprendimientoNestedInput
    marketing_emprendimiento?: Marketing_emprendimientoUncheckedUpdateManyWithoutRela_emp_markNestedInput
    emprendimiento_producto?: Emprendimiento_productoUncheckedUpdateManyWithoutRela_emp_prodNestedInput
    usuario_emprendimiento?: Usuario_EmprendimientoUncheckedUpdateManyWithoutRela_emp_usuempNestedInput
  }

  export type EmprendimientoUncheckedUpdateManyWithoutRela_emp_prodfotoInput = {
    typo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    producto?: StringFieldUpdateOperationsInput | string
  }

  export type Materiales_productoCreateManyRela_mate_produInput = {
    Id_materiales_producto?: number
    costo: number
    stock: number
    nom_prod: string
  }

  export type Materiales_productoUpdateWithoutRela_mate_produInput = {
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    rela_prod_mate?: ProductosUpdateOneRequiredWithoutMateriales_productoNestedInput
  }

  export type Materiales_productoUncheckedUpdateWithoutRela_mate_produInput = {
    Id_materiales_producto?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    nom_prod?: StringFieldUpdateOperationsInput | string
  }

  export type Materiales_productoUncheckedUpdateManyWithoutRela_mate_produInput = {
    Id_materiales_producto?: IntFieldUpdateOperationsInput | number
    costo?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    nom_prod?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialesCreateManyRela_foto_mateInput = {
    nombre: string
  }

  export type MaterialesUpdateWithoutRela_foto_mateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    materiales_producto?: Materiales_productoUpdateManyWithoutRela_mate_produNestedInput
  }

  export type MaterialesUncheckedUpdateWithoutRela_foto_mateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    materiales_producto?: Materiales_productoUncheckedUpdateManyWithoutRela_mate_produNestedInput
  }

  export type MaterialesUncheckedUpdateManyWithoutRela_foto_mateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}