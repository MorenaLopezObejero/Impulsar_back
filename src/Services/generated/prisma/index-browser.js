
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  email: 'email',
  contra: 'contra',
  nombre: 'nombre',
  foto_perfil: 'foto_perfil',
  typo_id: 'typo_id',
  contacto: 'contacto'
};

exports.Prisma.Usuario_EmprendimientoScalarFieldEnum = {
  Id_usu_emp: 'Id_usu_emp',
  nom_color: 'nom_color',
  email: 'email',
  typo: 'typo'
};

exports.Prisma.Foto_UsuarioScalarFieldEnum = {
  Id_fotousu: 'Id_fotousu',
  foto_perfil: 'foto_perfil'
};

exports.Prisma.ContactosScalarFieldEnum = {
  Id_contactos: 'Id_contactos',
  telefono: 'telefono',
  nombre: 'nombre',
  redes_soc: 'redes_soc',
  notas_perz: 'notas_perz',
  email_contactos: 'email_contactos',
  foto_contacto: 'foto_contacto'
};

exports.Prisma.EmprendimientoScalarFieldEnum = {
  typo: 'typo',
  descripcion: 'descripcion',
  producto_foto: 'producto_foto',
  producto: 'producto'
};

exports.Prisma.Emprendimiento_productoScalarFieldEnum = {
  Id_emp_prod: 'Id_emp_prod',
  costo: 'costo',
  stock: 'stock',
  emp_prod: 'emp_prod',
  prod_emp: 'prod_emp'
};

exports.Prisma.Colores_marcaScalarFieldEnum = {
  nom_colores: 'nom_colores',
  foto: 'foto'
};

exports.Prisma.Marketing_emprendimientoScalarFieldEnum = {
  Id_marketing_emprendimiento: 'Id_marketing_emprendimiento',
  typo_emp: 'typo_emp',
  Id_mark: 'Id_mark'
};

exports.Prisma.MarketingScalarFieldEnum = {
  Id_marketing: 'Id_marketing',
  publicacion: 'publicacion'
};

exports.Prisma.PublicacionesScalarFieldEnum = {
  link_plantilla: 'link_plantilla',
  desc: 'desc',
  nombre: 'nombre',
  foto: 'foto'
};

exports.Prisma.Publicaciones_fotoScalarFieldEnum = {
  Id_publicaciones_foto: 'Id_publicaciones_foto',
  foto: 'foto'
};

exports.Prisma.ProductosScalarFieldEnum = {
  nombre_producto: 'nombre_producto',
  pasos: 'pasos',
  descripcion: 'descripcion',
  foto: 'foto'
};

exports.Prisma.Productos_fotoScalarFieldEnum = {
  Id_productos_foto: 'Id_productos_foto',
  foto: 'foto'
};

exports.Prisma.Materiales_productoScalarFieldEnum = {
  Id_materiales_producto: 'Id_materiales_producto',
  costo: 'costo',
  stock: 'stock',
  nom_prod: 'nom_prod',
  nom_mat: 'nom_mat'
};

exports.Prisma.MaterialesScalarFieldEnum = {
  nombre: 'nombre',
  foto_materiales: 'foto_materiales'
};

exports.Prisma.Materiales_fotoScalarFieldEnum = {
  Id_materiales_foto: 'Id_materiales_foto',
  foto: 'foto'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Usuario_Emprendimiento: 'Usuario_Emprendimiento',
  Foto_Usuario: 'Foto_Usuario',
  Contactos: 'Contactos',
  Emprendimiento: 'Emprendimiento',
  Emprendimiento_producto: 'Emprendimiento_producto',
  Colores_marca: 'Colores_marca',
  Marketing_emprendimiento: 'Marketing_emprendimiento',
  Marketing: 'Marketing',
  Publicaciones: 'Publicaciones',
  Publicaciones_foto: 'Publicaciones_foto',
  Productos: 'Productos',
  Productos_foto: 'Productos_foto',
  Materiales_producto: 'Materiales_producto',
  Materiales: 'Materiales',
  Materiales_foto: 'Materiales_foto'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
